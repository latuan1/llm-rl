[
    {
        "f": [],
        "fm": "int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {\r         int m = obstacleGrid.size();\r         if (m == 0) return 0;\r         int n = obstacleGrid[0].size();\r         if (obstacleGrid[0][0] == 1) return 0;\r         vector<int> maxV(n, 0);\r         maxV[0] = 1;\r         for (int i = 0; i < m; i++)\r         {\r             for (int j = 0; j < n; j++)\r             {\r                 if (obstacleGrid[i][j] == 1)\r                     maxV[j] = 0;\r                 else if (j > 0)\r                     maxV[j] = maxV[j - 1] + maxV[j];\r             }\r         }\r         return maxV[n - 1];\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Unique_Paths_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Unique_Paths_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Unique_Paths_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Unique_Paths_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Unique_Paths_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "uniquePathsWithObstacles(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "obstacleGrid",
                                    "virtual_name": "EXPECTED_obstacleGrid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\obstacleGrid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "obstacleGrid",
                                    "virtual_name": "obstacleGrid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\obstacleGrid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "obstacleGrid_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\obstacleGrid\\element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 3,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "obstacleGrid_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\obstacleGrid\\element #0\\element #0",
                                                    "correspondingType": "int",
                                                    "value": "1870390428"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "obstacleGrid_element0_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\obstacleGrid\\element #0\\element #1",
                                                    "correspondingType": "int",
                                                    "value": "-692400214"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #2",
                                                    "virtual_name": "obstacleGrid_element0_element2",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\obstacleGrid\\element #0\\element #2",
                                                    "correspondingType": "int",
                                                    "value": "1777716931"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_uniquePathsWithObstacles_vector_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_uniquePathsWithObstacles_vector_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Unique_Paths_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> obstacleGrid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode obstacleGrid */\nvector<int> obstacleGrid_element0;\nint obstacleGrid_element0_element0=1870390428;\nobstacleGrid_element0.push_back(obstacleGrid_element0_element0);\nint obstacleGrid_element0_element1=-692400214;\nobstacleGrid_element0.push_back(obstacleGrid_element0_element1);\nint obstacleGrid_element0_element2=1777716931;\nobstacleGrid_element0.push_back(obstacleGrid_element0_element2);\nobstacleGrid.push_back(obstacleGrid_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_uniquePathsWithObstacles_vector_vector_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->uniquePathsWithObstacles(obstacleGrid);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Unique_Paths_II.cpp\\\\Solution\\\\uniquePathsWithObstacles(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_obstacleGrid;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Unique_Paths_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> obstacleGrid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode obstacleGrid */\nvector<int> obstacleGrid_element0;\nint obstacleGrid_element0_element0=1870390428;\nobstacleGrid_element0.push_back(obstacleGrid_element0_element0);\nint obstacleGrid_element0_element1=-692400214;\nobstacleGrid_element0.push_back(obstacleGrid_element0_element1);\nint obstacleGrid_element0_element2=1777716931;\nobstacleGrid_element0.push_back(obstacleGrid_element0_element2);\nobstacleGrid.push_back(obstacleGrid_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Unique_Paths_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Unique_Paths_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Unique_Paths_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Unique_Paths_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Unique_Paths_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "uniquePathsWithObstacles(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "obstacleGrid",
                                    "virtual_name": "EXPECTED_obstacleGrid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\obstacleGrid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "obstacleGrid",
                                    "virtual_name": "obstacleGrid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\obstacleGrid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_uniquePathsWithObstacles_vector_vector_int_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_uniquePathsWithObstacles_vector_vector_int_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Unique_Paths_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> obstacleGrid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode obstacleGrid */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_uniquePathsWithObstacles_vector_vector_int_directed_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->uniquePathsWithObstacles(obstacleGrid);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Unique_Paths_II.cpp\\\\Solution\\\\uniquePathsWithObstacles(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_obstacleGrid;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Unique_Paths_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> obstacleGrid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode obstacleGrid */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Unique_Paths_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Unique_Paths_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Unique_Paths_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Unique_Paths_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Unique_Paths_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "uniquePathsWithObstacles(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "obstacleGrid",
                                    "virtual_name": "EXPECTED_obstacleGrid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\obstacleGrid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "obstacleGrid",
                                    "virtual_name": "obstacleGrid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\obstacleGrid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_uniquePathsWithObstacles_vector_vector_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_uniquePathsWithObstacles_vector_vector_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Unique_Paths_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> obstacleGrid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode obstacleGrid */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_uniquePathsWithObstacles_vector_vector_int_directed_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->uniquePathsWithObstacles(obstacleGrid);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Unique_Paths_II.cpp\\\\Solution\\\\uniquePathsWithObstacles(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_obstacleGrid;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Unique_Paths_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> obstacleGrid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode obstacleGrid */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Unique_Paths_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Unique_Paths_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Unique_Paths_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Unique_Paths_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Unique_Paths_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "uniquePathsWithObstacles(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "obstacleGrid",
                                    "virtual_name": "EXPECTED_obstacleGrid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\obstacleGrid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "obstacleGrid",
                                    "virtual_name": "obstacleGrid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\obstacleGrid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_uniquePathsWithObstacles_vector_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_uniquePathsWithObstacles_vector_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Unique_Paths_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> obstacleGrid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode obstacleGrid */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_uniquePathsWithObstacles_vector_vector_int_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->uniquePathsWithObstacles(obstacleGrid);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Unique_Paths_II.cpp\\\\Solution\\\\uniquePathsWithObstacles(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_obstacleGrid;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Unique_Paths_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> obstacleGrid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode obstacleGrid */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {\r         int m = obstacleGrid.size();\r         if (m == 0) return 0;\r         int n = obstacleGrid[0].size();\r         if (obstacleGrid[0][0] == 1) return 0;\r         vector<int> maxV(n, 0);\r         maxV[0] = 1;\r         for (int i = 0; i < m; i++)\r         {\r             for (int j = 0; j < n; j++)\r             {\r                 if (obstacleGrid[i][j] == 1)\r                     maxV[j] = 0;\r                 else if (j > 0)\r                     maxV[j] = maxV[j - 1] + maxV[j];\r             }\r         }\r         return maxV[n - 1];\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\json27\\Unique_Paths_II.cpp\\Solution\\uniquePathsWithObstacles(vector<vector<int>>&)"
    },
    {
        "f": [],
        "fm": "bool isAnagram(string s, string t) {\r         vector<int> charcount(26, 0);\r         for(int i =0; i< s.length(); i++) {\r             charcount[s[i] - 'a'] ++;\r         }\r         \r         for(int i =0; i< t.length(); i++) {\r             charcount[t[i] - 'a'] --;\r         }\r         \r         for(int i =0; i<charcount.size(); i++) {\r             if(charcount[i] != 0) {\r                 return false;\r             }\r         }\r         \r         return true;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "7",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[0]",
                                            "virtual_name": "t[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t\\t[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName413594 = new char[2];akaRandomName413594[0] = 97;akaRandomName413594[1] = '\\0';string s=akaRandomName413594;\nchar* akaRandomName472323 = new char[2];akaRandomName472323[0] = 97;akaRandomName472323[1] = '\\0';string t=akaRandomName472323;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName386898 = new char[2];akaRandomName386898[0] = 97;akaRandomName386898[1] = '\\0';string s=akaRandomName386898;\nchar* akaRandomName827823 = new char[2];akaRandomName827823[0] = 97;akaRandomName827823[1] = '\\0';string t=akaRandomName827823;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "7",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[0]",
                                            "virtual_name": "t[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t\\t[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName802146 = new char[2];akaRandomName802146[0] = 97;akaRandomName802146[1] = '\\0';string s=akaRandomName802146;\nchar* akaRandomName95394 = new char[2];akaRandomName95394[0] = 97;akaRandomName95394[1] = '\\0';string t=akaRandomName95394;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName85329 = new char[2];akaRandomName85329[0] = 97;akaRandomName85329[1] = '\\0';string s=akaRandomName85329;\nchar* akaRandomName311108 = new char[2];akaRandomName311108[0] = 97;akaRandomName311108[1] = '\\0';string t=akaRandomName311108;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "9",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[0]",
                                            "virtual_name": "t[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t\\t[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName706886 = new char[2];akaRandomName706886[0] = 97;akaRandomName706886[1] = '\\0';string s=akaRandomName706886;\nchar* akaRandomName962933 = new char[2];akaRandomName962933[0] = 97;akaRandomName962933[1] = '\\0';string t=akaRandomName962933;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName642890 = new char[2];akaRandomName642890[0] = 97;akaRandomName642890[1] = '\\0';string s=akaRandomName642890;\nchar* akaRandomName556653 = new char[2];akaRandomName556653[0] = 97;akaRandomName556653[1] = '\\0';string t=akaRandomName556653;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_14(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_14\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName959895 = new char[2];akaRandomName959895[0] = 97;akaRandomName959895[1] = '\\0';string s=akaRandomName959895;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_14\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName424912 = new char[2];akaRandomName424912[0] = 97;akaRandomName424912[1] = '\\0';string s=akaRandomName424912;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "7",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[0]",
                                            "virtual_name": "t[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t\\t[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_15(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_15\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName566999 = new char[2];akaRandomName566999[0] = 97;akaRandomName566999[1] = '\\0';string s=akaRandomName566999;\nchar* akaRandomName308146 = new char[2];akaRandomName308146[0] = 97;akaRandomName308146[1] = '\\0';string t=akaRandomName308146;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_15\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName115885 = new char[2];akaRandomName115885[0] = 97;akaRandomName115885[1] = '\\0';string s=akaRandomName115885;\nchar* akaRandomName97600 = new char[2];akaRandomName97600[0] = 97;akaRandomName97600[1] = '\\0';string t=akaRandomName97600;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "4",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_12(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_12\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName183071 = new char[2];akaRandomName183071[0] = 97;akaRandomName183071[1] = '\\0';string s=akaRandomName183071;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_12\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName598235 = new char[2];akaRandomName598235[0] = 97;akaRandomName598235[1] = '\\0';string s=akaRandomName598235;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "7",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[0]",
                                            "virtual_name": "t[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t\\t[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_13(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_13\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName355988 = new char[2];akaRandomName355988[0] = 97;akaRandomName355988[1] = '\\0';string s=akaRandomName355988;\nchar* akaRandomName89504 = new char[2];akaRandomName89504[0] = 97;akaRandomName89504[1] = '\\0';string t=akaRandomName89504;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_13\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName868517 = new char[2];akaRandomName868517[0] = 97;akaRandomName868517[1] = '\\0';string s=akaRandomName868517;\nchar* akaRandomName119487 = new char[2];akaRandomName119487[0] = 97;akaRandomName119487[1] = '\\0';string t=akaRandomName119487;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[0]",
                                            "virtual_name": "t[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t\\t[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_10(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_10\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName928708 = new char[2];akaRandomName928708[0] = 97;akaRandomName928708[1] = '\\0';string s=akaRandomName928708;\nchar* akaRandomName681908 = new char[2];akaRandomName681908[0] = 97;akaRandomName681908[1] = '\\0';string t=akaRandomName681908;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_10\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName215952 = new char[2];akaRandomName215952[0] = 97;akaRandomName215952[1] = '\\0';string s=akaRandomName215952;\nchar* akaRandomName846426 = new char[2];akaRandomName846426[0] = 97;akaRandomName846426[1] = '\\0';string t=akaRandomName846426;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 8,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "4",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[0]",
                                            "virtual_name": "t[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t\\t[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_11(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_11\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName182033 = new char[2];akaRandomName182033[0] = 97;akaRandomName182033[1] = '\\0';string s=akaRandomName182033;\nchar* akaRandomName324386 = new char[2];akaRandomName324386[0] = 97;akaRandomName324386[1] = '\\0';string t=akaRandomName324386;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_11\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName117705 = new char[2];akaRandomName117705[0] = 97;akaRandomName117705[1] = '\\0';string s=akaRandomName117705;\nchar* akaRandomName748578 = new char[2];akaRandomName748578[0] = 97;akaRandomName748578[1] = '\\0';string t=akaRandomName748578;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 9,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_8(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_8\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName841287 = new char[2];akaRandomName841287[0] = 97;akaRandomName841287[1] = '\\0';string s=akaRandomName841287;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_8\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName22347 = new char[2];akaRandomName22347[0] = 97;akaRandomName22347[1] = '\\0';string s=akaRandomName22347;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 10,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "4",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "10",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[0]",
                                            "virtual_name": "t[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t\\t[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[1]",
                                            "virtual_name": "t[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t\\t[1]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_7(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName383567 = new char[2];akaRandomName383567[0] = 97;akaRandomName383567[1] = '\\0';string s=akaRandomName383567;\nchar* akaRandomName715964 = new char[3];akaRandomName715964[0] = 97;akaRandomName715964[1] = 97;akaRandomName715964[2] = '\\0';string t=akaRandomName715964;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_7\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName529148 = new char[2];akaRandomName529148[0] = 97;akaRandomName529148[1] = '\\0';string s=akaRandomName529148;\nchar* akaRandomName786477 = new char[3];akaRandomName786477[0] = 97;akaRandomName786477[1] = 97;akaRandomName786477[2] = '\\0';string t=akaRandomName786477;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 11,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_9(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_9\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName528619 = new char[2];akaRandomName528619[0] = 97;akaRandomName528619[1] = '\\0';string s=akaRandomName528619;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_9\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName55851 = new char[2];akaRandomName55851[0] = 97;akaRandomName55851[1] = '\\0';string s=akaRandomName55851;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 12,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "9",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName258864 = new char[2];akaRandomName258864[0] = 97;akaRandomName258864[1] = '\\0';string s=akaRandomName258864;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName755912 = new char[2];akaRandomName755912[0] = 97;akaRandomName755912[1] = '\\0';string s=akaRandomName755912;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 13,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[0]",
                                            "virtual_name": "t[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t\\t[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName101708 = new char[2];akaRandomName101708[0] = 97;akaRandomName101708[1] = '\\0';string s=akaRandomName101708;\nchar* akaRandomName262241 = new char[2];akaRandomName262241[0] = 97;akaRandomName262241[1] = '\\0';string t=akaRandomName262241;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName666933 = new char[2];akaRandomName666933[0] = 97;akaRandomName666933[1] = '\\0';string s=akaRandomName666933;\nchar* akaRandomName683809 = new char[2];akaRandomName683809[0] = 97;akaRandomName683809[1] = '\\0';string t=akaRandomName683809;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 14,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "6",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_6(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName657407 = new char[2];akaRandomName657407[0] = 97;akaRandomName657407[1] = '\\0';string s=akaRandomName657407;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_6\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName846292 = new char[2];akaRandomName846292[0] = 97;akaRandomName846292[1] = '\\0';string s=akaRandomName846292;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 15,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "124"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[0]",
                                            "virtual_name": "t[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t\\t[0]",
                                            "correspondingType": "char",
                                            "value": "-96"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName503981 = new char[2];akaRandomName503981[0] = 124;akaRandomName503981[1] = '\\0';string s=akaRandomName503981;\nchar* akaRandomName570068 = new char[2];akaRandomName570068[0] = -96;akaRandomName570068[1] = '\\0';string t=akaRandomName570068;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_random_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName975904 = new char[2];akaRandomName975904[0] = 124;akaRandomName975904[1] = '\\0';string s=akaRandomName975904;\nchar* akaRandomName597591 = new char[2];akaRandomName597591[0] = -96;akaRandomName597591[1] = '\\0';string t=akaRandomName597591;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 16,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid Anagram.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid Anagram.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid Anagram.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAnagram(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "10",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAnagram_string_string_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName994205 = new char[3];akaRandomName994205[0] = 97;akaRandomName994205[1] = 97;akaRandomName994205[2] = '\\0';string s=akaRandomName994205;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_directed_5\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid Anagram.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid Anagram.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName221216 = new char[3];akaRandomName221216[0] = 97;akaRandomName221216[1] = 97;akaRandomName221216[2] = '\\0';string s=akaRandomName221216;\nstring t=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isAnagram(string s, string t) {\r         vector<int> charcount(26, 0);\r         for(int i =0; i< s.length(); i++) {\r             charcount[s[i] - 'a'] ++;\r         }\r         \r         for(int i =0; i< t.length(); i++) {\r             charcount[t[i] - 'a'] --;\r         }\r         \r         for(int i =0; i<charcount.size(); i++) {\r             if(charcount[i] != 0) {\r                 return false;\r             }\r         }\r         \r         return true;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\json27\\Valid Anagram.cpp\\Solution\\isAnagram(string,string)"
    },
    {
        "f": [],
        "fm": "bool isPalindrome(string s) {\r         int start = 0;\r         int end = s.size() - 1;\r         std::transform(\r             s.begin(), s.end(), s.begin(), ::tolower);\r         while (start < end)\r         {\r             //filter non-alpha char\r             while (start < end && !isAlpha(s[start])) start++;\r             //filter non-alpha char\r             while (start < end && !isAlpha(s[end])) end--;\r             if (s[start] != s[end]) break;\r             start++;\r             end--;\r         }\r         if (start >= end)\r             return true;\r         else\r             return false;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "118"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName352600 = new char[2];akaRandomName352600[0] = 118;akaRandomName352600[1] = '\\0';string s=akaRandomName352600;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName325175 = new char[2];akaRandomName325175[0] = 118;akaRandomName325175[1] = '\\0';string s=akaRandomName325175;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "-13"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName156941 = new char[2];akaRandomName156941[0] = -13;akaRandomName156941[1] = '\\0';string s=akaRandomName156941;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_random_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName270740 = new char[2];akaRandomName270740[0] = -13;akaRandomName270740[1] = '\\0';string s=akaRandomName270740;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_18(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_18\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName215015 = new char[2];akaRandomName215015[0] = 0;akaRandomName215015[1] = '\\0';string s=akaRandomName215015;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_18\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName794020 = new char[2];akaRandomName794020[0] = 0;akaRandomName794020[1] = '\\0';string s=akaRandomName794020;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "10",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_19(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_19\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName411276 = new char[3];akaRandomName411276[0] = 0;akaRandomName411276[1] = 0;akaRandomName411276[2] = '\\0';string s=akaRandomName411276;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_19\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName795982 = new char[3];akaRandomName795982[0] = 0;akaRandomName795982[1] = 0;akaRandomName795982[2] = '\\0';string s=akaRandomName795982;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "6",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_16(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_16\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName179821 = new char[2];akaRandomName179821[0] = 0;akaRandomName179821[1] = '\\0';string s=akaRandomName179821;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_16\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName558082 = new char[2];akaRandomName558082[0] = 0;akaRandomName558082[1] = '\\0';string s=akaRandomName558082;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_17(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_17\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName984628 = new char[2];akaRandomName984628[0] = 0;akaRandomName984628[1] = '\\0';string s=akaRandomName984628;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_17\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName950268 = new char[2];akaRandomName950268[0] = 0;akaRandomName950268[1] = '\\0';string s=akaRandomName950268;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "7",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_14(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_14\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName208481 = new char[2];akaRandomName208481[0] = 0;akaRandomName208481[1] = '\\0';string s=akaRandomName208481;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_14\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName203871 = new char[2];akaRandomName203871[0] = 0;akaRandomName203871[1] = '\\0';string s=akaRandomName203871;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "9",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_15(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_15\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName269991 = new char[2];akaRandomName269991[0] = 0;akaRandomName269991[1] = '\\0';string s=akaRandomName269991;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_15\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName767436 = new char[2];akaRandomName767436[0] = 0;akaRandomName767436[1] = '\\0';string s=akaRandomName767436;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 8,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "4",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_12(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_12\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName576322 = new char[2];akaRandomName576322[0] = 0;akaRandomName576322[1] = '\\0';string s=akaRandomName576322;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_12\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName39475 = new char[2];akaRandomName39475[0] = 0;akaRandomName39475[1] = '\\0';string s=akaRandomName39475;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 9,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "6",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_13(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_13\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName714166 = new char[2];akaRandomName714166[0] = 0;akaRandomName714166[1] = '\\0';string s=akaRandomName714166;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_13\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName194614 = new char[2];akaRandomName194614[0] = 0;akaRandomName194614[1] = '\\0';string s=akaRandomName194614;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 10,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "19",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_21(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_21\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName545003 = new char[3];akaRandomName545003[0] = 0;akaRandomName545003[1] = 0;akaRandomName545003[2] = '\\0';string s=akaRandomName545003;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_21\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName198391 = new char[3];akaRandomName198391[0] = 0;akaRandomName198391[1] = 0;akaRandomName198391[2] = '\\0';string s=akaRandomName198391;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 11,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "21",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_22(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_22\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName30349 = new char[3];akaRandomName30349[0] = 0;akaRandomName30349[1] = 0;akaRandomName30349[2] = '\\0';string s=akaRandomName30349;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_22\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName682686 = new char[3];akaRandomName682686[0] = 0;akaRandomName682686[1] = 0;akaRandomName682686[2] = '\\0';string s=akaRandomName682686;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 12,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "10",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_20(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_20\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName293146 = new char[3];akaRandomName293146[0] = 0;akaRandomName293146[1] = 0;akaRandomName293146[2] = '\\0';string s=akaRandomName293146;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_20\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName750595 = new char[3];akaRandomName750595[0] = 0;akaRandomName750595[1] = 0;akaRandomName750595[2] = '\\0';string s=akaRandomName750595;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 13,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "7"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName605604 = new char[2];akaRandomName605604[0] = 7;akaRandomName605604[1] = '\\0';string s=akaRandomName605604;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName506394 = new char[2];akaRandomName506394[0] = 7;akaRandomName506394[1] = '\\0';string s=akaRandomName506394;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 14,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "7",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_9(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_9\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName433563 = new char[2];akaRandomName433563[0] = 0;akaRandomName433563[1] = '\\0';string s=akaRandomName433563;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_9\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName337257 = new char[2];akaRandomName337257[0] = 0;akaRandomName337257[1] = '\\0';string s=akaRandomName337257;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 15,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_8(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_8\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName1014 = new char[2];akaRandomName1014[0] = 0;akaRandomName1014[1] = '\\0';string s=akaRandomName1014;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_8\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName305095 = new char[2];akaRandomName305095[0] = 0;akaRandomName305095[1] = '\\0';string s=akaRandomName305095;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 16,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_7(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName703371 = new char[2];akaRandomName703371[0] = 0;akaRandomName703371[1] = '\\0';string s=akaRandomName703371;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_7\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName415540 = new char[2];akaRandomName415540[0] = 0;akaRandomName415540[1] = '\\0';string s=akaRandomName415540;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 17,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "4",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_6(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName17782 = new char[2];akaRandomName17782[0] = 0;akaRandomName17782[1] = '\\0';string s=akaRandomName17782;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_6\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName278600 = new char[2];akaRandomName278600[0] = 0;akaRandomName278600[1] = '\\0';string s=akaRandomName278600;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 18,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "15",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName252392 = new char[3];akaRandomName252392[0] = 0;akaRandomName252392[1] = 0;akaRandomName252392[2] = '\\0';string s=akaRandomName252392;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_5\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName152726 = new char[3];akaRandomName152726[0] = 0;akaRandomName152726[1] = 0;akaRandomName152726[2] = '\\0';string s=akaRandomName152726;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 19,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "10",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName829189 = new char[3];akaRandomName829189[0] = 0;akaRandomName829189[1] = 0;akaRandomName829189[2] = '\\0';string s=akaRandomName829189;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName76340 = new char[3];akaRandomName76340[0] = 0;akaRandomName76340[1] = 0;akaRandomName76340[2] = '\\0';string s=akaRandomName76340;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 20,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "9",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName243465 = new char[2];akaRandomName243465[0] = 0;akaRandomName243465[1] = '\\0';string s=akaRandomName243465;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName298754 = new char[2];akaRandomName298754[0] = 0;akaRandomName298754[1] = '\\0';string s=akaRandomName298754;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 21,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName520153 = new char[2];akaRandomName520153[0] = 0;akaRandomName520153[1] = '\\0';string s=akaRandomName520153;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName605452 = new char[2];akaRandomName605452[0] = 0;akaRandomName605452[1] = '\\0';string s=akaRandomName605452;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 22,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_25(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_25\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName611302 = new char[2];akaRandomName611302[0] = 0;akaRandomName611302[1] = '\\0';string s=akaRandomName611302;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_25\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName99375 = new char[2];akaRandomName99375[0] = 0;akaRandomName99375[1] = '\\0';string s=akaRandomName99375;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 23,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName145992 = new char[2];akaRandomName145992[0] = 0;akaRandomName145992[1] = '\\0';string s=akaRandomName145992;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName292171 = new char[2];akaRandomName292171[0] = 0;akaRandomName292171[1] = '\\0';string s=akaRandomName292171;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 24,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_26(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_26\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName156769 = new char[2];akaRandomName156769[0] = 0;akaRandomName156769[1] = '\\0';string s=akaRandomName156769;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_26\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName343838 = new char[2];akaRandomName343838[0] = 0;akaRandomName343838[1] = '\\0';string s=akaRandomName343838;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 25,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName246162 = new char[2];akaRandomName246162[0] = 0;akaRandomName246162[1] = '\\0';string s=akaRandomName246162;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName937722 = new char[2];akaRandomName937722[0] = 0;akaRandomName937722[1] = '\\0';string s=akaRandomName937722;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 26,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "13",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_23(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_23\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName876053 = new char[3];akaRandomName876053[0] = 0;akaRandomName876053[1] = 0;akaRandomName876053[2] = '\\0';string s=akaRandomName876053;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_23\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName418087 = new char[3];akaRandomName418087[0] = 0;akaRandomName418087[1] = 0;akaRandomName418087[2] = '\\0';string s=akaRandomName418087;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 27,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_24(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_24\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName588750 = new char[2];akaRandomName588750[0] = 0;akaRandomName588750[1] = '\\0';string s=akaRandomName588750;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_24\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName774604 = new char[2];akaRandomName774604[0] = 0;akaRandomName774604[1] = '\\0';string s=akaRandomName774604;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 28,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "9",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_10(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_10\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName350718 = new char[2];akaRandomName350718[0] = 0;akaRandomName350718[1] = '\\0';string s=akaRandomName350718;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_10\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName114076 = new char[2];akaRandomName114076[0] = 0;akaRandomName114076[1] = '\\0';string s=akaRandomName114076;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 29,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "17",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_directed_11(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_directed_11\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName958309 = new char[3];akaRandomName958309[0] = 0;akaRandomName958309[1] = 0;akaRandomName958309[2] = '\\0';string s=akaRandomName958309;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_directed_11\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isPalindrome(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName604782 = new char[3];akaRandomName604782[0] = 0;akaRandomName604782[1] = 0;akaRandomName604782[2] = '\\0';string s=akaRandomName604782;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isPalindrome(string s) {\r         int start = 0;\r         int end = s.size() - 1;\r         std::transform(\r             s.begin(), s.end(), s.begin(), ::tolower);\r         while (start < end)\r         {\r             //filter non-alpha char\r             while (start < end && !isAlpha(s[start])) start++;\r             //filter non-alpha char\r             while (start < end && !isAlpha(s[end])) end--;\r             if (s[start] != s[end]) break;\r             start++;\r             end--;\r         }\r         if (start >= end)\r             return true;\r         else\r             return false;\r     }\r     bool isAlpha(char c)\r     {\r         if (c >= 'a' && c <= 'z') return true;\r         if (c >= '0' && c <= '9') return true;\r         return false;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\json27\\Valid_Palindrome.cpp\\Solution\\isPalindrome(string)"
    },
    {
        "f": [],
        "fm": "bool isAlpha(char c)\r     {\r         if (c >= 'a' && c <= 'z') return true;\r         if (c >= '0' && c <= '9') return true;\r         return false;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAlpha(char)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                    "name": "c",
                                    "virtual_name": "EXPECTED_c",
                                    "dataType": "char",
                                    "realType": "char",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\c",
                                    "correspondingType": "char",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                    "name": "c",
                                    "virtual_name": "c",
                                    "dataType": "char",
                                    "realType": "char",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\c",
                                    "correspondingType": "char",
                                    "value": "-66"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAlpha_char_random_2(void) {\n{\nAKA_test_case_name=\"Solution_isAlpha_char_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar c=-66;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode c */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAlpha_char_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAlpha(c);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isAlpha(char)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar c=-66;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode c */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAlpha(char)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                    "name": "c",
                                    "virtual_name": "EXPECTED_c",
                                    "dataType": "char",
                                    "realType": "char",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\c",
                                    "correspondingType": "char",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                    "name": "c",
                                    "virtual_name": "c",
                                    "dataType": "char",
                                    "realType": "char",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\c",
                                    "correspondingType": "char",
                                    "value": "59"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAlpha_char_random_4(void) {\n{\nAKA_test_case_name=\"Solution_isAlpha_char_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar c=59;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode c */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAlpha_char_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAlpha(c);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isAlpha(char)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar c=59;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode c */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAlpha(char)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                    "name": "c",
                                    "virtual_name": "EXPECTED_c",
                                    "dataType": "char",
                                    "realType": "char",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\c",
                                    "correspondingType": "char",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                    "name": "c",
                                    "virtual_name": "c",
                                    "dataType": "char",
                                    "realType": "char",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\c",
                                    "correspondingType": "char",
                                    "value": "97"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAlpha_char_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_isAlpha_char_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar c=97;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode c */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAlpha_char_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAlpha(c);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isAlpha(char)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar c=97;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode c */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAlpha(char)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                    "name": "c",
                                    "virtual_name": "EXPECTED_c",
                                    "dataType": "char",
                                    "realType": "char",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\c",
                                    "correspondingType": "char",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                    "name": "c",
                                    "virtual_name": "c",
                                    "dataType": "char",
                                    "realType": "char",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\c",
                                    "correspondingType": "char",
                                    "value": "123"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAlpha_char_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_isAlpha_char_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar c=123;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode c */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAlpha_char_directed_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAlpha(c);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isAlpha(char)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar c=123;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode c */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Palindrome.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Palindrome.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Palindrome.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isAlpha(char)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                    "name": "c",
                                    "virtual_name": "EXPECTED_c",
                                    "dataType": "char",
                                    "realType": "char",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\c",
                                    "correspondingType": "char",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                    "name": "c",
                                    "virtual_name": "c",
                                    "dataType": "char",
                                    "realType": "char",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\c",
                                    "correspondingType": "char",
                                    "value": "48"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isAlpha_char_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_isAlpha_char_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar c=48;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode c */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAlpha_char_directed_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAlpha(c);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Palindrome.cpp\\\\Solution\\\\isAlpha(char)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Palindrome.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar c=48;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode c */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isPalindrome(string s) {\r         int start = 0;\r         int end = s.size() - 1;\r         std::transform(\r             s.begin(), s.end(), s.begin(), ::tolower);\r         while (start < end)\r         {\r             //filter non-alpha char\r             while (start < end && !isAlpha(s[start])) start++;\r             //filter non-alpha char\r             while (start < end && !isAlpha(s[end])) end--;\r             if (s[start] != s[end]) break;\r             start++;\r             end--;\r         }\r         if (start >= end)\r             return true;\r         else\r             return false;\r     }\r     bool isAlpha(char c)\r     {\r         if (c >= 'a' && c <= 'z') return true;\r         if (c >= '0' && c <= '9') return true;\r         return false;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\json27\\Valid_Palindrome.cpp\\Solution\\isAlpha(char)"
    },
    {
        "f": [],
        "fm": "bool isValid(string s) {\r         stack<char> container;\r \r         for (int i = 0; i < s.size(); i++)\r         {\r             if (s[i] == '(' || s[i] == '{' || s[i] == '[')\r             {\r                 container.push(s[i]);\r                 continue;\r             }\r             if (container.size() == 0) return false;\r \r             char top = container.top();\r             container.pop();\r             if (s[i] == ')' && top != '(') return false;\r             if (s[i] == '}' && top != '{') return false;\r             if (s[i] == ']' && top != '[') return false;\r         }\r \r         if (container.size() > 0) return false;\r         return true;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_8(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_8\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName386132 = new char[2];akaRandomName386132[0] = 40;akaRandomName386132[1] = '\\0';string s=akaRandomName386132;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_8\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName553205 = new char[2];akaRandomName553205[0] = 40;akaRandomName553205[1] = '\\0';string s=akaRandomName553205;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "2"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName378998 = new char[2];akaRandomName378998[0] = 2;akaRandomName378998[1] = '\\0';string s=akaRandomName378998;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName209862 = new char[2];akaRandomName209862[0] = 2;akaRandomName209862[1] = '\\0';string s=akaRandomName209862;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "9",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_9(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_9\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName846567 = new char[2];akaRandomName846567[0] = 40;akaRandomName846567[1] = '\\0';string s=akaRandomName846567;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_9\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName398295 = new char[2];akaRandomName398295[0] = 40;akaRandomName398295[1] = '\\0';string s=akaRandomName398295;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "6",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_10(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_10\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName562229 = new char[2];akaRandomName562229[0] = 40;akaRandomName562229[1] = '\\0';string s=akaRandomName562229;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_10\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName416379 = new char[2];akaRandomName416379[0] = 40;akaRandomName416379[1] = '\\0';string s=akaRandomName416379;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_6(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName153242 = new char[2];akaRandomName153242[0] = 40;akaRandomName153242[1] = '\\0';string s=akaRandomName153242;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_6\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName136008 = new char[2];akaRandomName136008[0] = 40;akaRandomName136008[1] = '\\0';string s=akaRandomName136008;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "10",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_11(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_11\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName438427 = new char[3];akaRandomName438427[0] = 40;akaRandomName438427[1] = 40;akaRandomName438427[2] = '\\0';string s=akaRandomName438427;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_11\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName828116 = new char[3];akaRandomName828116[0] = 40;akaRandomName828116[1] = 40;akaRandomName828116[2] = '\\0';string s=akaRandomName828116;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "6",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_7(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName483123 = new char[2];akaRandomName483123[0] = 40;akaRandomName483123[1] = '\\0';string s=akaRandomName483123;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_7\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName944971 = new char[2];akaRandomName944971[0] = 40;akaRandomName944971[1] = '\\0';string s=akaRandomName944971;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "11",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_12(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_12\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName514798 = new char[3];akaRandomName514798[0] = 40;akaRandomName514798[1] = 40;akaRandomName514798[2] = '\\0';string s=akaRandomName514798;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_12\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName675181 = new char[3];akaRandomName675181[0] = 40;akaRandomName675181[1] = 40;akaRandomName675181[2] = '\\0';string s=akaRandomName675181;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 8,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName225141 = new char[2];akaRandomName225141[0] = 40;akaRandomName225141[1] = '\\0';string s=akaRandomName225141;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName945183 = new char[2];akaRandomName945183[0] = 40;akaRandomName945183[1] = '\\0';string s=akaRandomName945183;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 9,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "4",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_13(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_13\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName92597 = new char[2];akaRandomName92597[0] = 40;akaRandomName92597[1] = '\\0';string s=akaRandomName92597;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_13\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName703036 = new char[2];akaRandomName703036[0] = 40;akaRandomName703036[1] = '\\0';string s=akaRandomName703036;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 10,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName961269 = new char[2];akaRandomName961269[0] = 40;akaRandomName961269[1] = '\\0';string s=akaRandomName961269;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_5\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName403965 = new char[2];akaRandomName403965[0] = 40;akaRandomName403965[1] = '\\0';string s=akaRandomName403965;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 11,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "9",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_14(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_14\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName841379 = new char[2];akaRandomName841379[0] = 40;akaRandomName841379[1] = '\\0';string s=akaRandomName841379;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_14\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName216056 = new char[2];akaRandomName216056[0] = 40;akaRandomName216056[1] = '\\0';string s=akaRandomName216056;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 12,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "4",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName997099 = new char[2];akaRandomName997099[0] = 40;akaRandomName997099[1] = '\\0';string s=akaRandomName997099;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName592050 = new char[2];akaRandomName592050[0] = 40;akaRandomName592050[1] = '\\0';string s=akaRandomName592050;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 13,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName841097 = new char[2];akaRandomName841097[0] = 40;akaRandomName841097[1] = '\\0';string s=akaRandomName841097;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName51587 = new char[2];akaRandomName51587[0] = 40;akaRandomName51587[1] = '\\0';string s=akaRandomName51587;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 14,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName988050 = new char[2];akaRandomName988050[0] = 40;akaRandomName988050[1] = '\\0';string s=akaRandomName988050;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName432655 = new char[2];akaRandomName432655[0] = 40;akaRandomName432655[1] = '\\0';string s=akaRandomName432655;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 15,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "11",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName963988 = new char[3];akaRandomName963988[0] = 40;akaRandomName963988[1] = 40;akaRandomName963988[2] = '\\0';string s=akaRandomName963988;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName721781 = new char[3];akaRandomName721781[0] = 40;akaRandomName721781[1] = 40;akaRandomName721781[2] = '\\0';string s=akaRandomName721781;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 16,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "11",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_20(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_20\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName938175 = new char[3];akaRandomName938175[0] = 40;akaRandomName938175[1] = 40;akaRandomName938175[2] = '\\0';string s=akaRandomName938175;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_20\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName646305 = new char[3];akaRandomName646305[0] = 40;akaRandomName646305[1] = 40;akaRandomName646305[2] = '\\0';string s=akaRandomName646305;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 17,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "9",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_21(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_21\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName715574 = new char[2];akaRandomName715574[0] = 40;akaRandomName715574[1] = '\\0';string s=akaRandomName715574;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_21\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName533745 = new char[2];akaRandomName533745[0] = 40;akaRandomName533745[1] = '\\0';string s=akaRandomName533745;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 18,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "7",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_22(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_22\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName139912 = new char[2];akaRandomName139912[0] = 40;akaRandomName139912[1] = '\\0';string s=akaRandomName139912;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_22\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName559805 = new char[2];akaRandomName559805[0] = 40;akaRandomName559805[1] = '\\0';string s=akaRandomName559805;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 19,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "7",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_23(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_23\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName307793 = new char[2];akaRandomName307793[0] = 40;akaRandomName307793[1] = '\\0';string s=akaRandomName307793;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_23\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName561893 = new char[2];akaRandomName561893[0] = 40;akaRandomName561893[1] = '\\0';string s=akaRandomName561893;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 20,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "7",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_24(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_24\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName820273 = new char[2];akaRandomName820273[0] = 40;akaRandomName820273[1] = '\\0';string s=akaRandomName820273;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_24\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName229867 = new char[2];akaRandomName229867[0] = 40;akaRandomName229867[1] = '\\0';string s=akaRandomName229867;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 21,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_15(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_15\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName724562 = new char[2];akaRandomName724562[0] = 40;akaRandomName724562[1] = '\\0';string s=akaRandomName724562;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_15\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName924304 = new char[2];akaRandomName924304[0] = 40;akaRandomName924304[1] = '\\0';string s=akaRandomName924304;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 22,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "10",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_16(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_16\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName426385 = new char[3];akaRandomName426385[0] = 40;akaRandomName426385[1] = 40;akaRandomName426385[2] = '\\0';string s=akaRandomName426385;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_16\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName118472 = new char[3];akaRandomName118472[0] = 40;akaRandomName118472[1] = 40;akaRandomName118472[2] = '\\0';string s=akaRandomName118472;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 23,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "7",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_17(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_17\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName570118 = new char[2];akaRandomName570118[0] = 40;akaRandomName570118[1] = '\\0';string s=akaRandomName570118;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_17\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName361305 = new char[2];akaRandomName361305[0] = 40;akaRandomName361305[1] = '\\0';string s=akaRandomName361305;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 24,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "9",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_18(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_18\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName553569 = new char[2];akaRandomName553569[0] = 40;akaRandomName553569[1] = '\\0';string s=akaRandomName553569;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_18\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName602548 = new char[2];akaRandomName602548[0] = 40;akaRandomName602548[1] = '\\0';string s=akaRandomName602548;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 25,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "9",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_19(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_19\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName876641 = new char[2];akaRandomName876641[0] = 40;akaRandomName876641[1] = '\\0';string s=akaRandomName876641;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_19\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName765922 = new char[2];akaRandomName765922[0] = 40;akaRandomName765922[1] = '\\0';string s=akaRandomName765922;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isValid(string s) {\r         stack<char> container;\r \r         for (int i = 0; i < s.size(); i++)\r         {\r             if (s[i] == '(' || s[i] == '{' || s[i] == '[')\r             {\r                 container.push(s[i]);\r                 continue;\r             }\r             if (container.size() == 0) return false;\r \r             char top = container.top();\r             container.pop();\r             if (s[i] == ')' && top != '(') return false;\r             if (s[i] == '}' && top != '{') return false;\r             if (s[i] == ']' && top != '[') return false;\r         }\r \r         if (container.size() > 0) return false;\r         return true;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\json27\\Valid_Parentheses.cpp\\Solution\\isValid(string)"
    },
    {
        "f": [],
        "fm": "bool isValidSudoku(vector<vector<char> > &board) {\r         if (board.size() == 0) return false;\r         int row[9], col[9];\r         for (int i = 0; i < 9; i++)\r         {\r             memset(row, 0, 9 * sizeof(int));\r             memset(col, 0, 9 * sizeof(int));\r             for (int j = 0; j < 9; j++)\r             {\r                 if (board[i][j] != '.')\r                 {\r                     if (row[board[i][j] - 49] == 1)\r                         return false;\r                     row[board[i][j] - 49]++;\r                 }\r                 if (board[j][i] != '.')\r                 {\r                     if (col[board[j][i] - 49] == 1)\r                         return false;\r                     col[board[j][i] - 49]++;\r                 }\r             }\r         }\r         for (int i = 0; i < 9; i += 3)\r         {\r             for (int j = 0; j < 9; j += 3)\r             {\r                 memset(row, 0, 9 * sizeof(int));\r                 for (int m = 0; m < 3; m++)\r                 {\r                     for (int n = 0; n < 3; n++)\r                     {\r                         if (board[m + i][n + j] == '.')\r                             continue;\r                         if (row[board[m + i][n + j] - 49] == 1)\r                             return false;\r                         row[board[m + i][n + j] - 49]++;\r                     }\r                 }\r             }\r         }\r         return true;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Sudoku.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Sudoku.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Sudoku.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Sudoku.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Sudoku.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValidSudoku(vector<vector<char>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "board",
                                    "virtual_name": "EXPECTED_board",
                                    "dataType": "vector<vector<char>>",
                                    "realType": "vector<vector<char>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<char>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "board",
                                    "virtual_name": "board",
                                    "dataType": "vector<vector<char>>",
                                    "realType": "vector<vector<char>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<char>"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValidSudoku_vector_vector_char_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_isValidSudoku_vector_vector_char_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Sudoku.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<char>> board;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode board */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValidSudoku_vector_vector_char_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValidSudoku(board);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Sudoku.cpp\\\\Solution\\\\isValidSudoku(vector<vector<char>>&)\");\n\n\nvector<vector<char>> EXPECTED_board;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Sudoku.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<char>> board;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode board */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Valid_Sudoku.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Valid_Sudoku.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Sudoku.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Valid_Sudoku.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Valid_Sudoku.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValidSudoku(vector<vector<char>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "board",
                                    "virtual_name": "EXPECTED_board",
                                    "dataType": "vector<vector<char>>",
                                    "realType": "vector<vector<char>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<char>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "board",
                                    "virtual_name": "board",
                                    "dataType": "vector<vector<char>>",
                                    "realType": "vector<vector<char>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<char>",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "board_element0",
                                            "dataType": "vector<char>",
                                            "realType": "vector<char>",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board\\element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "char",
                                            "size": 3,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "board_element0_element0",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board\\element #0\\element #0",
                                                    "correspondingType": "char",
                                                    "value": "46"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "board_element0_element1",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board\\element #0\\element #1",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2",
                                                    "virtual_name": "board_element0_element2",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board\\element #0\\element #2",
                                                    "correspondingType": "char",
                                                    "value": "88"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "board_element1",
                                            "dataType": "vector<char>",
                                            "realType": "vector<char>",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board\\element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "char",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "board_element1_element0",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board\\element #1\\element #0",
                                                    "correspondingType": "char",
                                                    "value": "-121"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #2",
                                            "virtual_name": "board_element2",
                                            "dataType": "vector<char>",
                                            "realType": "vector<char>",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board\\element #2",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "char",
                                            "size": 3,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "board_element2_element0",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board\\element #2\\element #0",
                                                    "correspondingType": "char",
                                                    "value": "93"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "board_element2_element1",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board\\element #2\\element #1",
                                                    "correspondingType": "char",
                                                    "value": "-109"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2",
                                                    "virtual_name": "board_element2_element2",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\board\\element #2\\element #2",
                                                    "correspondingType": "char",
                                                    "value": "-91"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValidSudoku_vector_vector_char_random_4(void) {\n{\nAKA_test_case_name=\"Solution_isValidSudoku_vector_vector_char_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Sudoku.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<char>> board;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode board */\nvector<char> board_element0;\nchar board_element0_element0=46;\nboard_element0.push_back(board_element0_element0);\nchar board_element0_element1=48;\nboard_element0.push_back(board_element0_element1);\nchar board_element0_element2=88;\nboard_element0.push_back(board_element0_element2);\nboard.push_back(board_element0);\nvector<char> board_element1;\nchar board_element1_element0=-121;\nboard_element1.push_back(board_element1_element0);\nboard.push_back(board_element1);\nvector<char> board_element2;\nchar board_element2_element0=93;\nboard_element2.push_back(board_element2_element0);\nchar board_element2_element1=-109;\nboard_element2.push_back(board_element2_element1);\nchar board_element2_element2=-91;\nboard_element2.push_back(board_element2_element2);\nboard.push_back(board_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValidSudoku_vector_vector_char_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValidSudoku(board);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Valid_Sudoku.cpp\\\\Solution\\\\isValidSudoku(vector<vector<char>>&)\");\n\n\nvector<vector<char>> EXPECTED_board;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Valid_Sudoku.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<char>> board;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode board */\nvector<char> board_element0;\nchar board_element0_element0=46;\nboard_element0.push_back(board_element0_element0);\nchar board_element0_element1=48;\nboard_element0.push_back(board_element0_element1);\nchar board_element0_element2=88;\nboard_element0.push_back(board_element0_element2);\nboard.push_back(board_element0);\nvector<char> board_element1;\nchar board_element1_element0=-121;\nboard_element1.push_back(board_element1_element0);\nboard.push_back(board_element1);\nvector<char> board_element2;\nchar board_element2_element0=93;\nboard_element2.push_back(board_element2_element0);\nchar board_element2_element1=-109;\nboard_element2.push_back(board_element2_element1);\nchar board_element2_element2=-91;\nboard_element2.push_back(board_element2_element2);\nboard.push_back(board_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r \r     bool isValidSudoku(vector<vector<char> > &board) {\r         if (board.size() == 0) return false;\r         int row[9], col[9];\r         for (int i = 0; i < 9; i++)\r         {\r             memset(row, 0, 9 * sizeof(int));\r             memset(col, 0, 9 * sizeof(int));\r             for (int j = 0; j < 9; j++)\r             {\r                 if (board[i][j] != '.')\r                 {\r                     if (row[board[i][j] - 49] == 1)\r                         return false;\r                     row[board[i][j] - 49]++;\r                 }\r                 if (board[j][i] != '.')\r                 {\r                     if (col[board[j][i] - 49] == 1)\r                         return false;\r                     col[board[j][i] - 49]++;\r                 }\r             }\r         }\r         for (int i = 0; i < 9; i += 3)\r         {\r             for (int j = 0; j < 9; j += 3)\r             {\r                 memset(row, 0, 9 * sizeof(int));\r                 for (int m = 0; m < 3; m++)\r                 {\r                     for (int n = 0; n < 3; n++)\r                     {\r                         if (board[m + i][n + j] == '.')\r                             continue;\r                         if (row[board[m + i][n + j] - 49] == 1)\r                             return false;\r                         row[board[m + i][n + j] - 49]++;\r                     }\r                 }\r             }\r         }\r         return true;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\json27\\Valid_Sudoku.cpp\\Solution\\isValidSudoku(vector<vector<char>>&)"
    },
    {
        "f": [],
        "fm": "bool isMatch(const char *s, const char *p) {\r         bool star = false;\r         const char *str, *ptr;\r         for (str = s, ptr = p; *str != '\\0'; str++, ptr++)\r         {\r             switch (*ptr)\r             {\r                 case '?':\r                     break;\r                 case '*':\r                     star = true;\r                     s = str, p = ptr;\r                     while (*p == '*')\r                         p++;\r                     if (*p == '\\0') // if nil after '*', return true\r                         return true;\r                     str = s - 1;\r                     ptr = p - 1;\r                     break;\r                 default:\r                 {\r                     if (*str != *ptr)\r                     {\r                         // if no '*' in front, match failed\r                         if (!star)\r                             return false;\r                         s++;\r                         str = s - 1;\r                         ptr = p - 1;\r                     }\r                 }\r             }\r         }\r         while (*ptr == '*')\r             ptr++;\r         return (*ptr == '\\0');\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Wildcard_Matching.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Wildcard_Matching.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Wildcard_Matching.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Wildcard_Matching.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Wildcard_Matching.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isMatch(char const*,char const*)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerCharacterDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "char const*",
                                    "realType": "char const*",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\s",
                                    "correspondingType": "",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerCharacterDataNode",
                                    "name": "p",
                                    "virtual_name": "EXPECTED_p",
                                    "dataType": "char const*",
                                    "realType": "char const*",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\p",
                                    "correspondingType": "",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerCharacterDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "char const*",
                                    "realType": "char const*",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\s",
                                    "correspondingType": "",
                                    "level": 1,
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s_constantPointer[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "-121"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s_constantPointer[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerCharacterDataNode",
                                    "name": "p",
                                    "virtual_name": "p",
                                    "dataType": "char const*",
                                    "realType": "char const*",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\p",
                                    "correspondingType": "",
                                    "level": 1,
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[0]",
                                            "virtual_name": "p_constantPointer[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\p\\p[0]",
                                            "correspondingType": "char",
                                            "value": "13"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[1]",
                                            "virtual_name": "p_constantPointer[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\p\\p[1]",
                                            "correspondingType": "char",
                                            "value": "-118"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isMatch_char_constmul_char_constmul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_isMatch_char_constmul_char_constmul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Wildcard_Matching.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar AKA_ARRAY_INIT_s[2];\n\nchar AKA_ARRAY_INIT_s_constantPointer_0=-121;\nAKA_ARRAY_INIT_s[0] = AKA_ARRAY_INIT_s_constantPointer_0;\n\nchar AKA_ARRAY_INIT_s_constantPointer_1=0;\nAKA_ARRAY_INIT_s[1] = AKA_ARRAY_INIT_s_constantPointer_1;\n\nchar const* s = AKA_ARRAY_INIT_s;\nchar AKA_ARRAY_INIT_p[2];\n\nchar AKA_ARRAY_INIT_p_constantPointer_0=13;\nAKA_ARRAY_INIT_p[0] = AKA_ARRAY_INIT_p_constantPointer_0;\n\nchar AKA_ARRAY_INIT_p_constantPointer_1=-118;\nAKA_ARRAY_INIT_p[1] = AKA_ARRAY_INIT_p_constantPointer_1;\n\nchar const* p = AKA_ARRAY_INIT_p;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerCharacterDataNode s */\n/* PointerCharacterDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isMatch_char_constmul_char_constmul_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isMatch(s,p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Wildcard_Matching.cpp\\\\Solution\\\\isMatch(char const*,char const*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Wildcard_Matching.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar AKA_ARRAY_INIT_s[2];\n\nchar AKA_ARRAY_INIT_s_constantPointer_0=-121;\nAKA_ARRAY_INIT_s[0] = AKA_ARRAY_INIT_s_constantPointer_0;\n\nchar AKA_ARRAY_INIT_s_constantPointer_1=0;\nAKA_ARRAY_INIT_s[1] = AKA_ARRAY_INIT_s_constantPointer_1;\n\nchar const* s = AKA_ARRAY_INIT_s;\nchar AKA_ARRAY_INIT_p[2];\n\nchar AKA_ARRAY_INIT_p_constantPointer_0=13;\nAKA_ARRAY_INIT_p[0] = AKA_ARRAY_INIT_p_constantPointer_0;\n\nchar AKA_ARRAY_INIT_p_constantPointer_1=-118;\nAKA_ARRAY_INIT_p[1] = AKA_ARRAY_INIT_p_constantPointer_1;\n\nchar const* p = AKA_ARRAY_INIT_p;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerCharacterDataNode s */\n/* PointerCharacterDataNode p */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Wildcard_Matching.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Wildcard_Matching.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Wildcard_Matching.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Wildcard_Matching.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Wildcard_Matching.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isMatch(char const*,char const*)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerCharacterDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "char const*",
                                    "realType": "char const*",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\s",
                                    "correspondingType": "",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerCharacterDataNode",
                                    "name": "p",
                                    "virtual_name": "EXPECTED_p",
                                    "dataType": "char const*",
                                    "realType": "char const*",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\p",
                                    "correspondingType": "",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerCharacterDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "char const*",
                                    "realType": "char const*",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\s",
                                    "correspondingType": "",
                                    "level": 1,
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s_constantPointer[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "48"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s_constantPointer[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerCharacterDataNode",
                                    "name": "p",
                                    "virtual_name": "p",
                                    "dataType": "char const*",
                                    "realType": "char const*",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\p",
                                    "correspondingType": "",
                                    "level": 1,
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[0]",
                                            "virtual_name": "p_constantPointer[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\p\\p[0]",
                                            "correspondingType": "char",
                                            "value": "48"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[1]",
                                            "virtual_name": "p_constantPointer[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\p\\p[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isMatch_char_constmul_char_constmul_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_isMatch_char_constmul_char_constmul_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Wildcard_Matching.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar AKA_ARRAY_INIT_s[2];\n\nchar AKA_ARRAY_INIT_s_constantPointer_0=48;\nAKA_ARRAY_INIT_s[0] = AKA_ARRAY_INIT_s_constantPointer_0;\n\nchar AKA_ARRAY_INIT_s_constantPointer_1=0;\nAKA_ARRAY_INIT_s[1] = AKA_ARRAY_INIT_s_constantPointer_1;\n\nchar const* s = AKA_ARRAY_INIT_s;\nchar AKA_ARRAY_INIT_p[2];\n\nchar AKA_ARRAY_INIT_p_constantPointer_0=48;\nAKA_ARRAY_INIT_p[0] = AKA_ARRAY_INIT_p_constantPointer_0;\n\nchar AKA_ARRAY_INIT_p_constantPointer_1=0;\nAKA_ARRAY_INIT_p[1] = AKA_ARRAY_INIT_p_constantPointer_1;\n\nchar const* p = AKA_ARRAY_INIT_p;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerCharacterDataNode s */\n/* PointerCharacterDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isMatch_char_constmul_char_constmul_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isMatch(s,p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Wildcard_Matching.cpp\\\\Solution\\\\isMatch(char const*,char const*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Wildcard_Matching.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar AKA_ARRAY_INIT_s[2];\n\nchar AKA_ARRAY_INIT_s_constantPointer_0=48;\nAKA_ARRAY_INIT_s[0] = AKA_ARRAY_INIT_s_constantPointer_0;\n\nchar AKA_ARRAY_INIT_s_constantPointer_1=0;\nAKA_ARRAY_INIT_s[1] = AKA_ARRAY_INIT_s_constantPointer_1;\n\nchar const* s = AKA_ARRAY_INIT_s;\nchar AKA_ARRAY_INIT_p[2];\n\nchar AKA_ARRAY_INIT_p_constantPointer_0=48;\nAKA_ARRAY_INIT_p[0] = AKA_ARRAY_INIT_p_constantPointer_0;\n\nchar AKA_ARRAY_INIT_p_constantPointer_1=0;\nAKA_ARRAY_INIT_p[1] = AKA_ARRAY_INIT_p_constantPointer_1;\n\nchar const* p = AKA_ARRAY_INIT_p;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerCharacterDataNode s */\n/* PointerCharacterDataNode p */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isMatch(const char *s, const char *p) {\r         bool star = false;\r         const char *str, *ptr;\r         for (str = s, ptr = p; *str != '\\0'; str++, ptr++)\r         {\r             switch (*ptr)\r             {\r                 case '?':\r                     break;\r                 case '*':\r                     star = true;\r                     s = str, p = ptr;\r                     while (*p == '*')\r                         p++;\r                     if (*p == '\\0') // if nil after '*', return true\r                         return true;\r                     str = s - 1;\r                     ptr = p - 1;\r                     break;\r                 default:\r                 {\r                     if (*str != *ptr)\r                     {\r                         // if no '*' in front, match failed\r                         if (!star)\r                             return false;\r                         s++;\r                         str = s - 1;\r                         ptr = p - 1;\r                     }\r                 }\r             }\r         }\r         while (*ptr == '*')\r             ptr++;\r         return (*ptr == '\\0');\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\json27\\Wildcard_Matching.cpp\\Solution\\isMatch(char const*,char const*)"
    },
    {
        "f": [],
        "fm": "bool wordBreak(string s, unordered_set<string> &dict) {\r         string s2 = '#' + s;\r         int len = s2.size();\r         vector<bool> possible(len, 0);\r \r         possible[0] = true;\r \r         for (int i = 1; i < len; ++i)\r         {\r             for (int k = 0; k < i; ++k)\r             {\r                 possible[i] = possible[k] &&\r                               dict.find(s2.substr(k + 1, i - k)) != dict.end();\r                 if (possible[i]) break;\r             }\r         }\r \r         return possible[len - 1];\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordBreak(string,unordered_set<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>",
                                    "realType": "unordered_set<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\s",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "-44"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>",
                                    "realType": "unordered_set<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordBreak_string_unordered_set_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_wordBreak_string_unordered_set_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName40534 = new char[2];akaRandomName40534[0] = -44;akaRandomName40534[1] = '\\0';string s=akaRandomName40534;\nunordered_set<string> dict;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordBreak_string_unordered_set_string_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordBreak(s,dict);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break.cpp\\\\Solution\\\\wordBreak(string,unordered_set<string>&)\");\n\n\nunordered_set<string> EXPECTED_dict;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName441693 = new char[2];akaRandomName441693[0] = -44;akaRandomName441693[1] = '\\0';string s=akaRandomName441693;\nunordered_set<string> dict;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordBreak(string,unordered_set<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>",
                                    "realType": "unordered_set<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>",
                                    "realType": "unordered_set<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordBreak_string_unordered_set_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_wordBreak_string_unordered_set_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\nunordered_set<string> dict;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordBreak_string_unordered_set_string_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordBreak(s,dict);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break.cpp\\\\Solution\\\\wordBreak(string,unordered_set<string>&)\");\n\n\nunordered_set<string> EXPECTED_dict;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\nunordered_set<string> dict;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool wordBreak(string s, unordered_set<string> &dict) {\r         string s2 = '#' + s;\r         int len = s2.size();\r         vector<bool> possible(len, 0);\r \r         possible[0] = true;\r \r         for (int i = 1; i < len; ++i)\r         {\r             for (int k = 0; k < i; ++k)\r             {\r                 possible[i] = possible[k] &&\r                               dict.find(s2.substr(k + 1, i - k)) != dict.end();\r                 if (possible[i]) break;\r             }\r         }\r \r         return possible[len - 1];\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\json27\\Word_Break.cpp\\Solution\\wordBreak(string,unordered_set<string>&)"
    },
    {
        "f": [],
        "fm": "vector<string> wordBreak(string s, unordered_set<string> &dict) {\r         string result;\r         vector<string> solutions;\r         int len = s.size();\r         vector<bool> possible(len + 1, true);\r         GetAllSolution(0, s, dict, len, result, solutions, possible);\r         return solutions;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\wordBreak(string,unordered_set<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordBreak(string,unordered_set<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\wordBreak(string,unordered_set<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>",
                                    "realType": "unordered_set<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\wordBreak(string,unordered_set<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\s",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "124"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>",
                                    "realType": "unordered_set<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\wordBreak(string,unordered_set<string>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordBreak_string_unordered_set_string_random_5(void) {\n{\nAKA_test_case_name=\"Solution_wordBreak_string_unordered_set_string_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName413986 = new char[2];akaRandomName413986[0] = 124;akaRandomName413986[1] = '\\0';string s=akaRandomName413986;\nunordered_set<string> dict;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordBreak_string_unordered_set_string_random_5\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordBreak(s,dict);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\wordBreak(string,unordered_set<string>&)\");\n\n\nunordered_set<string> EXPECTED_dict;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName165003 = new char[2];akaRandomName165003[0] = 124;akaRandomName165003[1] = '\\0';string s=akaRandomName165003;\nunordered_set<string> dict;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r \r \r     vector<string> wordBreak(string s, unordered_set<string> &dict) {\r         string result;\r         vector<string> solutions;\r         int len = s.size();\r         vector<bool> possible(len + 1, true);\r         GetAllSolution(0, s, dict, len, result, solutions, possible);\r         return solutions;\r     }\r \r     void GetAllSolution(int start, const string& s, const unordered_set<string> &dict, int len, string& result, vector<string>& solutions, vector<bool>& possible)\r     {\r         if (start == len)\r         {\r             solutions.push_back(result.substr(0, result.size() - 1)); //eliminate the last space\r             return;\r         }\r         for (int i = start; i < len; ++i)\r         {\r             string piece = s.substr(start, i - start + 1);\r             if (dict.find(piece) != dict.end() && possible[i + 1])\r             {\r                 result.append(piece).append(\" \");\r                 int beforeChange = solutions.size();\r                 GetAllSolution(i + 1, s, dict, len, result, solutions, possible);\r                 if (solutions.size() == beforeChange)\r                     possible[i + 1] = false;\r                 result.resize(result.size() - piece.size() - 1);\r             }\r         }\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\json27\\Word_Break_II.cpp\\Solution\\wordBreak(string,unordered_set<string>&)"
    },
    {
        "f": [],
        "fm": "void GetAllSolution(int start, const string& s, const unordered_set<string> &dict, int len, string& result, vector<string>& solutions, vector<bool>& possible)\r     {\r         if (start == len)\r         {\r             solutions.push_back(result.substr(0, result.size() - 1)); //eliminate the last space\r             return;\r         }\r         for (int i = start; i < len; ++i)\r         {\r             string piece = s.substr(start, i - start + 1);\r             if (dict.find(piece) != dict.end() && possible[i + 1])\r             {\r                 result.append(piece).append(\" \");\r                 int beforeChange = solutions.size();\r                 GetAllSolution(i + 1, s, dict, len, result, solutions, possible);\r                 if (solutions.size() == beforeChange)\r                     possible[i + 1] = false;\r                 result.resize(result.size() - piece.size() - 1);\r             }\r         }\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "EXPECTED_solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "EXPECTED_possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "7"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=7;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_0\");AKA_INSTANCE___Solution->GetAllSolution(start,s,dict,len,result,solutions,possible);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\");\n\n/* error assertion */\nunordered_set<string>const EXPECTED_dict;\n\nvector<string> EXPECTED_solutions;\n\nvector<bool> EXPECTED_possible;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=7;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "EXPECTED_possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "EXPECTED_solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "4"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=4;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_2\");AKA_INSTANCE___Solution->GetAllSolution(start,s,dict,len,result,solutions,possible);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\");\n\n/* error assertion */\nunordered_set<string>const EXPECTED_dict;\n\nvector<string> EXPECTED_solutions;\n\nvector<bool> EXPECTED_possible;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=4;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "EXPECTED_possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "EXPECTED_solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "10"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=10;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_1\");AKA_INSTANCE___Solution->GetAllSolution(start,s,dict,len,result,solutions,possible);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\");\n\n/* error assertion */\nunordered_set<string>const EXPECTED_dict;\n\nvector<string> EXPECTED_solutions;\n\nvector<bool> EXPECTED_possible;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=10;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "EXPECTED_solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "EXPECTED_possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "50"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "result[0]",
                                            "virtual_name": "result[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result\\result[0]",
                                            "correspondingType": "char",
                                            "value": "79"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "solutions_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions\\element #0",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "solutions_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "-5"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "solutions_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions\\element #1",
                                            "correspondingType": "string",
                                            "value": "3",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "solutions_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "1"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "possible_element0",
                                            "dataType": "bool",
                                            "realType": "bool",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible\\element #0",
                                            "correspondingType": "bool",
                                            "value": "false"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_random_2(void) {\n{\nAKA_test_case_name=\"Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=3;\nchar* akaRandomName937381 = new char[2];akaRandomName937381[0] = 50;akaRandomName937381[1] = '\\0';string s=akaRandomName937381;\nunordered_set<string>dict;\n\n\nint len=3;\nchar* akaRandomName812616 = new char[2];akaRandomName812616[0] = 79;akaRandomName812616[1] = '\\0';string result=akaRandomName812616;\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\nchar* akaRandomName989265 = new char[2];akaRandomName989265[0] = -5;akaRandomName989265[1] = '\\0';string solutions_element0=akaRandomName989265;\nsolutions.push_back(solutions_element0);\nchar* akaRandomName605318 = new char[2];akaRandomName605318[0] = 1;akaRandomName605318[1] = '\\0';string solutions_element1=akaRandomName605318;\nsolutions.push_back(solutions_element1);\n/* VectorDataNode possible */\nbool possible_element0=false;\npossible.push_back(possible_element0);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_random_2\");AKA_INSTANCE___Solution->GetAllSolution(start,s,dict,len,result,solutions,possible);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\");\n\n/* error assertion */\nunordered_set<string>const EXPECTED_dict;\n\nvector<string> EXPECTED_solutions;\n\nvector<bool> EXPECTED_possible;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=3;\nchar* akaRandomName484573 = new char[2];akaRandomName484573[0] = 50;akaRandomName484573[1] = '\\0';string s=akaRandomName484573;\nunordered_set<string>dict;\n\n\nint len=3;\nchar* akaRandomName566053 = new char[2];akaRandomName566053[0] = 79;akaRandomName566053[1] = '\\0';string result=akaRandomName566053;\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\nchar* akaRandomName769633 = new char[2];akaRandomName769633[0] = -5;akaRandomName769633[1] = '\\0';string solutions_element0=akaRandomName769633;\nsolutions.push_back(solutions_element0);\nchar* akaRandomName945704 = new char[2];akaRandomName945704[0] = 1;akaRandomName945704[1] = '\\0';string solutions_element1=akaRandomName945704;\nsolutions.push_back(solutions_element1);\n/* VectorDataNode possible */\nbool possible_element0=false;\npossible.push_back(possible_element0);\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "EXPECTED_possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "EXPECTED_solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "1"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "120"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "result[0]",
                                            "virtual_name": "result[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result\\result[0]",
                                            "correspondingType": "char",
                                            "value": "-72"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "solutions_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions\\element #0",
                                            "correspondingType": "string",
                                            "value": "3",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "solutions_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "75"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "solutions_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions\\element #1",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "solutions_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "-54"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "possible_element0",
                                            "dataType": "bool",
                                            "realType": "bool",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible\\element #0",
                                            "correspondingType": "bool",
                                            "value": "false"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "possible_element1",
                                            "dataType": "bool",
                                            "realType": "bool",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible\\element #1",
                                            "correspondingType": "bool",
                                            "value": "true"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_random_3(void) {\n{\nAKA_test_case_name=\"Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=1;\nchar* akaRandomName7353 = new char[2];akaRandomName7353[0] = 120;akaRandomName7353[1] = '\\0';string s=akaRandomName7353;\nunordered_set<string>dict;\n\n\nint len=3;\nchar* akaRandomName509853 = new char[2];akaRandomName509853[0] = -72;akaRandomName509853[1] = '\\0';string result=akaRandomName509853;\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\nchar* akaRandomName560174 = new char[2];akaRandomName560174[0] = 75;akaRandomName560174[1] = '\\0';string solutions_element0=akaRandomName560174;\nsolutions.push_back(solutions_element0);\nchar* akaRandomName907048 = new char[2];akaRandomName907048[0] = -54;akaRandomName907048[1] = '\\0';string solutions_element1=akaRandomName907048;\nsolutions.push_back(solutions_element1);\n/* VectorDataNode possible */\nbool possible_element0=false;\npossible.push_back(possible_element0);\nbool possible_element1=true;\npossible.push_back(possible_element1);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_random_3\");AKA_INSTANCE___Solution->GetAllSolution(start,s,dict,len,result,solutions,possible);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\");\n\n/* error assertion */\nunordered_set<string>const EXPECTED_dict;\n\nvector<string> EXPECTED_solutions;\n\nvector<bool> EXPECTED_possible;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=1;\nchar* akaRandomName89574 = new char[2];akaRandomName89574[0] = 120;akaRandomName89574[1] = '\\0';string s=akaRandomName89574;\nunordered_set<string>dict;\n\n\nint len=3;\nchar* akaRandomName490265 = new char[2];akaRandomName490265[0] = -72;akaRandomName490265[1] = '\\0';string result=akaRandomName490265;\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\nchar* akaRandomName787375 = new char[2];akaRandomName787375[0] = 75;akaRandomName787375[1] = '\\0';string solutions_element0=akaRandomName787375;\nsolutions.push_back(solutions_element0);\nchar* akaRandomName206726 = new char[2];akaRandomName206726[0] = -54;akaRandomName206726[1] = '\\0';string solutions_element1=akaRandomName206726;\nsolutions.push_back(solutions_element1);\n/* VectorDataNode possible */\nbool possible_element0=false;\npossible.push_back(possible_element0);\nbool possible_element1=true;\npossible.push_back(possible_element1);\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "EXPECTED_solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "EXPECTED_possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "6"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_8(void) {\n{\nAKA_test_case_name=\"Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_8\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=6;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_8\");AKA_INSTANCE___Solution->GetAllSolution(start,s,dict,len,result,solutions,possible);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\");\n\n/* error assertion */\nunordered_set<string>const EXPECTED_dict;\n\nvector<string> EXPECTED_solutions;\n\nvector<bool> EXPECTED_possible;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=6;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "EXPECTED_solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "EXPECTED_possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "8"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_7(void) {\n{\nAKA_test_case_name=\"Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=8;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_7\");AKA_INSTANCE___Solution->GetAllSolution(start,s,dict,len,result,solutions,possible);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\");\n\n/* error assertion */\nunordered_set<string>const EXPECTED_dict;\n\nvector<string> EXPECTED_solutions;\n\nvector<bool> EXPECTED_possible;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=8;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "EXPECTED_possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "EXPECTED_solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "5"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_9(void) {\n{\nAKA_test_case_name=\"Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_9\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=5;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_9\");AKA_INSTANCE___Solution->GetAllSolution(start,s,dict,len,result,solutions,possible);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\");\n\n/* error assertion */\nunordered_set<string>const EXPECTED_dict;\n\nvector<string> EXPECTED_solutions;\n\nvector<bool> EXPECTED_possible;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=5;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 8,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "EXPECTED_possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "EXPECTED_solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "5"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=5;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_4\");AKA_INSTANCE___Solution->GetAllSolution(start,s,dict,len,result,solutions,possible);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\");\n\n/* error assertion */\nunordered_set<string>const EXPECTED_dict;\n\nvector<string> EXPECTED_solutions;\n\nvector<bool> EXPECTED_possible;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=5;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 9,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "EXPECTED_possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "EXPECTED_solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "8"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=8;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_3\");AKA_INSTANCE___Solution->GetAllSolution(start,s,dict,len,result,solutions,possible);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\");\n\n/* error assertion */\nunordered_set<string>const EXPECTED_dict;\n\nvector<string> EXPECTED_solutions;\n\nvector<bool> EXPECTED_possible;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=8;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 10,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "EXPECTED_solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "EXPECTED_possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "9"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_6(void) {\n{\nAKA_test_case_name=\"Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=9;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_6\");AKA_INSTANCE___Solution->GetAllSolution(start,s,dict,len,result,solutions,possible);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\");\n\n/* error assertion */\nunordered_set<string>const EXPECTED_dict;\n\nvector<string> EXPECTED_solutions;\n\nvector<bool> EXPECTED_possible;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=9;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 11,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Word_Break_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json27\\Word_Break_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json27\\Word_Break_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "EXPECTED_solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "EXPECTED_dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "EXPECTED_possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\start",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string const&",
                                    "realType": "string const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\s",
                                    "correspondingType": "string const&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.unordered.UnorderedSetDataNode",
                                    "name": "dict",
                                    "virtual_name": "dict",
                                    "dataType": "unordered_set<string>const",
                                    "realType": "unordered_set<string>const&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\dict",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\len",
                                    "correspondingType": "int",
                                    "value": "10"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\result",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "solutions",
                                    "virtual_name": "solutions",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\solutions",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "possible",
                                    "virtual_name": "possible",
                                    "dataType": "vector<bool>",
                                    "realType": "vector<bool>&",
                                    "external": false,
                                    "correspondingVar": ".\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\\possible",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "bool"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=10;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_GetAllSolution_int_string_const_unordered_set_string_const_int_string_vector_string_vector_bool_directed_5\");AKA_INSTANCE___Solution->GetAllSolution(start,s,dict,len,result,solutions,possible);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json27\\\\Word_Break_II.cpp\\\\Solution\\\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)\");\n\n/* error assertion */\nunordered_set<string>const EXPECTED_dict;\n\nvector<string> EXPECTED_solutions;\n\nvector<bool> EXPECTED_possible;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Word_Break_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint start=0;\nstring s=\"\";\nunordered_set<string>dict;\n\n\nint len=10;\nstring result=\"\";\nvector<string> solutions;\nvector<bool> possible;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode start */\n/* NormalStringDataNode s */\n/* UnorderedSetDataNode dict */\n/* NormalNumberDataNode len */\n/* NormalStringDataNode result */\n/* VectorDataNode solutions */\n/* VectorDataNode possible */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r \r \r     vector<string> wordBreak(string s, unordered_set<string> &dict) {\r         string result;\r         vector<string> solutions;\r         int len = s.size();\r         vector<bool> possible(len + 1, true);\r         GetAllSolution(0, s, dict, len, result, solutions, possible);\r         return solutions;\r     }\r \r     void GetAllSolution(int start, const string& s, const unordered_set<string> &dict, int len, string& result, vector<string>& solutions, vector<bool>& possible)\r     {\r         if (start == len)\r         {\r             solutions.push_back(result.substr(0, result.size() - 1)); //eliminate the last space\r             return;\r         }\r         for (int i = start; i < len; ++i)\r         {\r             string piece = s.substr(start, i - start + 1);\r             if (dict.find(piece) != dict.end() && possible[i + 1])\r             {\r                 result.append(piece).append(\" \");\r                 int beforeChange = solutions.size();\r                 GetAllSolution(i + 1, s, dict, len, result, solutions, possible);\r                 if (solutions.size() == beforeChange)\r                     possible[i + 1] = false;\r                 result.resize(result.size() - piece.size() - 1);\r             }\r         }\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\json27\\Word_Break_II.cpp\\Solution\\GetAllSolution(int,string const&,unordered_set<string>const&,int,string&,vector<string>&,vector<bool>&)"
    }
]
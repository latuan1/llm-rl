[
    {
        "f": [],
        "fm": "vector<int> twoSum(vector<int>& nums, int target) {\r         unordered_map<int, int> index;\r         for (int i = 0; i < nums.size(); i++) {\r             if (index.find(nums[i]) != index.end()) {\r                 return {index[nums[i]], i};\r             }\r             index[target - nums[i]] = i;\r         }\r         throw logic_error(\"Unreachable code path\");\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 1 Two Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 1 Two Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "twoSum(vector<int>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "EXPECTED_target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 10,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "nums_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #8",
                                            "virtual_name": "nums_element8",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #8",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #9",
                                            "virtual_name": "nums_element9",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #9",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_twoSum_vector_int_int_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_twoSum_vector_int_int_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=0;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* element #9 : null value -> no code */\nnums.push_back(nums_element9);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_twoSum_vector_int_int_directed_5\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->twoSum(nums,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 1 Two Sum.cpp\\\\Solution\\\\twoSum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=0;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* element #9 : null value -> no code */\nnums.push_back(nums_element9);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 1 Two Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 1 Two Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "twoSum(vector<int>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "EXPECTED_target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "-1496663675"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "1495018545"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "-1760495517"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_twoSum_vector_int_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_twoSum_vector_int_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=-1760495517;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1496663675;\nnums.push_back(nums_element0);\nint nums_element1=1495018545;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_twoSum_vector_int_int_random_3\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->twoSum(nums,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 1 Two Sum.cpp\\\\Solution\\\\twoSum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=-1760495517;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1496663675;\nnums.push_back(nums_element0);\nint nums_element1=1495018545;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 1 Two Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 1 Two Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "twoSum(vector<int>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "EXPECTED_target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 4,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_twoSum_vector_int_int_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_twoSum_vector_int_int_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=0;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_twoSum_vector_int_int_directed_2\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->twoSum(nums,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 1 Two Sum.cpp\\\\Solution\\\\twoSum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=0;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 1 Two Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 1 Two Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "twoSum(vector<int>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "EXPECTED_target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 9,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "nums_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #8",
                                            "virtual_name": "nums_element8",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #8",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_twoSum_vector_int_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_twoSum_vector_int_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=0;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_twoSum_vector_int_int_directed_1\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->twoSum(nums,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 1 Two Sum.cpp\\\\Solution\\\\twoSum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=0;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 1 Two Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 1 Two Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "twoSum(vector<int>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "EXPECTED_target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 5,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_twoSum_vector_int_int_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_twoSum_vector_int_int_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=0;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_twoSum_vector_int_int_directed_4\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->twoSum(nums,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 1 Two Sum.cpp\\\\Solution\\\\twoSum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=0;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 1 Two Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 1 Two Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "twoSum(vector<int>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "EXPECTED_target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 8,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "nums_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_twoSum_vector_int_int_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_twoSum_vector_int_int_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=0;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_twoSum_vector_int_int_directed_3\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->twoSum(nums,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 1 Two Sum.cpp\\\\Solution\\\\twoSum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=0;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 1 Two Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 1 Two Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "twoSum(vector<int>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "EXPECTED_target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 6,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\target",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_twoSum_vector_int_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_twoSum_vector_int_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=0;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_twoSum_vector_int_int_directed_0\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->twoSum(nums,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 1 Two Sum.cpp\\\\Solution\\\\twoSum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 1 Two Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=0;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<int> twoSum(vector<int>& nums, int target) {\r         unordered_map<int, int> index;\r         for (int i = 0; i < nums.size(); i++) {\r             if (index.find(nums[i]) != index.end()) {\r                 return {index[nums[i]], i};\r             }\r             index[target - nums[i]] = i;\r         }\r         throw logic_error(\"Unreachable code path\");\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json28\\LeetCode 1 Two Sum.cpp\\Solution\\twoSum(vector<int>&,int)"
    },
    {
        "f": [],
        "fm": "int maxArea(vector<int>& height) {\r         int max_area = 0, l = 0, r = height.size() - 1;\r         while (l < r) {\r             max_area = max(max_area, min(height[l], height[r]) * (r - l));\r             if (height[l] < height[r]) {\r                 l++;\r             } else {\r                 r--;\r             }\r         }\r         return max_area;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 11 Container With Most Water.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 11 Container With Most Water.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "maxArea(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "height",
                                    "virtual_name": "EXPECTED_height",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)\\height",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "height",
                                    "virtual_name": "height",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)\\height",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "height_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)\\height\\element #0",
                                            "correspondingType": "int",
                                            "value": "1197387588"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "height_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)\\height\\element #1",
                                            "correspondingType": "int",
                                            "value": "1509366480"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_maxArea_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_maxArea_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 11 Container With Most Water.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> height;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode height */\nint height_element0=1197387588;\nheight.push_back(height_element0);\nint height_element1=1509366480;\nheight.push_back(height_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxArea_vector_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxArea(height);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 11 Container With Most Water.cpp\\\\Solution\\\\maxArea(vector<int>&)\");\n\n\nvector<int> EXPECTED_height;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 11 Container With Most Water.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> height;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode height */\nint height_element0=1197387588;\nheight.push_back(height_element0);\nint height_element1=1509366480;\nheight.push_back(height_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 11 Container With Most Water.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 11 Container With Most Water.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "maxArea(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "height",
                                    "virtual_name": "EXPECTED_height",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)\\height",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "height",
                                    "virtual_name": "height",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)\\height",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "height_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)\\height\\element #0",
                                            "correspondingType": "int",
                                            "value": "503687238"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "height_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)\\height\\element #1",
                                            "correspondingType": "int",
                                            "value": "-2102379984"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "height_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)\\height\\element #2",
                                            "correspondingType": "int",
                                            "value": "440249769"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_maxArea_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_maxArea_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 11 Container With Most Water.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> height;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode height */\nint height_element0=503687238;\nheight.push_back(height_element0);\nint height_element1=-2102379984;\nheight.push_back(height_element1);\nint height_element2=440249769;\nheight.push_back(height_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxArea_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxArea(height);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 11 Container With Most Water.cpp\\\\Solution\\\\maxArea(vector<int>&)\");\n\n\nvector<int> EXPECTED_height;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 11 Container With Most Water.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> height;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode height */\nint height_element0=503687238;\nheight.push_back(height_element0);\nint height_element1=-2102379984;\nheight.push_back(height_element1);\nint height_element2=440249769;\nheight.push_back(height_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int maxArea(vector<int>& height) {\r         int max_area = 0, l = 0, r = height.size() - 1;\r         while (l < r) {\r             max_area = max(max_area, min(height[l], height[r]) * (r - l));\r             if (height[l] < height[r]) {\r                 l++;\r             } else {\r                 r--;\r             }\r         }\r         return max_area;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json28\\LeetCode 11 Container With Most Water.cpp\\Solution\\maxArea(vector<int>&)"
    },
    {
        "f": [],
        "fm": "ListNode(int x) : val(x), next(NULL) {}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 2 Add Two Numbers.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___ListNode",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                    "dataType": "::ListNode",
                                    "realType": "::ListNode",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___ListNode",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                            "dataType": "::ListNode",
                                            "realType": "::ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                            "rawType": "::ListNode",
                                            "selectedConstructor": "ListNode(int)",
                                            "variableType": "::ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "ListNode(int)",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "next",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode->next",
                                                    "dataType": "ListNode*",
                                                    "realType": "ListNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___ListNode",
                                    "virtual_name": "AKA_INSTANCE___ListNode",
                                    "dataType": "::ListNode",
                                    "realType": "::ListNode",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___ListNode",
                                            "virtual_name": "AKA_INSTANCE___ListNode",
                                            "dataType": "::ListNode",
                                            "realType": "::ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                            "rawType": "::ListNode",
                                            "selectedConstructor": "ListNode(int)",
                                            "variableType": "::ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "ListNode(int)",
                                                    "virtual_name": "AKA_INSTANCE___ListNode",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "AKA_INSTANCE___ListNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "-1980329805"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "AKA_INSTANCE___ListNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "next",
                                                    "virtual_name": "AKA_INSTANCE___ListNode->next",
                                                    "dataType": "ListNode*",
                                                    "realType": "ListNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "ListNode(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)"
                        }
                    ]
                },
                "td": "void AKA_TEST_ListNode_int_random_0(void) {\n{\nAKA_test_case_name=\"ListNode_int_random_0\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___ListNode */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___ListNode_x=-1980329805;\nAKA_mark(\"<<PRE-CALLING>> Test ListNode_int_random_0\");AKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___ListNode\\\\AKA_INSTANCE___ListNode\\\\ListNode(int)\");AKA_fCall++;AKA_INSTANCE___ListNode = new ::ListNode(AKA_INSTANCE___ListNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nAKA_INSTANCE___ListNode->next;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___ListNode */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___ListNode_x=-1980329805;\nAKA_mark(\"<<PRE-CALLING>> Test ListNode_int_random_0\");AKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___ListNode\\\\AKA_INSTANCE___ListNode\\\\ListNode(int)\");AKA_fCall++;AKA_INSTANCE___ListNode = new ::ListNode(AKA_INSTANCE___ListNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nAKA_INSTANCE___ListNode->next;\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)"
    },
    {
        "f": [],
        "fm": "ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\r         ListNode fake(0), *pi = &fake;\r         int carry = 0;\r         \r         while ( l1 || l2 || carry ) {\r             int sum = (l1 ? l1->val : 0) + (l2 ? l2->val : 0) + carry;\r             carry = sum / 10;   // 保存进位\r             \r             pi->next = new ListNode(sum % 10);\r             pi = pi->next;\r             \r             l1 = l1 ? l1->next : NULL;\r             l2 = l2 ? l2->next : NULL;\r         }\r         return fake.next;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 2 Add Two Numbers.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "addTwoNumbers(ListNode*,ListNode*)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "ListNode*",
                            "realType": "ListNode*",
                            "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "l1",
                                    "virtual_name": "EXPECTED_l1",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l1",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "l2",
                                    "virtual_name": "EXPECTED_l2",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l2",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "l1",
                                    "virtual_name": "l1",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l1",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                    "level": 1,
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "l1[0]",
                                            "virtual_name": "l1[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l1\\l1[0]",
                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "l1",
                                                    "virtual_name": "l1[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l1\\l1",
                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "l1[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "l10_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "0"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "l1[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "0"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "l1[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "l2",
                                    "virtual_name": "l2",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l2",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                    "level": 1,
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "l2[0]",
                                            "virtual_name": "l2[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l2\\l2[0]",
                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "l2",
                                                    "virtual_name": "l2[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l2\\l2",
                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "l2[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "l20_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "0"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "l2[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "0"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "l2[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\RETURN",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_addTwoNumbers_ListNodemul_ListNodemul_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_addTwoNumbers_ListNodemul_ListNodemul_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1;\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_x=0;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l1\\\\AKA_VECTOR_INIT_l1_0\\\\l1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0 = new ::ListNode(l10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0).val=0;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0).next;\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_0);\n\nListNode* l1 = AKA_VECTOR_INIT_l1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2;\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_x=0;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_0\\\\l2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0 = new ::ListNode(l20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0).val=0;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_0).next;\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_0);\n\nListNode* l2 = AKA_VECTOR_INIT_l2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode l1 */\n/* PointerStructureDataNode l2 */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_addTwoNumbers_ListNodemul_ListNodemul_directed_0\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->addTwoNumbers(l1,l2);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\Solution\\\\addTwoNumbers(ListNode*,ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1;\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_x=0;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l1\\\\AKA_VECTOR_INIT_l1_0\\\\l1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0 = new ::ListNode(l10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0).val=0;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0).next;\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_0);\n\nListNode* l1 = AKA_VECTOR_INIT_l1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2;\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_x=0;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_0\\\\l2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0 = new ::ListNode(l20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0).val=0;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_0).next;\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_0);\n\nListNode* l2 = AKA_VECTOR_INIT_l2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode l1 */\n/* PointerStructureDataNode l2 */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 2 Add Two Numbers.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "addTwoNumbers(ListNode*,ListNode*)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "ListNode*",
                            "realType": "ListNode*",
                            "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "l1",
                                    "virtual_name": "EXPECTED_l1",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l1",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "l2",
                                    "virtual_name": "EXPECTED_l2",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l2",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "l1",
                                    "virtual_name": "l1",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l1",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                    "level": 1,
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "l1[0]",
                                            "virtual_name": "l1[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l1\\l1[0]",
                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "l1",
                                                    "virtual_name": "l1[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l1\\l1",
                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "l1[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "l10_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "1142419341"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "l1[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "643423809"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "l1[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                            "level": 1,
                                                            "size": 3,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "next[0]",
                                                                    "virtual_name": "l1[0].next[0]",
                                                                    "dataType": "ListNode",
                                                                    "realType": "ListNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next[0]",
                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "next",
                                                                            "virtual_name": "l1[0].next[0]",
                                                                            "dataType": "::ListNode",
                                                                            "realType": "::ListNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next",
                                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                            "rawType": "::ListNode",
                                                                            "selectedConstructor": "ListNode(int)",
                                                                            "variableType": "::ListNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "ListNode(int)",
                                                                                    "virtual_name": "l1[0].next[0]",
                                                                                    "dataType": "::ListNode",
                                                                                    "realType": "::ListNode",
                                                                                    "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "l10_next0_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "-1781945154"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "l1[0].next[0].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "1427983347"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "next",
                                                                                    "virtual_name": "l1[0].next[0].next",
                                                                                    "dataType": "ListNode*",
                                                                                    "realType": "ListNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "next[1]",
                                                                    "virtual_name": "l1[0].next[1]",
                                                                    "dataType": "ListNode",
                                                                    "realType": "ListNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next[1]",
                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "next",
                                                                            "virtual_name": "l1[0].next[1]",
                                                                            "dataType": "::ListNode",
                                                                            "realType": "::ListNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next",
                                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                            "rawType": "::ListNode",
                                                                            "selectedConstructor": "ListNode(int)",
                                                                            "variableType": "::ListNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "ListNode(int)",
                                                                                    "virtual_name": "l1[0].next[1]",
                                                                                    "dataType": "::ListNode",
                                                                                    "realType": "::ListNode",
                                                                                    "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "l10_next1_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "-882013261"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "l1[0].next[1].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "-620462970"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "next",
                                                                                    "virtual_name": "l1[0].next[1].next",
                                                                                    "dataType": "ListNode*",
                                                                                    "realType": "ListNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "next[2]",
                                                                    "virtual_name": "l1[0].next[2]",
                                                                    "dataType": "ListNode",
                                                                    "realType": "ListNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next[2]",
                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "next",
                                                                            "virtual_name": "l1[0].next[2]",
                                                                            "dataType": "::ListNode",
                                                                            "realType": "::ListNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next",
                                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                            "rawType": "::ListNode",
                                                                            "selectedConstructor": "ListNode(int)",
                                                                            "variableType": "::ListNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "ListNode(int)",
                                                                                    "virtual_name": "l1[0].next[2]",
                                                                                    "dataType": "::ListNode",
                                                                                    "realType": "::ListNode",
                                                                                    "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "l10_next2_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "-1076367279"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "l1[0].next[2].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "224320724"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "next",
                                                                                    "virtual_name": "l1[0].next[2].next",
                                                                                    "dataType": "ListNode*",
                                                                                    "realType": "ListNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "l2",
                                    "virtual_name": "l2",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l2",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                    "level": 1,
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "l2[0]",
                                            "virtual_name": "l2[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l2\\l2[0]",
                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "l2",
                                                    "virtual_name": "l2[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l2\\l2",
                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "l2[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "l20_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "-360591072"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "l2[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "174128309"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "l2[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "l2[1]",
                                            "virtual_name": "l2[1]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l2\\l2[1]",
                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "l2",
                                                    "virtual_name": "l2[1]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l2\\l2",
                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "l2[1]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "l21_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "492491225"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "l2[1].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "-1704845622"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "l2[1].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                            "level": 1,
                                                            "size": 3,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "next[0]",
                                                                    "virtual_name": "l2[1].next[0]",
                                                                    "dataType": "ListNode",
                                                                    "realType": "ListNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next[0]",
                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "next",
                                                                            "virtual_name": "l2[1].next[0]",
                                                                            "dataType": "::ListNode",
                                                                            "realType": "::ListNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next",
                                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                            "rawType": "::ListNode",
                                                                            "selectedConstructor": "ListNode(int)",
                                                                            "variableType": "::ListNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "ListNode(int)",
                                                                                    "virtual_name": "l2[1].next[0]",
                                                                                    "dataType": "::ListNode",
                                                                                    "realType": "::ListNode",
                                                                                    "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "l21_next0_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "-1511566145"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "l2[1].next[0].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "948498690"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "next",
                                                                                    "virtual_name": "l2[1].next[0].next",
                                                                                    "dataType": "ListNode*",
                                                                                    "realType": "ListNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "next[1]",
                                                                    "virtual_name": "l2[1].next[1]",
                                                                    "dataType": "ListNode",
                                                                    "realType": "ListNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next[1]",
                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "next",
                                                                            "virtual_name": "l2[1].next[1]",
                                                                            "dataType": "::ListNode",
                                                                            "realType": "::ListNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next",
                                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                            "rawType": "::ListNode",
                                                                            "selectedConstructor": "ListNode(int)",
                                                                            "variableType": "::ListNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "ListNode(int)",
                                                                                    "virtual_name": "l2[1].next[1]",
                                                                                    "dataType": "::ListNode",
                                                                                    "realType": "::ListNode",
                                                                                    "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "l21_next1_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "108486413"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "l2[1].next[1].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "-524813533"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "next",
                                                                                    "virtual_name": "l2[1].next[1].next",
                                                                                    "dataType": "ListNode*",
                                                                                    "realType": "ListNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "next[2]",
                                                                    "virtual_name": "l2[1].next[2]",
                                                                    "dataType": "ListNode",
                                                                    "realType": "ListNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next[2]",
                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "next",
                                                                            "virtual_name": "l2[1].next[2]",
                                                                            "dataType": "::ListNode",
                                                                            "realType": "::ListNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next",
                                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                            "rawType": "::ListNode",
                                                                            "selectedConstructor": "ListNode(int)",
                                                                            "variableType": "::ListNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "ListNode(int)",
                                                                                    "virtual_name": "l2[1].next[2]",
                                                                                    "dataType": "::ListNode",
                                                                                    "realType": "::ListNode",
                                                                                    "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "l21_next2_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "-978124177"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "l2[1].next[2].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "-1141736558"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "next",
                                                                                    "virtual_name": "l2[1].next[2].next",
                                                                                    "dataType": "ListNode*",
                                                                                    "realType": "ListNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "l2[2]",
                                            "virtual_name": "l2[2]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l2\\l2[2]",
                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "l2",
                                                    "virtual_name": "l2[2]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\l2\\l2",
                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "l2[2]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "l22_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "691911124"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "l2[2].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "-1188323237"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "l2[2].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                            "level": 1,
                                                            "size": 2,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "next[0]",
                                                                    "virtual_name": "l2[2].next[0]",
                                                                    "dataType": "ListNode",
                                                                    "realType": "ListNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next[0]",
                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "next",
                                                                            "virtual_name": "l2[2].next[0]",
                                                                            "dataType": "::ListNode",
                                                                            "realType": "::ListNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next",
                                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                            "rawType": "::ListNode",
                                                                            "selectedConstructor": "ListNode(int)",
                                                                            "variableType": "::ListNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "ListNode(int)",
                                                                                    "virtual_name": "l2[2].next[0]",
                                                                                    "dataType": "::ListNode",
                                                                                    "realType": "::ListNode",
                                                                                    "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "l22_next0_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "-113910562"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "l2[2].next[0].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "742308215"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "next",
                                                                                    "virtual_name": "l2[2].next[0].next",
                                                                                    "dataType": "ListNode*",
                                                                                    "realType": "ListNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "next[1]",
                                                                    "virtual_name": "l2[2].next[1]",
                                                                    "dataType": "ListNode",
                                                                    "realType": "ListNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next[1]",
                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "next",
                                                                            "virtual_name": "l2[2].next[1]",
                                                                            "dataType": "::ListNode",
                                                                            "realType": "::ListNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next\\next",
                                                                            "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                            "rawType": "::ListNode",
                                                                            "selectedConstructor": "ListNode(int)",
                                                                            "variableType": "::ListNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "ListNode(int)",
                                                                                    "virtual_name": "l2[2].next[1]",
                                                                                    "dataType": "::ListNode",
                                                                                    "realType": "::ListNode",
                                                                                    "functionNode": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "l22_next1_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\ListNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "-1091638811"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "l2[2].next[1].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "-679931441"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "next",
                                                                                    "virtual_name": "l2[2].next[1].next",
                                                                                    "dataType": "ListNode*",
                                                                                    "realType": "ListNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode\\next",
                                                                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)\\RETURN",
                                    "correspondingType": ".\\json28\\LeetCode 2 Add Two Numbers.cpp\\ListNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_addTwoNumbers_ListNodemul_ListNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_addTwoNumbers_ListNodemul_ListNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1;\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_x=1142419341;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l1\\\\AKA_VECTOR_INIT_l1_0\\\\l1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0 = new ::ListNode(l10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0).val=643423809;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next0_x=-1781945154;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l1\\\\AKA_VECTOR_INIT_l1_0\\\\l1\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_0 = new ::ListNode(l10_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).val=1427983347;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next1_x=-882013261;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l1\\\\AKA_VECTOR_INIT_l1_0\\\\l1\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_1 = new ::ListNode(l10_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).val=-620462970;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next2_x=-1076367279;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l1\\\\AKA_VECTOR_INIT_l1_0\\\\l1\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_2 = new ::ListNode(l10_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_2).val=224320724;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_2).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_2);\n(*AKA_VECTOR_INIT_l1_0).next = AKA_VECTOR_INIT_l1_0_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_0);\n\nListNode* l1 = AKA_VECTOR_INIT_l1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2;\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_x=-360591072;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_0\\\\l2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0 = new ::ListNode(l20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0).val=174128309;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_0).next;\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_0);\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l21_x=492491225;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_1\\\\l2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_1 = new ::ListNode(l21_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_1).val=-1704845622;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l21_next0_x=-1511566145;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_1\\\\l2\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_1_DOT_next_0 = new ::ListNode(l21_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_1_DOT_next_0).val=948498690;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_1_DOT_next_0).next;\nAKA_VECTOR_INIT_l2_1_DOT_next.push_back(AKA_VECTOR_INIT_l2_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l21_next1_x=108486413;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_1\\\\l2\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_1_DOT_next_1 = new ::ListNode(l21_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_1_DOT_next_1).val=-524813533;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_1_DOT_next_1).next;\nAKA_VECTOR_INIT_l2_1_DOT_next.push_back(AKA_VECTOR_INIT_l2_1_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l21_next2_x=-978124177;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_1\\\\l2\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_1_DOT_next_2 = new ::ListNode(l21_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_1_DOT_next_2).val=-1141736558;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_1_DOT_next_2).next;\nAKA_VECTOR_INIT_l2_1_DOT_next.push_back(AKA_VECTOR_INIT_l2_1_DOT_next_2);\n(*AKA_VECTOR_INIT_l2_1).next = AKA_VECTOR_INIT_l2_1_DOT_next[0];\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_1);\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l22_x=691911124;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_2\\\\l2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_2 = new ::ListNode(l22_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_2).val=-1188323237;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2_2_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l22_next0_x=-113910562;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_2\\\\l2\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_2_DOT_next_0 = new ::ListNode(l22_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_2_DOT_next_0).val=742308215;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_2_DOT_next_0).next;\nAKA_VECTOR_INIT_l2_2_DOT_next.push_back(AKA_VECTOR_INIT_l2_2_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l22_next1_x=-1091638811;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_2\\\\l2\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_2_DOT_next_1 = new ::ListNode(l22_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_2_DOT_next_1).val=-679931441;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_2_DOT_next_1).next;\nAKA_VECTOR_INIT_l2_2_DOT_next.push_back(AKA_VECTOR_INIT_l2_2_DOT_next_1);\n(*AKA_VECTOR_INIT_l2_2).next = AKA_VECTOR_INIT_l2_2_DOT_next[0];\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_2);\n\nListNode* l2 = AKA_VECTOR_INIT_l2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode l1 */\n/* PointerStructureDataNode l2 */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_addTwoNumbers_ListNodemul_ListNodemul_random_4\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->addTwoNumbers(l1,l2);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\Solution\\\\addTwoNumbers(ListNode*,ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1;\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_x=1142419341;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l1\\\\AKA_VECTOR_INIT_l1_0\\\\l1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0 = new ::ListNode(l10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0).val=643423809;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next0_x=-1781945154;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l1\\\\AKA_VECTOR_INIT_l1_0\\\\l1\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_0 = new ::ListNode(l10_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).val=1427983347;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next1_x=-882013261;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l1\\\\AKA_VECTOR_INIT_l1_0\\\\l1\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_1 = new ::ListNode(l10_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).val=-620462970;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next2_x=-1076367279;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l1\\\\AKA_VECTOR_INIT_l1_0\\\\l1\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_2 = new ::ListNode(l10_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_2).val=224320724;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_2).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_2);\n(*AKA_VECTOR_INIT_l1_0).next = AKA_VECTOR_INIT_l1_0_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_0);\n\nListNode* l1 = AKA_VECTOR_INIT_l1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2;\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_x=-360591072;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_0\\\\l2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0 = new ::ListNode(l20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0).val=174128309;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_0).next;\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_0);\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l21_x=492491225;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_1\\\\l2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_1 = new ::ListNode(l21_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_1).val=-1704845622;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l21_next0_x=-1511566145;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_1\\\\l2\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_1_DOT_next_0 = new ::ListNode(l21_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_1_DOT_next_0).val=948498690;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_1_DOT_next_0).next;\nAKA_VECTOR_INIT_l2_1_DOT_next.push_back(AKA_VECTOR_INIT_l2_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l21_next1_x=108486413;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_1\\\\l2\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_1_DOT_next_1 = new ::ListNode(l21_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_1_DOT_next_1).val=-524813533;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_1_DOT_next_1).next;\nAKA_VECTOR_INIT_l2_1_DOT_next.push_back(AKA_VECTOR_INIT_l2_1_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l21_next2_x=-978124177;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_1\\\\l2\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_1_DOT_next_2 = new ::ListNode(l21_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_1_DOT_next_2).val=-1141736558;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_1_DOT_next_2).next;\nAKA_VECTOR_INIT_l2_1_DOT_next.push_back(AKA_VECTOR_INIT_l2_1_DOT_next_2);\n(*AKA_VECTOR_INIT_l2_1).next = AKA_VECTOR_INIT_l2_1_DOT_next[0];\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_1);\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l22_x=691911124;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_2\\\\l2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_2 = new ::ListNode(l22_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_2).val=-1188323237;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2_2_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l22_next0_x=-113910562;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_2\\\\l2\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_2_DOT_next_0 = new ::ListNode(l22_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_2_DOT_next_0).val=742308215;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_2_DOT_next_0).next;\nAKA_VECTOR_INIT_l2_2_DOT_next.push_back(AKA_VECTOR_INIT_l2_2_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l22_next1_x=-1091638811;\nAKA_mark(\"Calling: .\\\\json28\\\\LeetCode 2 Add Two Numbers.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 2 Add Two Numbers.cpp\\\\addTwoNumbers(ListNode*,ListNode*)\\\\l2\\\\AKA_VECTOR_INIT_l2_2\\\\l2\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_2_DOT_next_1 = new ::ListNode(l22_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_2_DOT_next_1).val=-679931441;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_2_DOT_next_1).next;\nAKA_VECTOR_INIT_l2_2_DOT_next.push_back(AKA_VECTOR_INIT_l2_2_DOT_next_1);\n(*AKA_VECTOR_INIT_l2_2).next = AKA_VECTOR_INIT_l2_2_DOT_next[0];\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_2);\n\nListNode* l2 = AKA_VECTOR_INIT_l2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode l1 */\n/* PointerStructureDataNode l2 */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\r         ListNode fake(0), *pi = &fake;\r         int carry = 0;\r         \r         while ( l1 || l2 || carry ) {\r             int sum = (l1 ? l1->val : 0) + (l2 ? l2->val : 0) + carry;\r             carry = sum / 10;   // 保存进位\r             \r             pi->next = new ListNode(sum % 10);\r             pi = pi->next;\r             \r             l1 = l1 ? l1->next : NULL;\r             l2 = l2 ? l2->next : NULL;\r         }\r         return fake.next;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json28\\LeetCode 2 Add Two Numbers.cpp\\Solution\\addTwoNumbers(ListNode*,ListNode*)"
    },
    {
        "f": [],
        "fm": "int lengthOfLongestSubstring(string s) {\r         int max_len = 0;\r         for (int i = 0, last = -1; i < s.size(); i++) {\r             for (int j = last + 1; j < i; j++) {\r                 if (s[i] == s[j]) {\r                     last = j;\r                     break;\r                 }\r             }\r             max_len = max(max_len, i - last);\r         }\r         return max_len;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 3 Longest Substring Without Repeating Characters.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "lengthOfLongestSubstring(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)\\s",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "14"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_lengthOfLongestSubstring_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_lengthOfLongestSubstring_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName514829 = new char[2];akaRandomName514829[0] = 14;akaRandomName514829[1] = '\\0';string s=akaRandomName514829;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_lengthOfLongestSubstring_string_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->lengthOfLongestSubstring(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\\\Solution\\\\lengthOfLongestSubstring(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName72243 = new char[2];akaRandomName72243[0] = 14;akaRandomName72243[1] = '\\0';string s=akaRandomName72243;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 3 Longest Substring Without Repeating Characters.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "lengthOfLongestSubstring(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_lengthOfLongestSubstring_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_lengthOfLongestSubstring_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_lengthOfLongestSubstring_string_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->lengthOfLongestSubstring(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\\\Solution\\\\lengthOfLongestSubstring(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int lengthOfLongestSubstring(string s) {\r         int max_len = 0;\r         for (int i = 0, last = -1; i < s.size(); i++) {\r             for (int j = last + 1; j < i; j++) {\r                 if (s[i] == s[j]) {\r                     last = j;\r                     break;\r                 }\r             }\r             max_len = max(max_len, i - last);\r         }\r         return max_len;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json28\\LeetCode 3 Longest Substring Without Repeating Characters.cpp\\Solution\\lengthOfLongestSubstring(string)"
    },
    {
        "f": [],
        "fm": "double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\r         int s1 = nums1.size(), s2 = nums2.size();\r         if (s1 > s2) return findMedianSortedArrays(nums2, nums1);\r         \r         int half = (s1 + s2) / 2;\r         for (int i = 0; i <= s1; i++) {\r             int j = half - i;\r             if (i >= s1 || nums1[i] >= nums2[j - 1]) {\r                 int x = i < s1 ? j < s2 ? min(nums1[  i], nums2[  j]) : nums1[  i] : nums2[  j];\r                 int y = i >  0 ? j >  0 ? max(nums1[i-1], nums2[j-1]) : nums1[i-1] : nums2[j-1];\r                 return (s1 + s2) % 2 ? x : (x + y) / 2.0;\r             }\r         }\r         throw logic_error(\"Unreachable code path\");\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 4 Median of Two Sorted Arrays.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMedianSortedArrays(vector<int>&,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "double",
                            "realType": "double",
                            "functionNode": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums1",
                                    "virtual_name": "EXPECTED_nums1",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums1",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums2",
                                    "virtual_name": "EXPECTED_nums2",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums2",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums1",
                                    "virtual_name": "nums1",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums1",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums1_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums1\\element #0",
                                            "correspondingType": "int",
                                            "value": "-1389695366"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums1_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums1\\element #1",
                                            "correspondingType": "int",
                                            "value": "1846011806"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums1_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums1\\element #2",
                                            "correspondingType": "int",
                                            "value": "-1478744603"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums2",
                                    "virtual_name": "nums2",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums2",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums2_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums2\\element #0",
                                            "correspondingType": "int",
                                            "value": "1882117229"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "double",
                                    "realType": "double",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\RETURN",
                                    "correspondingType": "double",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMedianSortedArrays_vector_int_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_findMedianSortedArrays_vector_int_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 4 Median of Two Sorted Arrays.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\ndouble AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\nint nums1_element0=-1389695366;\nnums1.push_back(nums1_element0);\nint nums1_element1=1846011806;\nnums1.push_back(nums1_element1);\nint nums1_element2=-1478744603;\nnums1.push_back(nums1_element2);\n/* VectorDataNode nums2 */\nint nums2_element0=1882117229;\nnums2.push_back(nums2_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMedianSortedArrays_vector_int_vector_int_random_2\");double AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMedianSortedArrays(nums1,nums2);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 4 Median of Two Sorted Arrays.cpp\\\\Solution\\\\findMedianSortedArrays(vector<int>&,vector<int>&)\");\n\n\nvector<int> EXPECTED_nums1;\n\nvector<int> EXPECTED_nums2;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 4 Median of Two Sorted Arrays.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\ndouble AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\nint nums1_element0=-1389695366;\nnums1.push_back(nums1_element0);\nint nums1_element1=1846011806;\nnums1.push_back(nums1_element1);\nint nums1_element2=-1478744603;\nnums1.push_back(nums1_element2);\n/* VectorDataNode nums2 */\nint nums2_element0=1882117229;\nnums2.push_back(nums2_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 4 Median of Two Sorted Arrays.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMedianSortedArrays(vector<int>&,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "double",
                            "realType": "double",
                            "functionNode": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums2",
                                    "virtual_name": "EXPECTED_nums2",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums2",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums1",
                                    "virtual_name": "EXPECTED_nums1",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums1",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums1",
                                    "virtual_name": "nums1",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums1",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums1_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums1\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums2",
                                    "virtual_name": "nums2",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\nums2",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 0
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "double",
                                    "realType": "double",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)\\RETURN",
                                    "correspondingType": "double",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMedianSortedArrays_vector_int_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_findMedianSortedArrays_vector_int_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 4 Median of Two Sorted Arrays.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\ndouble AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\n/* element #0 : null value -> no code */\nnums1.push_back(nums1_element0);\n/* VectorDataNode nums2 */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMedianSortedArrays_vector_int_vector_int_directed_0\");double AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMedianSortedArrays(nums1,nums2);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 4 Median of Two Sorted Arrays.cpp\\\\Solution\\\\findMedianSortedArrays(vector<int>&,vector<int>&)\");\n\n\nvector<int> EXPECTED_nums1;\n\nvector<int> EXPECTED_nums2;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 4 Median of Two Sorted Arrays.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\ndouble AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\n/* element #0 : null value -> no code */\nnums1.push_back(nums1_element0);\n/* VectorDataNode nums2 */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\r         int s1 = nums1.size(), s2 = nums2.size();\r         if (s1 > s2) return findMedianSortedArrays(nums2, nums1);\r         \r         int half = (s1 + s2) / 2;\r         for (int i = 0; i <= s1; i++) {\r             int j = half - i;\r             if (i >= s1 || nums1[i] >= nums2[j - 1]) {\r                 int x = i < s1 ? j < s2 ? min(nums1[  i], nums2[  j]) : nums1[  i] : nums2[  j];\r                 int y = i >  0 ? j >  0 ? max(nums1[i-1], nums2[j-1]) : nums1[i-1] : nums2[j-1];\r                 return (s1 + s2) % 2 ? x : (x + y) / 2.0;\r             }\r         }\r         throw logic_error(\"Unreachable code path\");\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json28\\LeetCode 4 Median of Two Sorted Arrays.cpp\\Solution\\findMedianSortedArrays(vector<int>&,vector<int>&)"
    },
    {
        "f": [],
        "fm": "string longestPalindrome(string s) {\r         string _s = \"$#\";\r         for (char c : s) {\r             _s += c;\r             _s += \"#\";\r         }\r         \r         vector<int> p(_s.size());\r         int id = 0, max_id = 0;\r         for (int i = 1; i < _s.size(); i++) {\r             p[i] = p[id] + id > i ? min(p[2 * id - i], p[id] + id - i) : 1;\r             while (_s[i + p[i]] == _s[i - p[i]]) {\r                 p[i]++;\r             }\r             if (p[i] + i > p[id] + id) {\r                 id = i;\r                 if (p[i] > p[max_id]) {\r                     max_id = i;\r                 }\r             }\r         }\r         return s.substr((max_id - p[max_id]) / 2, p[max_id] - 1);\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 5 Longest Palindromic Substring.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "longestPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_longestPalindrome_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_longestPalindrome_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 5 Longest Palindromic Substring.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_longestPalindrome_string_directed_0\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->longestPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 5 Longest Palindromic Substring.cpp\\\\Solution\\\\longestPalindrome(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 5 Longest Palindromic Substring.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 5 Longest Palindromic Substring.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "longestPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "12"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_longestPalindrome_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_longestPalindrome_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 5 Longest Palindromic Substring.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName684371 = new char[2];akaRandomName684371[0] = 12;akaRandomName684371[1] = '\\0';string s=akaRandomName684371;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_longestPalindrome_string_random_2\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->longestPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 5 Longest Palindromic Substring.cpp\\\\Solution\\\\longestPalindrome(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 5 Longest Palindromic Substring.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName516793 = new char[2];akaRandomName516793[0] = 12;akaRandomName516793[1] = '\\0';string s=akaRandomName516793;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 5 Longest Palindromic Substring.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "longestPalindrome(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_longestPalindrome_string_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_longestPalindrome_string_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 5 Longest Palindromic Substring.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_longestPalindrome_string_directed_1\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->longestPalindrome(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 5 Longest Palindromic Substring.cpp\\\\Solution\\\\longestPalindrome(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 5 Longest Palindromic Substring.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     string longestPalindrome(string s) {\r         string _s = \"$#\";\r         for (char c : s) {\r             _s += c;\r             _s += \"#\";\r         }\r         \r         vector<int> p(_s.size());\r         int id = 0, max_id = 0;\r         for (int i = 1; i < _s.size(); i++) {\r             p[i] = p[id] + id > i ? min(p[2 * id - i], p[id] + id - i) : 1;\r             while (_s[i + p[i]] == _s[i - p[i]]) {\r                 p[i]++;\r             }\r             if (p[i] + i > p[id] + id) {\r                 id = i;\r                 if (p[i] > p[max_id]) {\r                     max_id = i;\r                 }\r             }\r         }\r         return s.substr((max_id - p[max_id]) / 2, p[max_id] - 1);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json28\\LeetCode 5 Longest Palindromic Substring.cpp\\Solution\\longestPalindrome(string)"
    },
    {
        "f": [],
        "fm": "string convert(string s, int numRows) {\r         if (numRows == 1) return s;\r         \r         vector<string> vec(numRows);\r         for (int i = 0, x = numRows - 1; i < s.size(); i++) {\r             vec[x - abs(i % (2 * x) - x)] += s[i];\r         }\r         \r         string ans;\r         for (string &str : vec) {\r             ans += str;\r         }\r         return ans;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 6 ZigZag Conversion.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "convert(string,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "numRows",
                                    "virtual_name": "EXPECTED_numRows",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)\\numRows",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "numRows",
                                    "virtual_name": "numRows",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)\\numRows",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_convert_string_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_convert_string_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 6 ZigZag Conversion.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint numRows=0;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_convert_string_int_directed_0\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->convert(s,numRows);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 6 ZigZag Conversion.cpp\\\\Solution\\\\convert(string,int)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 6 ZigZag Conversion.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint numRows=0;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 6 ZigZag Conversion.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "convert(string,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "numRows",
                                    "virtual_name": "EXPECTED_numRows",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)\\numRows",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)\\s",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "-42"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "numRows",
                                    "virtual_name": "numRows",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)\\numRows",
                                    "correspondingType": "int",
                                    "value": "-396023991"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_convert_string_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_convert_string_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 6 ZigZag Conversion.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName910392 = new char[2];akaRandomName910392[0] = -42;akaRandomName910392[1] = '\\0';string s=akaRandomName910392;\n\n\nint numRows=-396023991;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_convert_string_int_random_0\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->convert(s,numRows);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 6 ZigZag Conversion.cpp\\\\Solution\\\\convert(string,int)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 6 ZigZag Conversion.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName576179 = new char[2];akaRandomName576179[0] = -42;akaRandomName576179[1] = '\\0';string s=akaRandomName576179;\n\n\nint numRows=-396023991;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     string convert(string s, int numRows) {\r         if (numRows == 1) return s;\r         \r         vector<string> vec(numRows);\r         for (int i = 0, x = numRows - 1; i < s.size(); i++) {\r             vec[x - abs(i % (2 * x) - x)] += s[i];\r         }\r         \r         string ans;\r         for (string &str : vec) {\r             ans += str;\r         }\r         return ans;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json28\\LeetCode 6 ZigZag Conversion.cpp\\Solution\\convert(string,int)"
    },
    {
        "f": [],
        "fm": "int reverse(int x) {\r         int ans = 0;\r         while (x) {\r             if (ans  > INT_MAX / 10 ||\r                 ans  < INT_MIN / 10 ||\r                 ans == INT_MAX && x % 10 >  7 ||\r                 ans == INT_MIN && x % 10 < -8) {\r                 return 0;\r             }\r             ans = 10 * ans + x % 10;\r             x /= 10;\r         }\r         return ans;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 7 Reverse Integer.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "reverse(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "EXPECTED_x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)\\x",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)\\x",
                                    "correspondingType": "int",
                                    "value": "1"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_reverse_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_reverse_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 7 Reverse Integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=1;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reverse_int_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->reverse(x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 7 Reverse Integer.cpp\\\\Solution\\\\reverse(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 7 Reverse Integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=1;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 7 Reverse Integer.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "reverse(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "EXPECTED_x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)\\x",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)\\x",
                                    "correspondingType": "int",
                                    "value": "2139266726"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_reverse_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_reverse_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 7 Reverse Integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=2139266726;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reverse_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->reverse(x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 7 Reverse Integer.cpp\\\\Solution\\\\reverse(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 7 Reverse Integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=2139266726;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 7 Reverse Integer.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "reverse(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "EXPECTED_x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)\\x",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)\\x",
                                    "correspondingType": "int",
                                    "value": "-1517797333"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_reverse_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_reverse_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 7 Reverse Integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=-1517797333;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reverse_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->reverse(x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 7 Reverse Integer.cpp\\\\Solution\\\\reverse(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 7 Reverse Integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=-1517797333;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 7 Reverse Integer.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "reverse(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "EXPECTED_x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)\\x",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)\\x",
                                    "correspondingType": "int",
                                    "value": "-2112368991"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_reverse_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_reverse_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 7 Reverse Integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=-2112368991;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reverse_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->reverse(x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 7 Reverse Integer.cpp\\\\Solution\\\\reverse(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 7 Reverse Integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=-2112368991;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int reverse(int x) {\r         int ans = 0;\r         while (x) {\r             if (ans  > INT_MAX / 10 ||\r                 ans  < INT_MIN / 10 ||\r                 ans == INT_MAX && x % 10 >  7 ||\r                 ans == INT_MIN && x % 10 < -8) {\r                 return 0;\r             }\r             ans = 10 * ans + x % 10;\r             x /= 10;\r         }\r         return ans;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json28\\LeetCode 7 Reverse Integer.cpp\\Solution\\reverse(int)"
    },
    {
        "f": [],
        "fm": "int myAtoi(string str) {\r         int ans = 0, sign = 0;\r         for (char ch : str) {\r             if (!sign && ch == ' ') {\r                 continue;\r             } else if (!sign && ch == '-') {\r                 sign = -1;\r             } else if (!sign && ch == '+') {\r                 sign = 1;\r             } else if (!sign && '0' <= ch && ch <= '9') {\r                 sign = 1;\r                 ans = ch - '0';\r             } else if ('0' <= ch && ch <= '9') {\r                 if (sign > 0 && (INT_MAX - ch + '0') / 10 < ans) {\r                     return INT_MAX;     // 正溢出\r                 }\r                 if (sign < 0 && (INT_MIN + ch - '0') / 10 > ans) {\r                     return INT_MIN;     // 负溢出\r                 }\r                 ans = ans * 10 + sign * (ch - '0');\r             } else {\r                 break;\r             }\r         }\r         return ans;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 8 String to Integer (atoi).cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "myAtoi(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)\\str",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "str[0]",
                                            "virtual_name": "str[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)\\str\\str[0]",
                                            "correspondingType": "char",
                                            "value": "77"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_myAtoi_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_myAtoi_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 8 String to Integer (atoi).cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName552821 = new char[2];akaRandomName552821[0] = 77;akaRandomName552821[1] = '\\0';string str=akaRandomName552821;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_myAtoi_string_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->myAtoi(str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 8 String to Integer (atoi).cpp\\\\Solution\\\\myAtoi(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 8 String to Integer (atoi).cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName365292 = new char[2];akaRandomName365292[0] = 77;akaRandomName365292[1] = '\\0';string str=akaRandomName365292;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 8 String to Integer (atoi).cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "myAtoi(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)\\str",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "str[0]",
                                            "virtual_name": "str[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)\\str\\str[0]",
                                            "correspondingType": "char",
                                            "value": "-92"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_myAtoi_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_myAtoi_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 8 String to Integer (atoi).cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName557179 = new char[2];akaRandomName557179[0] = -92;akaRandomName557179[1] = '\\0';string str=akaRandomName557179;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_myAtoi_string_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->myAtoi(str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 8 String to Integer (atoi).cpp\\\\Solution\\\\myAtoi(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 8 String to Integer (atoi).cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName898717 = new char[2];akaRandomName898717[0] = -92;akaRandomName898717[1] = '\\0';string str=akaRandomName898717;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int myAtoi(string str) {\r         int ans = 0, sign = 0;\r         for (char ch : str) {\r             if (!sign && ch == ' ') {\r                 continue;\r             } else if (!sign && ch == '-') {\r                 sign = -1;\r             } else if (!sign && ch == '+') {\r                 sign = 1;\r             } else if (!sign && '0' <= ch && ch <= '9') {\r                 sign = 1;\r                 ans = ch - '0';\r             } else if ('0' <= ch && ch <= '9') {\r                 if (sign > 0 && (INT_MAX - ch + '0') / 10 < ans) {\r                     return INT_MAX;     // 正溢出\r                 }\r                 if (sign < 0 && (INT_MIN + ch - '0') / 10 > ans) {\r                     return INT_MIN;     // 负溢出\r                 }\r                 ans = ans * 10 + sign * (ch - '0');\r             } else {\r                 break;\r             }\r         }\r         return ans;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json28\\LeetCode 8 String to Integer (atoi).cpp\\Solution\\myAtoi(string)"
    },
    {
        "f": [],
        "fm": "bool isPalindrome(int x) {\r         if (x < 0 || x && !(x % 10)) return false;\r         int y = 0;\r         while (x > y) {\r             y = 10 * y + x % 10;\r             x /= 10;\r         }\r         return x == y || x == y / 10;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 9 Palindrome Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 9 Palindrome Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "EXPECTED_x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)\\x",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)\\x",
                                    "correspondingType": "int",
                                    "value": "7"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 9 Palindrome Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=7;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_int_random_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 9 Palindrome Number.cpp\\\\Solution\\\\isPalindrome(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 9 Palindrome Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=7;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 9 Palindrome Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 9 Palindrome Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "EXPECTED_x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)\\x",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)\\x",
                                    "correspondingType": "int",
                                    "value": "10"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 9 Palindrome Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=10;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_int_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 9 Palindrome Number.cpp\\\\Solution\\\\isPalindrome(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 9 Palindrome Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=10;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 9 Palindrome Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json28\\LeetCode 9 Palindrome Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "EXPECTED_x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)\\x",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)\\x",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 9 Palindrome Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=3;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_int_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json28\\\\LeetCode 9 Palindrome Number.cpp\\\\Solution\\\\isPalindrome(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 9 Palindrome Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=3;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isPalindrome(int x) {\r         if (x < 0 || x && !(x % 10)) return false;\r         int y = 0;\r         while (x > y) {\r             y = 10 * y + x % 10;\r             x /= 10;\r         }\r         return x == y || x == y / 10;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json28\\LeetCode 9 Palindrome Number.cpp\\Solution\\isPalindrome(int)"
    }
]
[
    {
        "f": [],
        "fm": "vector<vector<int>> threeSum(vector<int>& nums) {\r         vector<vector<int>> ans;\r         sort(nums.begin(), nums.end());\r         for (int i = 0; i + 2 < nums.size(); i++) {\r             if (i > 0 && nums[i] == nums[i - 1]) continue;\r             int l = i + 1, r = nums.size() - 1, t2sum = -nums[i];\r             while (l < r) {\r                 if (nums[l] + nums[r] < t2sum) {\r                     l++;\r                 } else if (nums[l] + nums[r] > t2sum) {\r                     r--;\r                 } else {\r                     ans.push_back({nums[i], nums[l], nums[r]});\r                     while (l < r && nums[l] == nums[l + 1]) {\r                         l++;\r                     }\r                     while (l < r && nums[r] == nums[r - 1]) {\r                         r--;\r                     }\r                     l++;\r                 }\r             }\r         }\r         return ans;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 15 3Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 15 3Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "threeSum(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "893161114"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "-1896287746"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "-262281156"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_threeSum_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_threeSum_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 15 3Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=893161114;\nnums.push_back(nums_element0);\nint nums_element1=-1896287746;\nnums.push_back(nums_element1);\nint nums_element2=-262281156;\nnums.push_back(nums_element2);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_threeSum_vector_int_random_1\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->threeSum(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 15 3Sum.cpp\\\\Solution\\\\threeSum(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 15 3Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=893161114;\nnums.push_back(nums_element0);\nint nums_element1=-1896287746;\nnums.push_back(nums_element1);\nint nums_element2=-262281156;\nnums.push_back(nums_element2);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 15 3Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 15 3Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "threeSum(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_threeSum_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_threeSum_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 15 3Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_threeSum_vector_int_directed_0\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->threeSum(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 15 3Sum.cpp\\\\Solution\\\\threeSum(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 15 3Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 15 3Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 15 3Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "threeSum(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_threeSum_vector_int_manual_1(void) {\n{\nAKA_test_case_name=\"Solution_threeSum_vector_int_manual_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=0;\nnums.push_back(nums_element0);\nint nums_element1=0;\nnums.push_back(nums_element1);\nint nums_element2=0;\nnums.push_back(nums_element2);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_threeSum_vector_int_manual_1\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->threeSum(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 15 3Sum.cpp\\\\Solution\\\\threeSum(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=0;\nnums.push_back(nums_element0);\nint nums_element1=0;\nnums.push_back(nums_element1);\nint nums_element2=0;\nnums.push_back(nums_element2);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 15 3Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 15 3Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "threeSum(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "1006782571"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "871249567"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "278731265"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_threeSum_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_threeSum_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 15 3Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1006782571;\nnums.push_back(nums_element0);\nint nums_element1=871249567;\nnums.push_back(nums_element1);\nint nums_element2=278731265;\nnums.push_back(nums_element2);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_threeSum_vector_int_random_0\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->threeSum(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 15 3Sum.cpp\\\\Solution\\\\threeSum(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 15 3Sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1006782571;\nnums.push_back(nums_element0);\nint nums_element1=871249567;\nnums.push_back(nums_element1);\nint nums_element2=278731265;\nnums.push_back(nums_element2);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 15 3Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 15 3Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "threeSum(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 5,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "-2"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "1"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "1"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "2"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_threeSum_vector_int_manual_2(void) {\n{\nAKA_test_case_name=\"Solution_threeSum_vector_int_manual_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-2;\nnums.push_back(nums_element0);\nint nums_element1=0;\nnums.push_back(nums_element1);\nint nums_element2=1;\nnums.push_back(nums_element2);\nint nums_element3=1;\nnums.push_back(nums_element3);\nint nums_element4=2;\nnums.push_back(nums_element4);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_threeSum_vector_int_manual_2\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->threeSum(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 15 3Sum.cpp\\\\Solution\\\\threeSum(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-2;\nnums.push_back(nums_element0);\nint nums_element1=0;\nnums.push_back(nums_element1);\nint nums_element2=1;\nnums.push_back(nums_element2);\nint nums_element3=1;\nnums.push_back(nums_element3);\nint nums_element4=2;\nnums.push_back(nums_element4);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 15 3Sum.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 15 3Sum.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "threeSum(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 6,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "-1"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "1"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "2"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "-1"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "-4"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_threeSum_vector_int_manual_0(void) {\n{\nAKA_test_case_name=\"Solution_threeSum_vector_int_manual_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1;\nnums.push_back(nums_element0);\nint nums_element1=0;\nnums.push_back(nums_element1);\nint nums_element2=1;\nnums.push_back(nums_element2);\nint nums_element3=2;\nnums.push_back(nums_element3);\nint nums_element4=-1;\nnums.push_back(nums_element4);\nint nums_element5=-4;\nnums.push_back(nums_element5);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_threeSum_vector_int_manual_0\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->threeSum(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 15 3Sum.cpp\\\\Solution\\\\threeSum(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1;\nnums.push_back(nums_element0);\nint nums_element1=0;\nnums.push_back(nums_element1);\nint nums_element2=1;\nnums.push_back(nums_element2);\nint nums_element3=2;\nnums.push_back(nums_element3);\nint nums_element4=-1;\nnums.push_back(nums_element4);\nint nums_element5=-4;\nnums.push_back(nums_element5);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<vector<int>> threeSum(vector<int>& nums) {\r         vector<vector<int>> ans;\r         sort(nums.begin(), nums.end());\r         for (int i = 0; i + 2 < nums.size(); i++) {\r             if (i > 0 && nums[i] == nums[i - 1]) continue;\r             int l = i + 1, r = nums.size() - 1, t2sum = -nums[i];\r             while (l < r) {\r                 if (nums[l] + nums[r] < t2sum) {\r                     l++;\r                 } else if (nums[l] + nums[r] > t2sum) {\r                     r--;\r                 } else {\r                     ans.push_back({nums[i], nums[l], nums[r]});\r                     while (l < r && nums[l] == nums[l + 1]) {\r                         l++;\r                     }\r                     while (l < r && nums[r] == nums[r - 1]) {\r                         r--;\r                     }\r                     l++;\r                 }\r             }\r         }\r         return ans;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\manual6\\LeetCode 15 3Sum.cpp\\Solution\\threeSum(vector<int>&)"
    },
    {
        "f": [],
        "fm": "bool isValid(string s) {\r         if (s.size() % 2) return false;\r         stack<char> left_stack;\r         for (char ch : s) {\r             if (ch == '(' || ch == '[' || ch == '{') {\r                 left_stack.push(ch);\r             } else if (left_stack.empty() ||\r                 left_stack.top() == '(' && ch != ')' ||\r                 left_stack.top() == '[' && ch != ']' ||\r                 left_stack.top() == '{' && ch != '}') {\r                 return false;\r             } else {\r                 left_stack.pop();\r             }\r         }\r         return left_stack.empty();\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 20 Valid Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "-81"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 20 Valid Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName252009 = new char[2];akaRandomName252009[0] = -81;akaRandomName252009[1] = '\\0';string s=akaRandomName252009;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 20 Valid Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 20 Valid Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName226546 = new char[2];akaRandomName226546[0] = -81;akaRandomName226546[1] = '\\0';string s=akaRandomName226546;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 20 Valid Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "({[]})",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "123"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "91"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "93"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[4]",
                                            "virtual_name": "s[4]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[4]",
                                            "correspondingType": "char",
                                            "value": "125"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[5]",
                                            "virtual_name": "s[5]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[5]",
                                            "correspondingType": "char",
                                            "value": "41"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_manual_2(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_manual_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName162682 = new char[7];akaRandomName162682[0] = 40;akaRandomName162682[1] = 123;akaRandomName162682[2] = 91;akaRandomName162682[3] = 93;akaRandomName162682[4] = 125;akaRandomName162682[5] = 41;akaRandomName162682[6] = '\\0';string s=akaRandomName162682;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_manual_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 20 Valid Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName940416 = new char[7];akaRandomName940416[0] = 40;akaRandomName940416[1] = 123;akaRandomName940416[2] = 91;akaRandomName940416[3] = 93;akaRandomName940416[4] = 125;akaRandomName940416[5] = 41;akaRandomName940416[6] = '\\0';string s=akaRandomName940416;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 20 Valid Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "({[}",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "123"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "91"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "125"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_manual_5(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_manual_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName473636 = new char[5];akaRandomName473636[0] = 40;akaRandomName473636[1] = 123;akaRandomName473636[2] = 91;akaRandomName473636[3] = 125;akaRandomName473636[4] = '\\0';string s=akaRandomName473636;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_manual_5\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 20 Valid Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName623774 = new char[5];akaRandomName623774[0] = 40;akaRandomName623774[1] = 123;akaRandomName623774[2] = 91;akaRandomName623774[3] = 125;akaRandomName623774[4] = '\\0';string s=akaRandomName623774;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 20 Valid Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "[()]",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "91"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "41"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "93"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_manual_1(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_manual_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName807535 = new char[5];akaRandomName807535[0] = 91;akaRandomName807535[1] = 40;akaRandomName807535[2] = 41;akaRandomName807535[3] = 93;akaRandomName807535[4] = '\\0';string s=akaRandomName807535;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_manual_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 20 Valid Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName30124 = new char[5];akaRandomName30124[0] = 91;akaRandomName30124[1] = 40;akaRandomName30124[2] = 41;akaRandomName30124[3] = 93;akaRandomName30124[4] = '\\0';string s=akaRandomName30124;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 20 Valid Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "()",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "41"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_manual_0(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_manual_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName141092 = new char[3];akaRandomName141092[0] = 40;akaRandomName141092[1] = 41;akaRandomName141092[2] = '\\0';string s=akaRandomName141092;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_manual_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 20 Valid Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName129447 = new char[3];akaRandomName129447[0] = 40;akaRandomName129447[1] = 41;akaRandomName129447[2] = '\\0';string s=akaRandomName129447;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 20 Valid Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 20 Valid Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 20 Valid Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 20 Valid Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 20 Valid Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "){",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "41"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "123"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 20 Valid Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName977257 = new char[3];akaRandomName977257[0] = 41;akaRandomName977257[1] = 123;akaRandomName977257[2] = '\\0';string s=akaRandomName977257;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 20 Valid Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 20 Valid Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName133162 = new char[3];akaRandomName133162[0] = 41;akaRandomName133162[1] = 123;akaRandomName133162[2] = '\\0';string s=akaRandomName133162;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 20 Valid Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 20 Valid Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_directed_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 20 Valid Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 20 Valid Parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 8,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 20 Valid Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "({])}",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "123"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "93"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "41"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[4]",
                                            "virtual_name": "s[4]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[4]",
                                            "correspondingType": "char",
                                            "value": "125"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_manual_6(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_manual_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName923690 = new char[6];akaRandomName923690[0] = 40;akaRandomName923690[1] = 123;akaRandomName923690[2] = 93;akaRandomName923690[3] = 41;akaRandomName923690[4] = 125;akaRandomName923690[5] = '\\0';string s=akaRandomName923690;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_manual_6\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 20 Valid Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName953837 = new char[6];akaRandomName953837[0] = 40;akaRandomName953837[1] = 123;akaRandomName953837[2] = 93;akaRandomName953837[3] = 41;akaRandomName953837[4] = 125;akaRandomName953837[5] = '\\0';string s=akaRandomName953837;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 9,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 20 Valid Parentheses.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isValid(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s",
                                    "correspondingType": "string",
                                    "value": "({[}",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "40"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "123"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "91"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "125"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isValid_string_manual_8(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_manual_8\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName307055 = new char[5];akaRandomName307055[0] = 40;akaRandomName307055[1] = 123;akaRandomName307055[2] = 91;akaRandomName307055[3] = 125;akaRandomName307055[4] = '\\0';string s=akaRandomName307055;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_manual_8\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 20 Valid Parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName747478 = new char[5];akaRandomName747478[0] = 40;akaRandomName747478[1] = 123;akaRandomName747478[2] = 91;akaRandomName747478[3] = 125;akaRandomName747478[4] = '\\0';string s=akaRandomName747478;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isValid(string s) {\r         if (s.size() % 2) return false;\r         stack<char> left_stack;\r         for (char ch : s) {\r             if (ch == '(' || ch == '[' || ch == '{') {\r                 left_stack.push(ch);\r             } else if (left_stack.empty() ||\r                 left_stack.top() == '(' && ch != ')' ||\r                 left_stack.top() == '[' && ch != ']' ||\r                 left_stack.top() == '{' && ch != '}') {\r                 return false;\r             } else {\r                 left_stack.pop();\r             }\r         }\r         return left_stack.empty();\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\manual6\\LeetCode 20 Valid Parentheses.cpp\\Solution\\isValid(string)"
    },
    {
        "f": [],
        "fm": "int firstMissingPositive(vector<int>& nums) {\r         for (int &n : nums) {\r             while (0 < n && n <= nums.size() && n != nums[n - 1]) {\r                 swap(n, nums[n - 1]);\r             }\r         }\r         for (int i = 0; i < nums.size(); i++) {\r             if (nums[i] != i + 1) {\r                 return i + 1;\r             }\r         }\r         return nums.size() + 1;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 41 First Missing Positive.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "firstMissingPositive(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "558125841"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "771970349"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "681347715"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_firstMissingPositive_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_firstMissingPositive_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 41 First Missing Positive.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=558125841;\nnums.push_back(nums_element0);\nint nums_element1=771970349;\nnums.push_back(nums_element1);\nint nums_element2=681347715;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_firstMissingPositive_vector_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->firstMissingPositive(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 41 First Missing Positive.cpp\\\\Solution\\\\firstMissingPositive(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 41 First Missing Positive.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=558125841;\nnums.push_back(nums_element0);\nint nums_element1=771970349;\nnums.push_back(nums_element1);\nint nums_element2=681347715;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 41 First Missing Positive.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "firstMissingPositive(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_firstMissingPositive_vector_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_firstMissingPositive_vector_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 41 First Missing Positive.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_firstMissingPositive_vector_int_directed_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->firstMissingPositive(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 41 First Missing Positive.cpp\\\\Solution\\\\firstMissingPositive(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 41 First Missing Positive.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 41 First Missing Positive.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "firstMissingPositive(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_firstMissingPositive_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_firstMissingPositive_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 41 First Missing Positive.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_firstMissingPositive_vector_int_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->firstMissingPositive(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 41 First Missing Positive.cpp\\\\Solution\\\\firstMissingPositive(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 41 First Missing Positive.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 41 First Missing Positive.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "firstMissingPositive(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "1"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "1"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_firstMissingPositive_vector_int_manual_0(void) {\n{\nAKA_test_case_name=\"Solution_firstMissingPositive_vector_int_manual_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1;\nnums.push_back(nums_element0);\nint nums_element1=1;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_firstMissingPositive_vector_int_manual_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->firstMissingPositive(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 41 First Missing Positive.cpp\\\\Solution\\\\firstMissingPositive(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1;\nnums.push_back(nums_element0);\nint nums_element1=1;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 41 First Missing Positive.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "firstMissingPositive(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 4,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "3"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "4"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "-1"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "1"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_firstMissingPositive_vector_int_manual_2(void) {\n{\nAKA_test_case_name=\"Solution_firstMissingPositive_vector_int_manual_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=3;\nnums.push_back(nums_element0);\nint nums_element1=4;\nnums.push_back(nums_element1);\nint nums_element2=-1;\nnums.push_back(nums_element2);\nint nums_element3=1;\nnums.push_back(nums_element3);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_firstMissingPositive_vector_int_manual_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->firstMissingPositive(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 41 First Missing Positive.cpp\\\\Solution\\\\firstMissingPositive(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=3;\nnums.push_back(nums_element0);\nint nums_element1=4;\nnums.push_back(nums_element1);\nint nums_element2=-1;\nnums.push_back(nums_element2);\nint nums_element3=1;\nnums.push_back(nums_element3);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int firstMissingPositive(vector<int>& nums) {\r         for (int &n : nums) {\r             while (0 < n && n <= nums.size() && n != nums[n - 1]) {\r                 swap(n, nums[n - 1]);\r             }\r         }\r         for (int i = 0; i < nums.size(); i++) {\r             if (nums[i] != i + 1) {\r                 return i + 1;\r             }\r         }\r         return nums.size() + 1;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\manual6\\LeetCode 41 First Missing Positive.cpp\\Solution\\firstMissingPositive(vector<int>&)"
    },
    {
        "f": [],
        "fm": "int lengthOfLastWord(string s) {\r         int len = 0;\r         for (int i = s.size(); i >= 0; i--) {\r             if (isalpha(s[i])) {\r                 len++;\r             } else if (len > 0) {\r                 break;\r             }\r         }\r         return len;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 58 Length of Last Word.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "lengthOfLastWord(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s",
                                    "correspondingType": "string",
                                    "value": " ewjknq gfjnk  ",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "101"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "119"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "106"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[4]",
                                            "virtual_name": "s[4]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[4]",
                                            "correspondingType": "char",
                                            "value": "107"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[5]",
                                            "virtual_name": "s[5]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[5]",
                                            "correspondingType": "char",
                                            "value": "110"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[6]",
                                            "virtual_name": "s[6]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[6]",
                                            "correspondingType": "char",
                                            "value": "113"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[7]",
                                            "virtual_name": "s[7]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[7]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[8]",
                                            "virtual_name": "s[8]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[8]",
                                            "correspondingType": "char",
                                            "value": "103"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[9]",
                                            "virtual_name": "s[9]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[9]",
                                            "correspondingType": "char",
                                            "value": "102"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[10]",
                                            "virtual_name": "s[10]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[10]",
                                            "correspondingType": "char",
                                            "value": "106"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[11]",
                                            "virtual_name": "s[11]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[11]",
                                            "correspondingType": "char",
                                            "value": "110"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[12]",
                                            "virtual_name": "s[12]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[12]",
                                            "correspondingType": "char",
                                            "value": "107"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[13]",
                                            "virtual_name": "s[13]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[13]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[14]",
                                            "virtual_name": "s[14]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[14]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_lengthOfLastWord_string_manual_5(void) {\n{\nAKA_test_case_name=\"Solution_lengthOfLastWord_string_manual_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName269783 = new char[16];akaRandomName269783[0] = 32;akaRandomName269783[1] = 101;akaRandomName269783[2] = 119;akaRandomName269783[3] = 106;akaRandomName269783[4] = 107;akaRandomName269783[5] = 110;akaRandomName269783[6] = 113;akaRandomName269783[7] = 32;akaRandomName269783[8] = 103;akaRandomName269783[9] = 102;akaRandomName269783[10] = 106;akaRandomName269783[11] = 110;akaRandomName269783[12] = 107;akaRandomName269783[13] = 32;akaRandomName269783[14] = 32;akaRandomName269783[15] = '\\0';string s=akaRandomName269783;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_lengthOfLastWord_string_manual_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->lengthOfLastWord(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 58 Length of Last Word.cpp\\\\Solution\\\\lengthOfLastWord(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName853273 = new char[16];akaRandomName853273[0] = 32;akaRandomName853273[1] = 101;akaRandomName853273[2] = 119;akaRandomName853273[3] = 106;akaRandomName853273[4] = 107;akaRandomName853273[5] = 110;akaRandomName853273[6] = 113;akaRandomName853273[7] = 32;akaRandomName853273[8] = 103;akaRandomName853273[9] = 102;akaRandomName853273[10] = 106;akaRandomName853273[11] = 110;akaRandomName853273[12] = 107;akaRandomName853273[13] = 32;akaRandomName853273[14] = 32;akaRandomName853273[15] = '\\0';string s=akaRandomName853273;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 58 Length of Last Word.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "lengthOfLastWord(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "100"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_lengthOfLastWord_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_lengthOfLastWord_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 58 Length of Last Word.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName669608 = new char[2];akaRandomName669608[0] = 100;akaRandomName669608[1] = '\\0';string s=akaRandomName669608;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_lengthOfLastWord_string_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->lengthOfLastWord(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 58 Length of Last Word.cpp\\\\Solution\\\\lengthOfLastWord(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 58 Length of Last Word.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName627434 = new char[2];akaRandomName627434[0] = 100;akaRandomName627434[1] = '\\0';string s=akaRandomName627434;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 58 Length of Last Word.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "lengthOfLastWord(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s",
                                    "correspondingType": "string",
                                    "value": "aa sd",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "115"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[4]",
                                            "virtual_name": "s[4]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[4]",
                                            "correspondingType": "char",
                                            "value": "100"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_lengthOfLastWord_string_manual_4(void) {\n{\nAKA_test_case_name=\"Solution_lengthOfLastWord_string_manual_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName60883 = new char[6];akaRandomName60883[0] = 97;akaRandomName60883[1] = 97;akaRandomName60883[2] = 32;akaRandomName60883[3] = 115;akaRandomName60883[4] = 100;akaRandomName60883[5] = '\\0';string s=akaRandomName60883;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_lengthOfLastWord_string_manual_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->lengthOfLastWord(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 58 Length of Last Word.cpp\\\\Solution\\\\lengthOfLastWord(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName146826 = new char[6];akaRandomName146826[0] = 97;akaRandomName146826[1] = 97;akaRandomName146826[2] = 32;akaRandomName146826[3] = 115;akaRandomName146826[4] = 100;akaRandomName146826[5] = '\\0';string s=akaRandomName146826;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 58 Length of Last Word.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "lengthOfLastWord(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s",
                                    "correspondingType": "string",
                                    "value": "avcasA",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "118"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "99"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[4]",
                                            "virtual_name": "s[4]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[4]",
                                            "correspondingType": "char",
                                            "value": "115"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[5]",
                                            "virtual_name": "s[5]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s\\s[5]",
                                            "correspondingType": "char",
                                            "value": "65"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_lengthOfLastWord_string_manual_0(void) {\n{\nAKA_test_case_name=\"Solution_lengthOfLastWord_string_manual_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName199936 = new char[7];akaRandomName199936[0] = 97;akaRandomName199936[1] = 118;akaRandomName199936[2] = 99;akaRandomName199936[3] = 97;akaRandomName199936[4] = 115;akaRandomName199936[5] = 65;akaRandomName199936[6] = '\\0';string s=akaRandomName199936;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_lengthOfLastWord_string_manual_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->lengthOfLastWord(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 58 Length of Last Word.cpp\\\\Solution\\\\lengthOfLastWord(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName19605 = new char[7];akaRandomName19605[0] = 97;akaRandomName19605[1] = 118;akaRandomName19605[2] = 99;akaRandomName19605[3] = 97;akaRandomName19605[4] = 115;akaRandomName19605[5] = 65;akaRandomName19605[6] = '\\0';string s=akaRandomName19605;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 58 Length of Last Word.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "lengthOfLastWord(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_lengthOfLastWord_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_lengthOfLastWord_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 58 Length of Last Word.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_lengthOfLastWord_string_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->lengthOfLastWord(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 58 Length of Last Word.cpp\\\\Solution\\\\lengthOfLastWord(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 58 Length of Last Word.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int lengthOfLastWord(string s) {\r         int len = 0;\r         for (int i = s.size(); i >= 0; i--) {\r             if (isalpha(s[i])) {\r                 len++;\r             } else if (len > 0) {\r                 break;\r             }\r         }\r         return len;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\manual6\\LeetCode 58 Length of Last Word.cpp\\Solution\\lengthOfLastWord(string)"
    },
    {
        "f": [],
        "fm": "ListNode(int x) : val(x), next(NULL) {}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 61 Rotate List.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 61 Rotate List.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___ListNode",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                    "dataType": "::ListNode",
                                    "realType": "::ListNode",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___ListNode",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                            "dataType": "::ListNode",
                                            "realType": "::ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                            "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                            "rawType": "::ListNode",
                                            "selectedConstructor": "ListNode(int)",
                                            "variableType": "::ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "ListNode(int)",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "next",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode->next",
                                                    "dataType": "ListNode*",
                                                    "realType": "ListNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\next",
                                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___ListNode",
                                    "virtual_name": "AKA_INSTANCE___ListNode",
                                    "dataType": "::ListNode",
                                    "realType": "::ListNode",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___ListNode",
                                            "virtual_name": "AKA_INSTANCE___ListNode",
                                            "dataType": "::ListNode",
                                            "realType": "::ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                            "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                            "rawType": "::ListNode",
                                            "selectedConstructor": "ListNode(int)",
                                            "variableType": "::ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "ListNode(int)",
                                                    "virtual_name": "AKA_INSTANCE___ListNode",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "AKA_INSTANCE___ListNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "1510410309"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "AKA_INSTANCE___ListNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "next",
                                                    "virtual_name": "AKA_INSTANCE___ListNode->next",
                                                    "dataType": "ListNode*",
                                                    "realType": "ListNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\next",
                                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "ListNode(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)"
                        }
                    ]
                },
                "td": "void AKA_TEST_ListNode_int_random_0(void) {\n{\nAKA_test_case_name=\"ListNode_int_random_0\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___ListNode */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___ListNode_x=1510410309;\nAKA_mark(\"<<PRE-CALLING>> Test ListNode_int_random_0\");AKA_mark(\"Calling: .\\\\manual6\\\\LeetCode 61 Rotate List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___ListNode\\\\AKA_INSTANCE___ListNode\\\\ListNode(int)\");AKA_fCall++;AKA_INSTANCE___ListNode = new ::ListNode(AKA_INSTANCE___ListNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nAKA_INSTANCE___ListNode->next;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___ListNode */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___ListNode_x=1510410309;\nAKA_mark(\"<<PRE-CALLING>> Test ListNode_int_random_0\");AKA_mark(\"Calling: .\\\\manual6\\\\LeetCode 61 Rotate List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___ListNode\\\\AKA_INSTANCE___ListNode\\\\ListNode(int)\");AKA_fCall++;AKA_INSTANCE___ListNode = new ::ListNode(AKA_INSTANCE___ListNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nAKA_INSTANCE___ListNode->next;\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)"
    },
    {
        "f": [],
        "fm": "ListNode* rotateRight(ListNode* head, int k) {\r         if (!head) return NULL;\r         \r         int size = 1;\r         ListNode *pi = head;\r         while (pi->next) {\r             size++;\r             pi = pi->next;\r         }\r         pi->next = head;\r         \r         for (int i = 0; i < (size - (k % size)) % size; i++) {\r             pi = pi->next;\r         }\r         head = pi->next;\r         pi->next = NULL;\r         return head;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 61 Rotate List.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 61 Rotate List.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "rotateRight(ListNode*,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "ListNode*",
                            "realType": "ListNode*",
                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "EXPECTED_k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "EXPECTED_head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "level": 1,
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "head[0]",
                                            "virtual_name": "head[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head\\head[0]",
                                            "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "head",
                                                    "virtual_name": "head[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head\\head",
                                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "head[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "head0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "-1698293427"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "head[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "head[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "head[1]",
                                            "virtual_name": "head[1]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head\\head[1]",
                                            "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "head",
                                                    "virtual_name": "head[1]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head\\head",
                                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "head[1]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "head1_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "1627153198"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "head[1].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "head[1].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "2"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\RETURN",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_rotateRight_ListNodemul_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_rotateRight_ListNodemul_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-1698293427;\nAKA_mark(\"Calling: .\\\\manual6\\\\LeetCode 61 Rotate List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\rotateRight(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1627153198;\nAKA_mark(\"Calling: .\\\\manual6\\\\LeetCode 61 Rotate List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\rotateRight(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nint k=2;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode k */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_rotateRight_ListNodemul_int_random_2\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->rotateRight(head,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 61 Rotate List.cpp\\\\Solution\\\\rotateRight(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-1698293427;\nAKA_mark(\"Calling: .\\\\manual6\\\\LeetCode 61 Rotate List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\rotateRight(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1627153198;\nAKA_mark(\"Calling: .\\\\manual6\\\\LeetCode 61 Rotate List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\rotateRight(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nint k=2;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode k */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 61 Rotate List.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 61 Rotate List.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "rotateRight(ListNode*,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "ListNode*",
                            "realType": "ListNode*",
                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "EXPECTED_k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "EXPECTED_head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "1"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\RETURN",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_rotateRight_ListNodemul_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_rotateRight_ListNodemul_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nListNode* head;\n\n\nint k=1;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode k */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_rotateRight_ListNodemul_int_random_3\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->rotateRight(head,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 61 Rotate List.cpp\\\\Solution\\\\rotateRight(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nListNode* head;\n\n\nint k=1;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode k */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 61 Rotate List.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 61 Rotate List.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "rotateRight(ListNode*,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "ListNode*",
                            "realType": "ListNode*",
                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "EXPECTED_head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "EXPECTED_k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "level": 1,
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "head[0]",
                                            "virtual_name": "head[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head\\head[0]",
                                            "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "head",
                                                    "virtual_name": "head[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head\\head",
                                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "head[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "head0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "0"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "head[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "head[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                                            "level": 1,
                                                            "size": 0
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\RETURN",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_rotateRight_ListNodemul_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_rotateRight_ListNodemul_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=0;\nAKA_mark(\"Calling: .\\\\manual6\\\\LeetCode 61 Rotate List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\rotateRight(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next = nullptr;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nint k=0;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode k */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_rotateRight_ListNodemul_int_directed_0\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->rotateRight(head,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 61 Rotate List.cpp\\\\Solution\\\\rotateRight(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=0;\nAKA_mark(\"Calling: .\\\\manual6\\\\LeetCode 61 Rotate List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\rotateRight(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next = nullptr;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nint k=0;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode k */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 61 Rotate List.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 61 Rotate List.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "rotateRight(ListNode*,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "ListNode*",
                            "realType": "ListNode*",
                            "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "EXPECTED_head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "EXPECTED_k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\head",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)\\RETURN",
                                    "correspondingType": ".\\manual6\\LeetCode 61 Rotate List.cpp\\ListNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_rotateRight_ListNodemul_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_rotateRight_ListNodemul_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nListNode* head;\n\n\nint k;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode k */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_rotateRight_ListNodemul_int_directed_1\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->rotateRight(head,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 61 Rotate List.cpp\\\\Solution\\\\rotateRight(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 61 Rotate List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nListNode* head;\n\n\nint k;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode k */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     ListNode* rotateRight(ListNode* head, int k) {\r         if (!head) return NULL;\r         \r         int size = 1;\r         ListNode *pi = head;\r         while (pi->next) {\r             size++;\r             pi = pi->next;\r         }\r         pi->next = head;\r         \r         for (int i = 0; i < (size - (k % size)) % size; i++) {\r             pi = pi->next;\r         }\r         head = pi->next;\r         pi->next = NULL;\r         return head;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\manual6\\LeetCode 61 Rotate List.cpp\\Solution\\rotateRight(ListNode*,int)"
    },
    {
        "f": [
            "vector<vector<int>> trans = {\r\n        { 0,  1,  2, -1,  5}, {-1, -1,  2, -1,  5}, {-1, -1, -1, -1,  6},\r\n        {-1,  4, -1, -1,  7}, {-1, -1, -1, -1,  7}, { 8, -1,  6,  3,  5},\r\n        { 8, -1, -1,  3,  6}, { 8, -1, -1, -1,  7}, { 8, -1, -1, -1, -1}\r\n    };"
        ],
        "fm": "bool isNumber(string s) {\r         int state = 0;\r         for (int i = 0; state != -1 && i < s.size(); i++) {\r             switch (s[i]) {\r             case ' ':\r                 state = trans[state][0];\r                 break;\r             case '+':\r             case '-':\r                 state = trans[state][1];\r                 break;\r             case '.':\r                 state = trans[state][2];\r                 break;\r             case 'e':\r                 state = trans[state][3];\r                 break;\r             default:\r                 state = isdigit(s[i]) ? trans[state][4] : -1;\r             }\r         }\r         return state >= 5;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "101"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 65 Valid Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName732442 = new char[2];akaRandomName732442[0] = 101;akaRandomName732442[1] = '\\0';string s=akaRandomName732442;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 65 Valid Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName373405 = new char[2];akaRandomName373405[0] = 101;akaRandomName373405[1] = '\\0';string s=akaRandomName373405;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": " ",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_0(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName160243 = new char[2];akaRandomName160243[0] = 32;akaRandomName160243[1] = '\\0';string s=akaRandomName160243;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName88304 = new char[2];akaRandomName88304[0] = 32;akaRandomName88304[1] = '\\0';string s=akaRandomName88304;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "36"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 65 Valid Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName823201 = new char[2];akaRandomName823201[0] = 36;akaRandomName823201[1] = '\\0';string s=akaRandomName823201;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 65 Valid Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName727508 = new char[2];akaRandomName727508[0] = 36;akaRandomName727508[1] = '\\0';string s=akaRandomName727508;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": ".",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_6(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName878558 = new char[2];akaRandomName878558[0] = 46;akaRandomName878558[1] = '\\0';string s=akaRandomName878558;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_6\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName978858 = new char[2];akaRandomName978858[0] = 46;akaRandomName978858[1] = '\\0';string s=akaRandomName978858;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "222 ",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "50"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "50"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "50"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_11(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_11\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName514064 = new char[5];akaRandomName514064[0] = 50;akaRandomName514064[1] = 50;akaRandomName514064[2] = 50;akaRandomName514064[3] = 32;akaRandomName514064[4] = '\\0';string s=akaRandomName514064;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_11\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName251280 = new char[5];akaRandomName251280[0] = 50;akaRandomName251280[1] = 50;akaRandomName251280[2] = 50;akaRandomName251280[3] = 32;akaRandomName251280[4] = '\\0';string s=akaRandomName251280;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "-5.5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "45"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "53"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "53"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_5(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName975696 = new char[5];akaRandomName975696[0] = 45;akaRandomName975696[1] = 53;akaRandomName975696[2] = 46;akaRandomName975696[3] = 53;akaRandomName975696[4] = '\\0';string s=akaRandomName975696;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_5\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName315035 = new char[5];akaRandomName315035[0] = 45;akaRandomName315035[1] = 53;akaRandomName315035[2] = 46;akaRandomName315035[3] = 53;akaRandomName315035[4] = '\\0';string s=akaRandomName315035;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": " 42",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "52"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "50"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_10(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_10\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName898623 = new char[4];akaRandomName898623[0] = 32;akaRandomName898623[1] = 52;akaRandomName898623[2] = 50;akaRandomName898623[3] = '\\0';string s=akaRandomName898623;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_10\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName459369 = new char[4];akaRandomName459369[0] = 32;akaRandomName459369[1] = 52;akaRandomName459369[2] = 50;akaRandomName459369[3] = '\\0';string s=akaRandomName459369;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": ".5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "53"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_8(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_8\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName544019 = new char[3];akaRandomName544019[0] = 46;akaRandomName544019[1] = 53;akaRandomName544019[2] = '\\0';string s=akaRandomName544019;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_8\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName310482 = new char[3];akaRandomName310482[0] = 46;akaRandomName310482[1] = 53;akaRandomName310482[2] = '\\0';string s=akaRandomName310482;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 8,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "-8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "45"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "56"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_13(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_13\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName92333 = new char[3];akaRandomName92333[0] = 45;akaRandomName92333[1] = 56;akaRandomName92333[2] = '\\0';string s=akaRandomName92333;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_13\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName224741 = new char[3];akaRandomName224741[0] = 45;akaRandomName224741[1] = 56;akaRandomName224741[2] = '\\0';string s=akaRandomName224741;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 9,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "5.",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "53"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_7(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName785565 = new char[3];akaRandomName785565[0] = 53;akaRandomName785565[1] = 46;akaRandomName785565[2] = '\\0';string s=akaRandomName785565;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_7\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName548270 = new char[3];akaRandomName548270[0] = 53;akaRandomName548270[1] = 46;akaRandomName548270[2] = '\\0';string s=akaRandomName548270;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 10,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "+5.52",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "43"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "53"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "53"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[4]",
                                            "virtual_name": "s[4]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[4]",
                                            "correspondingType": "char",
                                            "value": "50"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_12(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_12\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName24978 = new char[6];akaRandomName24978[0] = 43;akaRandomName24978[1] = 53;akaRandomName24978[2] = 46;akaRandomName24978[3] = 53;akaRandomName24978[4] = 50;akaRandomName24978[5] = '\\0';string s=akaRandomName24978;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_12\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName168392 = new char[6];akaRandomName168392[0] = 43;akaRandomName168392[1] = 53;akaRandomName168392[2] = 46;akaRandomName168392[3] = 53;akaRandomName168392[4] = 50;akaRandomName168392[5] = '\\0';string s=akaRandomName168392;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 11,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "+",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "43"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_2(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName412859 = new char[2];akaRandomName412859[0] = 43;akaRandomName412859[1] = '\\0';string s=akaRandomName412859;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName814931 = new char[2];akaRandomName814931[0] = 43;akaRandomName814931[1] = '\\0';string s=akaRandomName814931;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 12,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": ".775",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "55"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "55"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "53"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_15(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_15\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName617408 = new char[5];akaRandomName617408[0] = 46;akaRandomName617408[1] = 55;akaRandomName617408[2] = 55;akaRandomName617408[3] = 53;akaRandomName617408[4] = '\\0';string s=akaRandomName617408;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_15\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName480345 = new char[5];akaRandomName480345[0] = 46;akaRandomName480345[1] = 55;akaRandomName480345[2] = 55;akaRandomName480345[3] = 53;akaRandomName480345[4] = '\\0';string s=akaRandomName480345;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 13,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": " ac ",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "99"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_1(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName950430 = new char[5];akaRandomName950430[0] = 32;akaRandomName950430[1] = 97;akaRandomName950430[2] = 99;akaRandomName950430[3] = 32;akaRandomName950430[4] = '\\0';string s=akaRandomName950430;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName925709 = new char[5];akaRandomName925709[0] = 32;akaRandomName925709[1] = 97;akaRandomName925709[2] = 99;akaRandomName925709[3] = 32;akaRandomName925709[4] = '\\0';string s=akaRandomName925709;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 14,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "7.89",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "55"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "56"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "57"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_14(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_14\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName998566 = new char[5];akaRandomName998566[0] = 55;akaRandomName998566[1] = 46;akaRandomName998566[2] = 56;akaRandomName998566[3] = 57;akaRandomName998566[4] = '\\0';string s=akaRandomName998566;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_14\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName585248 = new char[5];akaRandomName585248[0] = 55;akaRandomName585248[1] = 46;akaRandomName585248[2] = 56;akaRandomName585248[3] = 57;akaRandomName585248[4] = '\\0';string s=akaRandomName585248;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 15,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "+98",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "43"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "57"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "56"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_4(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName301446 = new char[4];akaRandomName301446[0] = 43;akaRandomName301446[1] = 57;akaRandomName301446[2] = 56;akaRandomName301446[3] = '\\0';string s=akaRandomName301446;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName756618 = new char[4];akaRandomName756618[0] = 43;akaRandomName756618[1] = 57;akaRandomName756618[2] = 56;akaRandomName756618[3] = '\\0';string s=akaRandomName756618;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 16,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": ".",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_17(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_17\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName257025 = new char[2];akaRandomName257025[0] = 46;akaRandomName257025[1] = '\\0';string s=akaRandomName257025;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_17\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName499151 = new char[2];akaRandomName499151[0] = 46;akaRandomName499151[1] = '\\0';string s=akaRandomName499151;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 17,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "-",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "45"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_3(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName162193 = new char[2];akaRandomName162193[0] = 45;akaRandomName162193[1] = '\\0';string s=akaRandomName162193;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName285858 = new char[2];akaRandomName285858[0] = 45;akaRandomName285858[1] = '\\0';string s=akaRandomName285858;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 18,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "     23",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[4]",
                                            "virtual_name": "s[4]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[4]",
                                            "correspondingType": "char",
                                            "value": "32"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[5]",
                                            "virtual_name": "s[5]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[5]",
                                            "correspondingType": "char",
                                            "value": "50"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[6]",
                                            "virtual_name": "s[6]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[6]",
                                            "correspondingType": "char",
                                            "value": "51"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_16(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_16\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName507999 = new char[8];akaRandomName507999[0] = 32;akaRandomName507999[1] = 32;akaRandomName507999[2] = 32;akaRandomName507999[3] = 32;akaRandomName507999[4] = 32;akaRandomName507999[5] = 50;akaRandomName507999[6] = 51;akaRandomName507999[7] = '\\0';string s=akaRandomName507999;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_16\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName34209 = new char[8];akaRandomName34209[0] = 32;akaRandomName34209[1] = 32;akaRandomName34209[2] = 32;akaRandomName34209[3] = 32;akaRandomName34209[4] = 32;akaRandomName34209[5] = 50;akaRandomName34209[6] = 51;akaRandomName34209[7] = '\\0';string s=akaRandomName34209;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 19,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "--",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "45"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "45"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_18(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_18\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName367625 = new char[3];akaRandomName367625[0] = 45;akaRandomName367625[1] = 45;akaRandomName367625[2] = '\\0';string s=akaRandomName367625;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_18\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName760898 = new char[3];akaRandomName760898[0] = 45;akaRandomName760898[1] = 45;akaRandomName760898[2] = '\\0';string s=akaRandomName760898;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 20,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 65 Valid Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 65 Valid Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isNumber(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s",
                                    "correspondingType": "string",
                                    "value": "2.e2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "50"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[1]",
                                            "virtual_name": "s[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[1]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[2]",
                                            "virtual_name": "s[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[2]",
                                            "correspondingType": "char",
                                            "value": "101"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[3]",
                                            "virtual_name": "s[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\s\\s[3]",
                                            "correspondingType": "char",
                                            "value": "50"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isNumber_string_manual_9(void) {\n{\nAKA_test_case_name=\"Solution_isNumber_string_manual_9\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName414028 = new char[5];akaRandomName414028[0] = 50;akaRandomName414028[1] = 46;akaRandomName414028[2] = 101;akaRandomName414028[3] = 50;akaRandomName414028[4] = '\\0';string s=akaRandomName414028;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNumber_string_manual_9\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNumber(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 65 Valid Number.cpp\\\\Solution\\\\isNumber(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName869431 = new char[5];akaRandomName869431[0] = 50;akaRandomName869431[1] = 46;akaRandomName869431[2] = 101;akaRandomName869431[3] = 50;akaRandomName869431[4] = '\\0';string s=akaRandomName869431;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isNumber(string s) {\r         int state = 0;\r         for (int i = 0; state != -1 && i < s.size(); i++) {\r             switch (s[i]) {\r             case ' ':\r                 state = trans[state][0];\r                 break;\r             case '+':\r             case '-':\r                 state = trans[state][1];\r                 break;\r             case '.':\r                 state = trans[state][2];\r                 break;\r             case 'e':\r                 state = trans[state][3];\r                 break;\r             default:\r                 state = isdigit(s[i]) ? trans[state][4] : -1;\r             }\r         }\r         return state >= 5;\r     }\r     \r private:\r     vector<vector<int>> trans = {\r         { 0,  1,  2, -1,  5}, {-1, -1,  2, -1,  5}, {-1, -1, -1, -1,  6},\r         {-1,  4, -1, -1,  7}, {-1, -1, -1, -1,  7}, { 8, -1,  6,  3,  5},\r         { 8, -1, -1,  3,  6}, { 8, -1, -1, -1,  7}, { 8, -1, -1, -1, -1}\r     };\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\manual6\\LeetCode 65 Valid Number.cpp\\Solution\\isNumber(string)"
    },
    {
        "f": [],
        "fm": "vector<string> fullJustify(vector<string>& words, int maxWidth) {\r         vector<string> ans;\r         int begin = 0, width = 0;\r         for (int i = 0; i < words.size(); i++) {\r             if (width + words[i].size() + i - begin - 1 >= maxWidth) {\r                 ans.push_back(\"\");\r                 if (i - begin <= 1) {\r                     ans.back() += words[begin];\r                     ans.back() += string(maxWidth - ans.back().size(), ' ');\r                 } else {\r                     int quo = (maxWidth - width) / (i - begin - 1);\r                     int rem = (maxWidth - width) % (i - begin - 1);\r                     for (int j = begin; j < i - 1; j++) {\r                         ans.back() += words[j];\r                         ans.back() += string(j < begin + rem ? quo + 1 : quo, ' ');\r                     }\r                     ans.back() += words[i - 1];\r                 }\r                 begin = i;\r                 width = 0;\r             }\r             width += words[i].size();\r         }\r         ans.push_back(\"\");\r         for (int i = begin; i < words.size() - 1; i++) {\r             ans.back() += words[i];\r             ans.back() += \" \";\r         }\r         ans.back() += words.back();\r         ans.back() += string(maxWidth - ans.back().size(), ' ');\r         return ans;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "words_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0",
                                            "correspondingType": "string",
                                            "value": "longerwotd",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "words_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "108"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[1]",
                                                    "virtual_name": "words_element0[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[1]",
                                                    "correspondingType": "char",
                                                    "value": "111"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[2]",
                                                    "virtual_name": "words_element0[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[2]",
                                                    "correspondingType": "char",
                                                    "value": "110"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[3]",
                                                    "virtual_name": "words_element0[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[3]",
                                                    "correspondingType": "char",
                                                    "value": "103"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[4]",
                                                    "virtual_name": "words_element0[4]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[4]",
                                                    "correspondingType": "char",
                                                    "value": "101"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[5]",
                                                    "virtual_name": "words_element0[5]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[5]",
                                                    "correspondingType": "char",
                                                    "value": "114"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[6]",
                                                    "virtual_name": "words_element0[6]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[6]",
                                                    "correspondingType": "char",
                                                    "value": "119"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[7]",
                                                    "virtual_name": "words_element0[7]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[7]",
                                                    "correspondingType": "char",
                                                    "value": "111"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[8]",
                                                    "virtual_name": "words_element0[8]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[8]",
                                                    "correspondingType": "char",
                                                    "value": "116"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[9]",
                                                    "virtual_name": "words_element0[9]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[9]",
                                                    "correspondingType": "char",
                                                    "value": "100"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "words_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1",
                                            "correspondingType": "string",
                                            "value": "short",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "words_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "115"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[1]",
                                                    "virtual_name": "words_element1[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[1]",
                                                    "correspondingType": "char",
                                                    "value": "104"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[2]",
                                                    "virtual_name": "words_element1[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[2]",
                                                    "correspondingType": "char",
                                                    "value": "111"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[3]",
                                                    "virtual_name": "words_element1[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[3]",
                                                    "correspondingType": "char",
                                                    "value": "114"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[4]",
                                                    "virtual_name": "words_element1[4]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[4]",
                                                    "correspondingType": "char",
                                                    "value": "116"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "15"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_manual_4(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_manual_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<string> words;\n\n\nint maxWidth=15;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName847108 = new char[11];akaRandomName847108[0] = 108;akaRandomName847108[1] = 111;akaRandomName847108[2] = 110;akaRandomName847108[3] = 103;akaRandomName847108[4] = 101;akaRandomName847108[5] = 114;akaRandomName847108[6] = 119;akaRandomName847108[7] = 111;akaRandomName847108[8] = 116;akaRandomName847108[9] = 100;akaRandomName847108[10] = '\\0';string words_element0=akaRandomName847108;\nwords.push_back(words_element0);\nchar* akaRandomName698919 = new char[6];akaRandomName698919[0] = 115;akaRandomName698919[1] = 104;akaRandomName698919[2] = 111;akaRandomName698919[3] = 114;akaRandomName698919[4] = 116;akaRandomName698919[5] = '\\0';string words_element1=akaRandomName698919;\nwords.push_back(words_element1);\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_manual_4\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<string> words;\n\n\nint maxWidth=15;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName920264 = new char[11];akaRandomName920264[0] = 108;akaRandomName920264[1] = 111;akaRandomName920264[2] = 110;akaRandomName920264[3] = 103;akaRandomName920264[4] = 101;akaRandomName920264[5] = 114;akaRandomName920264[6] = 119;akaRandomName920264[7] = 111;akaRandomName920264[8] = 116;akaRandomName920264[9] = 100;akaRandomName920264[10] = '\\0';string words_element0=akaRandomName920264;\nwords.push_back(words_element0);\nchar* akaRandomName916163 = new char[6];akaRandomName916163[0] = 115;akaRandomName916163[1] = 104;akaRandomName916163[2] = 111;akaRandomName916163[3] = 114;akaRandomName916163[4] = 116;akaRandomName916163[5] = '\\0';string words_element1=akaRandomName916163;\nwords.push_back(words_element1);\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 4,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "words_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0",
                                            "correspondingType": "string",
                                            "value": "a",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "words_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "97"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "words_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1",
                                            "correspondingType": "string",
                                            "value": "b",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "words_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "98"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #2",
                                            "virtual_name": "words_element2",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #2",
                                            "correspondingType": "string",
                                            "value": "c",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[0]",
                                                    "virtual_name": "words_element2[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #2\\element #2[0]",
                                                    "correspondingType": "char",
                                                    "value": "99"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #3",
                                            "virtual_name": "words_element3",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #3",
                                            "correspondingType": "string",
                                            "value": "d",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #3[0]",
                                                    "virtual_name": "words_element3[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #3\\element #3[0]",
                                                    "correspondingType": "char",
                                                    "value": "100"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "10"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_manual_3(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_manual_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<string> words;\n\n\nint maxWidth=10;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName579726 = new char[2];akaRandomName579726[0] = 97;akaRandomName579726[1] = '\\0';string words_element0=akaRandomName579726;\nwords.push_back(words_element0);\nchar* akaRandomName364270 = new char[2];akaRandomName364270[0] = 98;akaRandomName364270[1] = '\\0';string words_element1=akaRandomName364270;\nwords.push_back(words_element1);\nchar* akaRandomName797570 = new char[2];akaRandomName797570[0] = 99;akaRandomName797570[1] = '\\0';string words_element2=akaRandomName797570;\nwords.push_back(words_element2);\nchar* akaRandomName906029 = new char[2];akaRandomName906029[0] = 100;akaRandomName906029[1] = '\\0';string words_element3=akaRandomName906029;\nwords.push_back(words_element3);\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_manual_3\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<string> words;\n\n\nint maxWidth=10;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName422108 = new char[2];akaRandomName422108[0] = 97;akaRandomName422108[1] = '\\0';string words_element0=akaRandomName422108;\nwords.push_back(words_element0);\nchar* akaRandomName659330 = new char[2];akaRandomName659330[0] = 98;akaRandomName659330[1] = '\\0';string words_element1=akaRandomName659330;\nwords.push_back(words_element1);\nchar* akaRandomName766413 = new char[2];akaRandomName766413[0] = 99;akaRandomName766413[1] = '\\0';string words_element2=akaRandomName766413;\nwords.push_back(words_element2);\nchar* akaRandomName338689 = new char[2];akaRandomName338689[0] = 100;akaRandomName338689[1] = '\\0';string words_element3=akaRandomName338689;\nwords.push_back(words_element3);\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_directed_0\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_directed_10(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_directed_10\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_directed_10\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_directed_2\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_directed_1\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_directed_4\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_directed_3\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 8,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_directed_6(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_directed_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_directed_6\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 9,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 4,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "words_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0",
                                            "correspondingType": "string",
                                            "value": "This",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "words_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "84"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[1]",
                                                    "virtual_name": "words_element0[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[1]",
                                                    "correspondingType": "char",
                                                    "value": "104"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[2]",
                                                    "virtual_name": "words_element0[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[2]",
                                                    "correspondingType": "char",
                                                    "value": "105"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[3]",
                                                    "virtual_name": "words_element0[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[3]",
                                                    "correspondingType": "char",
                                                    "value": "115"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "words_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1",
                                            "correspondingType": "string",
                                            "value": "is",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "words_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "105"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[1]",
                                                    "virtual_name": "words_element1[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[1]",
                                                    "correspondingType": "char",
                                                    "value": "115"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #2",
                                            "virtual_name": "words_element2",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #2",
                                            "correspondingType": "string",
                                            "value": "an",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[0]",
                                                    "virtual_name": "words_element2[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #2\\element #2[0]",
                                                    "correspondingType": "char",
                                                    "value": "97"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[1]",
                                                    "virtual_name": "words_element2[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #2\\element #2[1]",
                                                    "correspondingType": "char",
                                                    "value": "110"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #3",
                                            "virtual_name": "words_element3",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #3",
                                            "correspondingType": "string",
                                            "value": "example",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #3[0]",
                                                    "virtual_name": "words_element3[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #3\\element #3[0]",
                                                    "correspondingType": "char",
                                                    "value": "101"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #3[1]",
                                                    "virtual_name": "words_element3[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #3\\element #3[1]",
                                                    "correspondingType": "char",
                                                    "value": "120"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #3[2]",
                                                    "virtual_name": "words_element3[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #3\\element #3[2]",
                                                    "correspondingType": "char",
                                                    "value": "97"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #3[3]",
                                                    "virtual_name": "words_element3[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #3\\element #3[3]",
                                                    "correspondingType": "char",
                                                    "value": "109"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #3[4]",
                                                    "virtual_name": "words_element3[4]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #3\\element #3[4]",
                                                    "correspondingType": "char",
                                                    "value": "112"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #3[5]",
                                                    "virtual_name": "words_element3[5]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #3\\element #3[5]",
                                                    "correspondingType": "char",
                                                    "value": "108"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #3[6]",
                                                    "virtual_name": "words_element3[6]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #3\\element #3[6]",
                                                    "correspondingType": "char",
                                                    "value": "101"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "16"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_manual_2(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_manual_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<string> words;\n\n\nint maxWidth=16;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName378998 = new char[5];akaRandomName378998[0] = 84;akaRandomName378998[1] = 104;akaRandomName378998[2] = 105;akaRandomName378998[3] = 115;akaRandomName378998[4] = '\\0';string words_element0=akaRandomName378998;\nwords.push_back(words_element0);\nchar* akaRandomName185520 = new char[3];akaRandomName185520[0] = 105;akaRandomName185520[1] = 115;akaRandomName185520[2] = '\\0';string words_element1=akaRandomName185520;\nwords.push_back(words_element1);\nchar* akaRandomName496822 = new char[3];akaRandomName496822[0] = 97;akaRandomName496822[1] = 110;akaRandomName496822[2] = '\\0';string words_element2=akaRandomName496822;\nwords.push_back(words_element2);\nchar* akaRandomName970652 = new char[8];akaRandomName970652[0] = 101;akaRandomName970652[1] = 120;akaRandomName970652[2] = 97;akaRandomName970652[3] = 109;akaRandomName970652[4] = 112;akaRandomName970652[5] = 108;akaRandomName970652[6] = 101;akaRandomName970652[7] = '\\0';string words_element3=akaRandomName970652;\nwords.push_back(words_element3);\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_manual_2\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<string> words;\n\n\nint maxWidth=16;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName106462 = new char[5];akaRandomName106462[0] = 84;akaRandomName106462[1] = 104;akaRandomName106462[2] = 105;akaRandomName106462[3] = 115;akaRandomName106462[4] = '\\0';string words_element0=akaRandomName106462;\nwords.push_back(words_element0);\nchar* akaRandomName643836 = new char[3];akaRandomName643836[0] = 105;akaRandomName643836[1] = 115;akaRandomName643836[2] = '\\0';string words_element1=akaRandomName643836;\nwords.push_back(words_element1);\nchar* akaRandomName541922 = new char[3];akaRandomName541922[0] = 97;akaRandomName541922[1] = 110;akaRandomName541922[2] = '\\0';string words_element2=akaRandomName541922;\nwords.push_back(words_element2);\nchar* akaRandomName184892 = new char[8];akaRandomName184892[0] = 101;akaRandomName184892[1] = 120;akaRandomName184892[2] = 97;akaRandomName184892[3] = 109;akaRandomName184892[4] = 112;akaRandomName184892[5] = 108;akaRandomName184892[6] = 101;akaRandomName184892[7] = '\\0';string words_element3=akaRandomName184892;\nwords.push_back(words_element3);\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 10,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "words_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "words_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "-115"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "words_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1",
                                            "correspondingType": "string",
                                            "value": "3",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "words_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "-65"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "-1067423377"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=-1067423377;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName173437 = new char[2];akaRandomName173437[0] = -115;akaRandomName173437[1] = '\\0';string words_element0=akaRandomName173437;\nwords.push_back(words_element0);\nchar* akaRandomName721083 = new char[2];akaRandomName721083[0] = -65;akaRandomName721083[1] = '\\0';string words_element1=akaRandomName721083;\nwords.push_back(words_element1);\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_random_3\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=-1067423377;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName648111 = new char[2];akaRandomName648111[0] = -115;akaRandomName648111[1] = '\\0';string words_element0=akaRandomName648111;\nwords.push_back(words_element0);\nchar* akaRandomName24114 = new char[2];akaRandomName24114[0] = -65;akaRandomName24114[1] = '\\0';string words_element1=akaRandomName24114;\nwords.push_back(words_element1);\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 11,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_directed_5\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 12,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "words_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0",
                                            "correspondingType": "string",
                                            "value": "Hello",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "words_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "72"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[1]",
                                                    "virtual_name": "words_element0[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[1]",
                                                    "correspondingType": "char",
                                                    "value": "101"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[2]",
                                                    "virtual_name": "words_element0[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[2]",
                                                    "correspondingType": "char",
                                                    "value": "108"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[3]",
                                                    "virtual_name": "words_element0[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[3]",
                                                    "correspondingType": "char",
                                                    "value": "108"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[4]",
                                                    "virtual_name": "words_element0[4]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[4]",
                                                    "correspondingType": "char",
                                                    "value": "111"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "words_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1",
                                            "correspondingType": "string",
                                            "value": "world",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "words_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "119"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[1]",
                                                    "virtual_name": "words_element1[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[1]",
                                                    "correspondingType": "char",
                                                    "value": "111"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[2]",
                                                    "virtual_name": "words_element1[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[2]",
                                                    "correspondingType": "char",
                                                    "value": "114"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[3]",
                                                    "virtual_name": "words_element1[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[3]",
                                                    "correspondingType": "char",
                                                    "value": "108"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[4]",
                                                    "virtual_name": "words_element1[4]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #1\\element #1[4]",
                                                    "correspondingType": "char",
                                                    "value": "100"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "11"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_manual_1(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_manual_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<string> words;\n\n\nint maxWidth=11;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName789413 = new char[6];akaRandomName789413[0] = 72;akaRandomName789413[1] = 101;akaRandomName789413[2] = 108;akaRandomName789413[3] = 108;akaRandomName789413[4] = 111;akaRandomName789413[5] = '\\0';string words_element0=akaRandomName789413;\nwords.push_back(words_element0);\nchar* akaRandomName269259 = new char[6];akaRandomName269259[0] = 119;akaRandomName269259[1] = 111;akaRandomName269259[2] = 114;akaRandomName269259[3] = 108;akaRandomName269259[4] = 100;akaRandomName269259[5] = '\\0';string words_element1=akaRandomName269259;\nwords.push_back(words_element1);\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_manual_1\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<string> words;\n\n\nint maxWidth=11;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName407349 = new char[6];akaRandomName407349[0] = 72;akaRandomName407349[1] = 101;akaRandomName407349[2] = 108;akaRandomName407349[3] = 108;akaRandomName407349[4] = 111;akaRandomName407349[5] = '\\0';string words_element0=akaRandomName407349;\nwords.push_back(words_element0);\nchar* akaRandomName784788 = new char[6];akaRandomName784788[0] = 119;akaRandomName784788[1] = 111;akaRandomName784788[2] = 114;akaRandomName784788[3] = 108;akaRandomName784788[4] = 100;akaRandomName784788[5] = '\\0';string words_element1=akaRandomName784788;\nwords.push_back(words_element1);\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 13,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_directed_8(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_directed_8\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_directed_8\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 14,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "words_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0",
                                            "correspondingType": "string",
                                            "value": "Sịdji",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "words_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "83"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[1]",
                                                    "virtual_name": "words_element0[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[1]",
                                                    "correspondingType": "char",
                                                    "value": "7883"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[2]",
                                                    "virtual_name": "words_element0[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[2]",
                                                    "correspondingType": "char",
                                                    "value": "100"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[3]",
                                                    "virtual_name": "words_element0[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[3]",
                                                    "correspondingType": "char",
                                                    "value": "106"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[4]",
                                                    "virtual_name": "words_element0[4]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words\\element #0\\element #0[4]",
                                                    "correspondingType": "char",
                                                    "value": "105"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "10"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_manual_0(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_manual_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<string> words;\n\n\nint maxWidth=10;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName324386 = new char[6];akaRandomName324386[0] = 83;akaRandomName324386[1] = 7883;akaRandomName324386[2] = 100;akaRandomName324386[3] = 106;akaRandomName324386[4] = 105;akaRandomName324386[5] = '\\0';string words_element0=akaRandomName324386;\nwords.push_back(words_element0);\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_manual_0\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nvector<string> words;\n\n\nint maxWidth=10;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName191851 = new char[6];akaRandomName191851[0] = 83;akaRandomName191851[1] = 7883;akaRandomName191851[2] = 100;akaRandomName191851[3] = 106;akaRandomName191851[4] = 105;akaRandomName191851[5] = '\\0';string words_element0=akaRandomName191851;\nwords.push_back(words_element0);\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 15,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_directed_7(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_directed_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_directed_7\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 16,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 68 Text Justification.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 68 Text Justification.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "fullJustify(vector<string>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "EXPECTED_maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "maxWidth",
                                    "virtual_name": "maxWidth",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\maxWidth",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_fullJustify_vector_string_int_directed_9(void) {\n{\nAKA_test_case_name=\"Solution_fullJustify_vector_string_int_directed_9\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fullJustify_vector_string_int_directed_9\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fullJustify(words,maxWidth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 68 Text Justification.cpp\\\\Solution\\\\fullJustify(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 68 Text Justification.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint maxWidth=0;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode maxWidth */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<string> fullJustify(vector<string>& words, int maxWidth) {\r         vector<string> ans;\r         int begin = 0, width = 0;\r         for (int i = 0; i < words.size(); i++) {\r             if (width + words[i].size() + i - begin - 1 >= maxWidth) {\r                 ans.push_back(\"\");\r                 if (i - begin <= 1) {\r                     ans.back() += words[begin];\r                     ans.back() += string(maxWidth - ans.back().size(), ' ');\r                 } else {\r                     int quo = (maxWidth - width) / (i - begin - 1);\r                     int rem = (maxWidth - width) % (i - begin - 1);\r                     for (int j = begin; j < i - 1; j++) {\r                         ans.back() += words[j];\r                         ans.back() += string(j < begin + rem ? quo + 1 : quo, ' ');\r                     }\r                     ans.back() += words[i - 1];\r                 }\r                 begin = i;\r                 width = 0;\r             }\r             width += words[i].size();\r         }\r         ans.push_back(\"\");\r         for (int i = begin; i < words.size() - 1; i++) {\r             ans.back() += words[i];\r             ans.back() += \" \";\r         }\r         ans.back() += words.back();\r         ans.back() += string(maxWidth - ans.back().size(), ' ');\r         return ans;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\manual6\\LeetCode 68 Text Justification.cpp\\Solution\\fullJustify(vector<string>&,int)"
    },
    {
        "f": [],
        "fm": "string simplifyPath(string path) {\r         vector<string> v;\r         istringstream iss(path);\r         string buf;\r         while (getline(iss, buf, '/')) {\r             if (!buf.empty() && buf != \".\" && buf != \"..\") {\r                 v.push_back(buf);\r             } else if (!v.empty() && buf == \"..\") {\r                 v.pop_back();\r             }\r         }\r         if (v.empty()) {\r             return \"/\";\r         }\r \r         buf.clear();\r         for (string &s : v) {\r             buf += \"/\";\r             buf += s;\r         }\r         return buf;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 71 Simplify Path.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "simplifyPath(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "EXPECTED_path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[0]",
                                            "virtual_name": "path[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[0]",
                                            "correspondingType": "char",
                                            "value": "122"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_simplifyPath_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_simplifyPath_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 71 Simplify Path.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName292349 = new char[2];akaRandomName292349[0] = 122;akaRandomName292349[1] = '\\0';string path=akaRandomName292349;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_simplifyPath_string_random_1\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->simplifyPath(path);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 71 Simplify Path.cpp\\\\Solution\\\\simplifyPath(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 71 Simplify Path.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName157749 = new char[2];akaRandomName157749[0] = 122;akaRandomName157749[1] = '\\0';string path=akaRandomName157749;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 71 Simplify Path.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "simplifyPath(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "EXPECTED_path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_simplifyPath_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_simplifyPath_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 71 Simplify Path.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring path=\"\";\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_simplifyPath_string_directed_0\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->simplifyPath(path);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 71 Simplify Path.cpp\\\\Solution\\\\simplifyPath(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 71 Simplify Path.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring path=\"\";\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 71 Simplify Path.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "simplifyPath(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "EXPECTED_path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "/a/b/c/..",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[0]",
                                            "virtual_name": "path[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[0]",
                                            "correspondingType": "char",
                                            "value": "47"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[1]",
                                            "virtual_name": "path[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[1]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[2]",
                                            "virtual_name": "path[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[2]",
                                            "correspondingType": "char",
                                            "value": "47"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[3]",
                                            "virtual_name": "path[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[3]",
                                            "correspondingType": "char",
                                            "value": "98"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[4]",
                                            "virtual_name": "path[4]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[4]",
                                            "correspondingType": "char",
                                            "value": "47"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[5]",
                                            "virtual_name": "path[5]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[5]",
                                            "correspondingType": "char",
                                            "value": "99"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[6]",
                                            "virtual_name": "path[6]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[6]",
                                            "correspondingType": "char",
                                            "value": "47"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[7]",
                                            "virtual_name": "path[7]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[7]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[8]",
                                            "virtual_name": "path[8]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[8]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_simplifyPath_string_manual_0(void) {\n{\nAKA_test_case_name=\"Solution_simplifyPath_string_manual_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName7215 = new char[10];akaRandomName7215[0] = 47;akaRandomName7215[1] = 97;akaRandomName7215[2] = 47;akaRandomName7215[3] = 98;akaRandomName7215[4] = 47;akaRandomName7215[5] = 99;akaRandomName7215[6] = 47;akaRandomName7215[7] = 46;akaRandomName7215[8] = 46;akaRandomName7215[9] = '\\0';string path=akaRandomName7215;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_simplifyPath_string_manual_0\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->simplifyPath(path);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 71 Simplify Path.cpp\\\\Solution\\\\simplifyPath(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName228661 = new char[10];akaRandomName228661[0] = 47;akaRandomName228661[1] = 97;akaRandomName228661[2] = 47;akaRandomName228661[3] = 98;akaRandomName228661[4] = 47;akaRandomName228661[5] = 99;akaRandomName228661[6] = 47;akaRandomName228661[7] = 46;akaRandomName228661[8] = 46;akaRandomName228661[9] = '\\0';string path=akaRandomName228661;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 71 Simplify Path.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "simplifyPath(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "EXPECTED_path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_simplifyPath_string_manual_5(void) {\n{\nAKA_test_case_name=\"Solution_simplifyPath_string_manual_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nstring path=\"\";\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_simplifyPath_string_manual_5\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->simplifyPath(path);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 71 Simplify Path.cpp\\\\Solution\\\\simplifyPath(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nstring path=\"\";\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 71 Simplify Path.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "simplifyPath(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "EXPECTED_path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "/../a",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[0]",
                                            "virtual_name": "path[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[0]",
                                            "correspondingType": "char",
                                            "value": "47"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[1]",
                                            "virtual_name": "path[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[1]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[2]",
                                            "virtual_name": "path[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[2]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[3]",
                                            "virtual_name": "path[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[3]",
                                            "correspondingType": "char",
                                            "value": "47"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[4]",
                                            "virtual_name": "path[4]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[4]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_simplifyPath_string_manual_4(void) {\n{\nAKA_test_case_name=\"Solution_simplifyPath_string_manual_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName729036 = new char[6];akaRandomName729036[0] = 47;akaRandomName729036[1] = 46;akaRandomName729036[2] = 46;akaRandomName729036[3] = 47;akaRandomName729036[4] = 97;akaRandomName729036[5] = '\\0';string path=akaRandomName729036;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_simplifyPath_string_manual_4\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->simplifyPath(path);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 71 Simplify Path.cpp\\\\Solution\\\\simplifyPath(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName520385 = new char[6];akaRandomName520385[0] = 47;akaRandomName520385[1] = 46;akaRandomName520385[2] = 46;akaRandomName520385[3] = 47;akaRandomName520385[4] = 97;akaRandomName520385[5] = '\\0';string path=akaRandomName520385;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 71 Simplify Path.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "simplifyPath(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "EXPECTED_path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "/a/..",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[0]",
                                            "virtual_name": "path[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[0]",
                                            "correspondingType": "char",
                                            "value": "47"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[1]",
                                            "virtual_name": "path[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[1]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[2]",
                                            "virtual_name": "path[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[2]",
                                            "correspondingType": "char",
                                            "value": "47"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[3]",
                                            "virtual_name": "path[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[3]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[4]",
                                            "virtual_name": "path[4]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[4]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_simplifyPath_string_manual_2(void) {\n{\nAKA_test_case_name=\"Solution_simplifyPath_string_manual_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName614259 = new char[6];akaRandomName614259[0] = 47;akaRandomName614259[1] = 97;akaRandomName614259[2] = 47;akaRandomName614259[3] = 46;akaRandomName614259[4] = 46;akaRandomName614259[5] = '\\0';string path=akaRandomName614259;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_simplifyPath_string_manual_2\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->simplifyPath(path);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 71 Simplify Path.cpp\\\\Solution\\\\simplifyPath(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName302518 = new char[6];akaRandomName302518[0] = 47;akaRandomName302518[1] = 97;akaRandomName302518[2] = 47;akaRandomName302518[3] = 46;akaRandomName302518[4] = 46;akaRandomName302518[5] = '\\0';string path=akaRandomName302518;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 71 Simplify Path.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "simplifyPath(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "EXPECTED_path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "..",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[0]",
                                            "virtual_name": "path[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[0]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[1]",
                                            "virtual_name": "path[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[1]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_simplifyPath_string_manual_9(void) {\n{\nAKA_test_case_name=\"Solution_simplifyPath_string_manual_9\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName868638 = new char[3];akaRandomName868638[0] = 46;akaRandomName868638[1] = 46;akaRandomName868638[2] = '\\0';string path=akaRandomName868638;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_simplifyPath_string_manual_9\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->simplifyPath(path);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 71 Simplify Path.cpp\\\\Solution\\\\simplifyPath(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName64468 = new char[3];akaRandomName64468[0] = 46;akaRandomName64468[1] = 46;akaRandomName64468[2] = '\\0';string path=akaRandomName64468;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 71 Simplify Path.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "simplifyPath(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "EXPECTED_path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": ".",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[0]",
                                            "virtual_name": "path[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[0]",
                                            "correspondingType": "char",
                                            "value": "46"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_simplifyPath_string_manual_7(void) {\n{\nAKA_test_case_name=\"Solution_simplifyPath_string_manual_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName793328 = new char[2];akaRandomName793328[0] = 46;akaRandomName793328[1] = '\\0';string path=akaRandomName793328;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_simplifyPath_string_manual_7\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->simplifyPath(path);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 71 Simplify Path.cpp\\\\Solution\\\\simplifyPath(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName151465 = new char[2];akaRandomName151465[0] = 46;akaRandomName151465[1] = '\\0';string path=akaRandomName151465;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 8,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 71 Simplify Path.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution",
                                            "rawType": "::Solution"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "simplifyPath(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "EXPECTED_path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "path",
                                    "virtual_name": "path",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path",
                                    "correspondingType": "string",
                                    "value": "/",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "path[0]",
                                            "virtual_name": "path[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\path\\path[0]",
                                            "correspondingType": "char",
                                            "value": "47"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_simplifyPath_string_manual_6(void) {\n{\nAKA_test_case_name=\"Solution_simplifyPath_string_manual_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName21004 = new char[2];akaRandomName21004[0] = 47;akaRandomName21004[1] = '\\0';string path=akaRandomName21004;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_simplifyPath_string_manual_6\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->simplifyPath(path);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\manual6\\\\LeetCode 71 Simplify Path.cpp\\\\Solution\\\\simplifyPath(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n\n\nchar* akaRandomName444323 = new char[2];akaRandomName444323[0] = 47;akaRandomName444323[1] = '\\0';string path=akaRandomName444323;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode path */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     string simplifyPath(string path) {\r         vector<string> v;\r         istringstream iss(path);\r         string buf;\r         while (getline(iss, buf, '/')) {\r             if (!buf.empty() && buf != \".\" && buf != \"..\") {\r                 v.push_back(buf);\r             } else if (!v.empty() && buf == \"..\") {\r                 v.pop_back();\r             }\r         }\r         if (v.empty()) {\r             return \"/\";\r         }\r \r         buf.clear();\r         for (string &s : v) {\r             buf += \"/\";\r             buf += s;\r         }\r         return buf;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\manual6\\LeetCode 71 Simplify Path.cpp\\Solution\\simplifyPath(string)"
    }
]
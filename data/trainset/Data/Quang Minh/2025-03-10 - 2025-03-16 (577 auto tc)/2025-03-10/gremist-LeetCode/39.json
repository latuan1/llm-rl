[
    {
        "f": [],
        "fm": "int rob(vector<int>& nums) {\r         vector<int> dp(2);\r         for (int i = 0; i < nums.size(); i++) {\r             dp[i % 2] = max(dp[i % 2] + nums[i], dp[(i + 1) % 2]);\r         }\r         return dp[(nums.size() + 1) % 2];\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 198 House Robber.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 198 House Robber.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution\\rob(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "rob(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution\\rob(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution\\rob(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution\\rob(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution\\rob(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution\\rob(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "-288"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 198 House Robber.cpp\\Solution\\rob(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_rob_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_rob_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 198 House Robber.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-288;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_rob_vector_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->rob(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json39\\\\LeetCode 198 House Robber.cpp\\\\Solution\\\\rob(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 198 House Robber.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-288;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int rob(vector<int>& nums) {\r         vector<int> dp(2);\r         for (int i = 0; i < nums.size(); i++) {\r             dp[i % 2] = max(dp[i % 2] + nums[i], dp[(i + 1) % 2]);\r         }\r         return dp[(nums.size() + 1) % 2];\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 198 House Robber.cpp\\Solution\\rob(vector<int>&)"
    },
    {
        "f": [],
        "fm": "TreeNode(int x) : val(x), left(NULL), right(NULL) {}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 199 Binary Tree Right Side View.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\TreeNode(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___TreeNode",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode",
                                    "dataType": "::TreeNode",
                                    "realType": "::TreeNode",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                    "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___TreeNode",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode",
                                            "dataType": "::TreeNode",
                                            "realType": "::TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                            "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                            "rawType": "::TreeNode",
                                            "selectedConstructor": "TreeNode(int)",
                                            "variableType": "::TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "TreeNode(int)",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "functionNode": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\TreeNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\TreeNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "left",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode->left",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\left",
                                                    "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                                    "level": 1
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "right",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode->right",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\right",
                                                    "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___TreeNode",
                                    "virtual_name": "AKA_INSTANCE___TreeNode",
                                    "dataType": "::TreeNode",
                                    "realType": "::TreeNode",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                    "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___TreeNode",
                                            "virtual_name": "AKA_INSTANCE___TreeNode",
                                            "dataType": "::TreeNode",
                                            "realType": "::TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                            "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                            "rawType": "::TreeNode",
                                            "selectedConstructor": "TreeNode(int)",
                                            "variableType": "::TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "TreeNode(int)",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "functionNode": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\TreeNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "AKA_INSTANCE___TreeNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\TreeNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "-763800019"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "left",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode->left",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\left",
                                                    "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                                    "level": 1
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "right",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode->right",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\right",
                                                    "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "TreeNode(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\TreeNode(int)"
                        }
                    ]
                },
                "td": "void AKA_TEST_TreeNode_int_random_0(void) {\n{\nAKA_test_case_name=\"TreeNode_int_random_0\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=-763800019;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_0\");AKA_mark(\"Calling: .\\\\json39\\\\LeetCode 199 Binary Tree Right Side View.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 199 Binary Tree Right Side View.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=-763800019;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_0\");AKA_mark(\"Calling: .\\\\json39\\\\LeetCode 199 Binary Tree Right Side View.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 199 Binary Tree Right Side View.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\TreeNode(int)"
    },
    {
        "f": [],
        "fm": "vector<int> rightSideView(TreeNode* root) {\r         vector<int> ans;\r         dfs(ans, root, 0);\r         return ans;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 199 Binary Tree Right Side View.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\rightSideView(TreeNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "rightSideView(TreeNode*)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\rightSideView(TreeNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "EXPECTED_root",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\rightSideView(TreeNode*)\\root",
                                    "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\rightSideView(TreeNode*)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "root",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\rightSideView(TreeNode*)\\root",
                                    "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                    "level": 1,
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "root[0]",
                                            "virtual_name": "root[0]",
                                            "dataType": "TreeNode",
                                            "realType": "TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\rightSideView(TreeNode*)\\root\\root[0]",
                                            "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "root",
                                                    "virtual_name": "root[0]",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\rightSideView(TreeNode*)\\root\\root",
                                                    "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                                    "rawType": "::TreeNode",
                                                    "selectedConstructor": "TreeNode(int)",
                                                    "variableType": "::TreeNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "TreeNode(int)",
                                                            "virtual_name": "root[0]",
                                                            "dataType": "::TreeNode",
                                                            "realType": "::TreeNode",
                                                            "functionNode": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\TreeNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "root0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "-377"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "root[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "left",
                                                            "virtual_name": "root[0].left",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\left",
                                                            "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                                            "level": 1
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "right",
                                                            "virtual_name": "root[0].right",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode\\right",
                                                            "correspondingType": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\TreeNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\rightSideView(TreeNode*)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_rightSideView_TreeNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_rightSideView_TreeNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 199 Binary Tree Right Side View.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-377;\nAKA_mark(\"Calling: .\\\\json39\\\\LeetCode 199 Binary Tree Right Side View.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 199 Binary Tree Right Side View.cpp\\\\rightSideView(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_rightSideView_TreeNodemul_random_0\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->rightSideView(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json39\\\\LeetCode 199 Binary Tree Right Side View.cpp\\\\Solution\\\\rightSideView(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 199 Binary Tree Right Side View.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-377;\nAKA_mark(\"Calling: .\\\\json39\\\\LeetCode 199 Binary Tree Right Side View.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 199 Binary Tree Right Side View.cpp\\\\rightSideView(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<int> rightSideView(TreeNode* root) {\r         vector<int> ans;\r         dfs(ans, root, 0);\r         return ans;\r     }\r     \r private:\r     void dfs(vector<int> &ans, TreeNode *root, int depth) {\r         if (!root) return;\r         if (depth >= ans.size()) {\r             ans.push_back(root->val);\r         }\r         dfs(ans, root->right, depth + 1);\r         dfs(ans, root->left,  depth + 1);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\rightSideView(TreeNode*)"
    },
    {
        "f": [],
        "fm": "void dfs(vector<int> &ans, TreeNode *root, int depth) {\r         if (!root) return;\r         if (depth >= ans.size()) {\r             ans.push_back(root->val);\r         }\r         dfs(ans, root->right, depth + 1);\r         dfs(ans, root->left,  depth + 1);\r     }",
        "datatest": [],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<int> rightSideView(TreeNode* root) {\r         vector<int> ans;\r         dfs(ans, root, 0);\r         return ans;\r     }\r     \r private:\r     void dfs(vector<int> &ans, TreeNode *root, int depth) {\r         if (!root) return;\r         if (depth >= ans.size()) {\r             ans.push_back(root->val);\r         }\r         dfs(ans, root->right, depth + 1);\r         dfs(ans, root->left,  depth + 1);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 199 Binary Tree Right Side View.cpp\\Solution\\dfs(vector<int>&,TreeNode*,int)"
    },
    {
        "f": [],
        "fm": "int numIslands(vector<vector<char>>& grid) {\r         int num = 0;\r         for (int i = 0; i < grid.size(); i++) {\r             for (int j = 0; j < grid[0].size(); j++) {\r                 if (grid[i][j] == '1') {\r                     dfs(grid, i, j);\r                     num++;\r                 }\r             }\r         }\r         return num;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 200 Number of Islands.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 200 Number of Islands.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\numIslands(vector<vector<char>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "numIslands(vector<vector<char>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\numIslands(vector<vector<char>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "grid",
                                    "virtual_name": "EXPECTED_grid",
                                    "dataType": "vector<vector<char>>",
                                    "realType": "vector<vector<char>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\numIslands(vector<vector<char>>&)\\grid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<char>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\numIslands(vector<vector<char>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "grid",
                                    "virtual_name": "grid",
                                    "dataType": "vector<vector<char>>",
                                    "realType": "vector<vector<char>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\numIslands(vector<vector<char>>&)\\grid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<char>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "grid_element0",
                                            "dataType": "vector<char>",
                                            "realType": "vector<char>",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\numIslands(vector<vector<char>>&)\\grid\\element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "char",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "grid_element0_element0",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\numIslands(vector<vector<char>>&)\\grid\\element #0\\element #0",
                                                    "correspondingType": "char",
                                                    "value": "120"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "grid_element1",
                                            "dataType": "vector<char>",
                                            "realType": "vector<char>",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\numIslands(vector<vector<char>>&)\\grid\\element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "char",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "grid_element1_element0",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\numIslands(vector<vector<char>>&)\\grid\\element #1\\element #0",
                                                    "correspondingType": "char",
                                                    "value": "-109"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\numIslands(vector<vector<char>>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_numIslands_vector_vector_char_random_2(void) {\n{\nAKA_test_case_name=\"Solution_numIslands_vector_vector_char_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 200 Number of Islands.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<char>> grid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\nvector<char> grid_element0;\nchar grid_element0_element0=120;\ngrid_element0.push_back(grid_element0_element0);\ngrid.push_back(grid_element0);\nvector<char> grid_element1;\nchar grid_element1_element0=-109;\ngrid_element1.push_back(grid_element1_element0);\ngrid.push_back(grid_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_numIslands_vector_vector_char_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->numIslands(grid);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json39\\\\LeetCode 200 Number of Islands.cpp\\\\Solution\\\\numIslands(vector<vector<char>>&)\");\n\n\nvector<vector<char>> EXPECTED_grid;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 200 Number of Islands.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<char>> grid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\nvector<char> grid_element0;\nchar grid_element0_element0=120;\ngrid_element0.push_back(grid_element0_element0);\ngrid.push_back(grid_element0);\nvector<char> grid_element1;\nchar grid_element1_element0=-109;\ngrid_element1.push_back(grid_element1_element0);\ngrid.push_back(grid_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int numIslands(vector<vector<char>>& grid) {\r         int num = 0;\r         for (int i = 0; i < grid.size(); i++) {\r             for (int j = 0; j < grid[0].size(); j++) {\r                 if (grid[i][j] == '1') {\r                     dfs(grid, i, j);\r                     num++;\r                 }\r             }\r         }\r         return num;\r     }\r \r private:\r     void dfs(vector<vector<char>>& grid, int x, int y) {\r         if (x < 0 || x >= grid.size())    return;\r         if (y < 0 || y >= grid[0].size()) return;\r         if (grid[x][y] !=  '1') return;\r         \r         grid[x][y] = '0';\r         \r         dfs(grid, x - 1, y);\r         dfs(grid, x + 1, y);\r         dfs(grid, x, y - 1);\r         dfs(grid, x, y + 1);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\numIslands(vector<vector<char>>&)"
    },
    {
        "f": [],
        "fm": "void dfs(vector<vector<char>>& grid, int x, int y) {\r         if (x < 0 || x >= grid.size())    return;\r         if (y < 0 || y >= grid[0].size()) return;\r         if (grid[x][y] !=  '1') return;\r         \r         grid[x][y] = '0';\r         \r         dfs(grid, x - 1, y);\r         dfs(grid, x + 1, y);\r         dfs(grid, x, y - 1);\r         dfs(grid, x, y + 1);\r     }",
        "datatest": [],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int numIslands(vector<vector<char>>& grid) {\r         int num = 0;\r         for (int i = 0; i < grid.size(); i++) {\r             for (int j = 0; j < grid[0].size(); j++) {\r                 if (grid[i][j] == '1') {\r                     dfs(grid, i, j);\r                     num++;\r                 }\r             }\r         }\r         return num;\r     }\r \r private:\r     void dfs(vector<vector<char>>& grid, int x, int y) {\r         if (x < 0 || x >= grid.size())    return;\r         if (y < 0 || y >= grid[0].size()) return;\r         if (grid[x][y] !=  '1') return;\r         \r         grid[x][y] = '0';\r         \r         dfs(grid, x - 1, y);\r         dfs(grid, x + 1, y);\r         dfs(grid, x, y - 1);\r         dfs(grid, x, y + 1);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 200 Number of Islands.cpp\\Solution\\dfs(vector<vector<char>>&,int,int)"
    },
    {
        "f": [],
        "fm": "int rangeBitwiseAnd(int m, int n) {\r         return m < n ? rangeBitwiseAnd(m >> 1, n >> 1) << 1 : m;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 201 Bitwise AND of Numbers Range.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution\\rangeBitwiseAnd(int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "rangeBitwiseAnd(int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution\\rangeBitwiseAnd(int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution\\rangeBitwiseAnd(int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "EXPECTED_m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution\\rangeBitwiseAnd(int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution\\rangeBitwiseAnd(int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution\\rangeBitwiseAnd(int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "1494567909"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution\\rangeBitwiseAnd(int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "17714786"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution\\rangeBitwiseAnd(int,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_rangeBitwiseAnd_int_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_rangeBitwiseAnd_int_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint m=1494567909;\n\n\nint n=17714786;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_rangeBitwiseAnd_int_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->rangeBitwiseAnd(m,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json39\\\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\\\Solution\\\\rangeBitwiseAnd(int,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint m=1494567909;\n\n\nint n=17714786;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int rangeBitwiseAnd(int m, int n) {\r         return m < n ? rangeBitwiseAnd(m >> 1, n >> 1) << 1 : m;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 201 Bitwise AND of Numbers Range.cpp\\Solution\\rangeBitwiseAnd(int,int)"
    },
    {
        "f": [],
        "fm": "bool isHappy(int n) {\r         unordered_set<int> s;\r         while (n > 1) {\r             s.insert(n);\r             \r             int new_n = 0;\r             while (n) {\r                 new_n += pow(n % 10, 2);\r                 n /= 10;\r             }\r             \r             if (s.find(new_n) != s.end()) {\r                 return false;\r             }\r             n = new_n;\r         }\r         return true;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 202 Happy Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 202 Happy Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isHappy(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)\\n",
                                    "correspondingType": "int",
                                    "value": "8"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isHappy_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_isHappy_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 202 Happy Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=8;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isHappy_int_random_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isHappy(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json39\\\\LeetCode 202 Happy Number.cpp\\\\Solution\\\\isHappy(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 202 Happy Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=8;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 202 Happy Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 202 Happy Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isHappy(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)\\n",
                                    "correspondingType": "int",
                                    "value": "10"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isHappy_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_isHappy_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 202 Happy Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=10;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isHappy_int_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isHappy(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json39\\\\LeetCode 202 Happy Number.cpp\\\\Solution\\\\isHappy(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 202 Happy Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=10;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isHappy(int n) {\r         unordered_set<int> s;\r         while (n > 1) {\r             s.insert(n);\r             \r             int new_n = 0;\r             while (n) {\r                 new_n += pow(n % 10, 2);\r                 n /= 10;\r             }\r             \r             if (s.find(new_n) != s.end()) {\r                 return false;\r             }\r             n = new_n;\r         }\r         return true;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 202 Happy Number.cpp\\Solution\\isHappy(int)"
    },
    {
        "f": [],
        "fm": "ListNode(int x) : val(x), next(NULL) {}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 203 Remove Linked List Elements.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___ListNode",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                    "dataType": "::ListNode",
                                    "realType": "::ListNode",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___ListNode",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                            "dataType": "::ListNode",
                                            "realType": "::ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                            "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                            "rawType": "::ListNode",
                                            "selectedConstructor": "ListNode(int)",
                                            "variableType": "::ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "ListNode(int)",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "functionNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "next",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode->next",
                                                    "dataType": "ListNode*",
                                                    "realType": "ListNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\next",
                                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___ListNode",
                                    "virtual_name": "AKA_INSTANCE___ListNode",
                                    "dataType": "::ListNode",
                                    "realType": "::ListNode",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___ListNode",
                                            "virtual_name": "AKA_INSTANCE___ListNode",
                                            "dataType": "::ListNode",
                                            "realType": "::ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                            "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                            "rawType": "::ListNode",
                                            "selectedConstructor": "ListNode(int)",
                                            "variableType": "::ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "ListNode(int)",
                                                    "virtual_name": "AKA_INSTANCE___ListNode",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "functionNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "AKA_INSTANCE___ListNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "-2120732483"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "AKA_INSTANCE___ListNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "next",
                                                    "virtual_name": "AKA_INSTANCE___ListNode->next",
                                                    "dataType": "ListNode*",
                                                    "realType": "ListNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\next",
                                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "ListNode(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)"
                        }
                    ]
                },
                "td": "void AKA_TEST_ListNode_int_random_0(void) {\n{\nAKA_test_case_name=\"ListNode_int_random_0\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___ListNode */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___ListNode_x=-2120732483;\nAKA_mark(\"<<PRE-CALLING>> Test ListNode_int_random_0\");AKA_mark(\"Calling: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\GLOBAL\\\\AKA_INSTANCE___ListNode\\\\AKA_INSTANCE___ListNode\\\\ListNode(int)\");AKA_fCall++;AKA_INSTANCE___ListNode = new ::ListNode(AKA_INSTANCE___ListNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nAKA_INSTANCE___ListNode->next;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___ListNode */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___ListNode_x=-2120732483;\nAKA_mark(\"<<PRE-CALLING>> Test ListNode_int_random_0\");AKA_mark(\"Calling: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\GLOBAL\\\\AKA_INSTANCE___ListNode\\\\AKA_INSTANCE___ListNode\\\\ListNode(int)\");AKA_fCall++;AKA_INSTANCE___ListNode = new ::ListNode(AKA_INSTANCE___ListNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nAKA_INSTANCE___ListNode->next;\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)"
    },
    {
        "f": [],
        "fm": "ListNode* removeElements(ListNode* head, int val) {\r         ListNode fake(0);\r         fake.next = head;\r         \r         ListNode *pi = &fake;\r         while (pi->next) {\r             if (pi->next->val == val) {\r                 ListNode *del = pi->next;\r                 pi->next = pi->next->next;\r                 delete del;\r             } else {\r                 pi = pi->next;\r             }\r         }\r         return fake.next;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 203 Remove Linked List Elements.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "removeElements(ListNode*,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "ListNode*",
                            "realType": "ListNode*",
                            "functionNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "EXPECTED_head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)\\head",
                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "val",
                                    "virtual_name": "EXPECTED_val",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)\\val",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)\\head",
                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                    "level": 1,
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "head[0]",
                                            "virtual_name": "head[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)\\head\\head[0]",
                                            "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "head",
                                                    "virtual_name": "head[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)\\head\\head",
                                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "head[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "head0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "717"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "head[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "2025017127"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "head[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "head[1]",
                                            "virtual_name": "head[1]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)\\head\\head[1]",
                                            "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "head",
                                                    "virtual_name": "head[1]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)\\head\\head",
                                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "head[1]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "head1_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "946"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "head[1].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "29719805"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "head[1].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "val",
                                    "virtual_name": "val",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)\\val",
                                    "correspondingType": "int",
                                    "value": "62604979"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)\\RETURN",
                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_removeElements_ListNodemul_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_removeElements_ListNodemul_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=717;\nAKA_mark(\"Calling: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\removeElements(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0).val=2025017127;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=946;\nAKA_mark(\"Calling: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\removeElements(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1).val=29719805;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nint val=62604979;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode val */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeElements_ListNodemul_int_random_3\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeElements(head,val);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\Solution\\\\removeElements(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=717;\nAKA_mark(\"Calling: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\removeElements(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0).val=2025017127;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=946;\nAKA_mark(\"Calling: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\removeElements(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1).val=29719805;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nint val=62604979;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode val */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     ListNode* removeElements(ListNode* head, int val) {\r         ListNode fake(0);\r         fake.next = head;\r         \r         ListNode *pi = &fake;\r         while (pi->next) {\r             if (pi->next->val == val) {\r                 ListNode *del = pi->next;\r                 pi->next = pi->next->next;\r                 delete del;\r             } else {\r                 pi = pi->next;\r             }\r         }\r         return fake.next;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\Solution\\removeElements(ListNode*,int)"
    },
    {
        "f": [],
        "fm": "int countPrimes(int n) {\r         int cnt = 0;\r         vector<bool> prime(n, true);\r         for (int i = 2; i < n; i++) {\r             if (prime[i]) {\r                 for (int j = 2 * i; j < n; j += i) {\r                     prime[j] = false;\r                 }\r                 cnt++;\r             }\r         }\r         return cnt;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 204 Count Primes.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 204 Count Primes.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 204 Count Primes.cpp\\Solution\\countPrimes(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 204 Count Primes.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 204 Count Primes.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 204 Count Primes.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 204 Count Primes.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 204 Count Primes.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json39\\LeetCode 204 Count Primes.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "countPrimes(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json39\\LeetCode 204 Count Primes.cpp\\Solution\\countPrimes(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 204 Count Primes.cpp\\Solution\\countPrimes(int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json39\\LeetCode 204 Count Primes.cpp\\Solution\\countPrimes(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 204 Count Primes.cpp\\Solution\\countPrimes(int)\\n",
                                    "correspondingType": "int",
                                    "value": "9"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 204 Count Primes.cpp\\Solution\\countPrimes(int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_countPrimes_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_countPrimes_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 204 Count Primes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=9;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_countPrimes_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->countPrimes(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json39\\\\LeetCode 204 Count Primes.cpp\\\\Solution\\\\countPrimes(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 204 Count Primes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=9;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int countPrimes(int n) {\r         int cnt = 0;\r         vector<bool> prime(n, true);\r         for (int i = 2; i < n; i++) {\r             if (prime[i]) {\r                 for (int j = 2 * i; j < n; j += i) {\r                     prime[j] = false;\r                 }\r                 cnt++;\r             }\r         }\r         return cnt;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 204 Count Primes.cpp\\Solution\\countPrimes(int)"
    },
    {
        "f": [],
        "fm": "bool isIsomorphic(string s, string t) {\r         vector<int> sm(CHAR_MAX, -1), tm(CHAR_MAX, -1);\r         for (int i = 0; i < s.size(); i++) {\r             if (sm[s[i]] != tm[t[i]]) {\r                 return false;\r             }\r             sm[s[i]] = i;\r             tm[t[i]] = i;\r         }\r         return true;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 205 Isomorphic Strings.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isIsomorphic(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "75"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[0]",
                                            "virtual_name": "t[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\t\\t[0]",
                                            "correspondingType": "char",
                                            "value": "-83"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isIsomorphic_string_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_isIsomorphic_string_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 205 Isomorphic Strings.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName716123 = new char[2];akaRandomName716123[0] = 75;akaRandomName716123[1] = '\\0';string s=akaRandomName716123;\nchar* akaRandomName97250 = new char[2];akaRandomName97250[0] = -83;akaRandomName97250[1] = '\\0';string t=akaRandomName97250;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isIsomorphic_string_string_random_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isIsomorphic(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json39\\\\LeetCode 205 Isomorphic Strings.cpp\\\\Solution\\\\isIsomorphic(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 205 Isomorphic Strings.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName433080 = new char[2];akaRandomName433080[0] = 75;akaRandomName433080[1] = '\\0';string s=akaRandomName433080;\nchar* akaRandomName729031 = new char[2];akaRandomName729031[0] = -83;akaRandomName729031[1] = '\\0';string t=akaRandomName729031;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 205 Isomorphic Strings.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isIsomorphic(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "EXPECTED_t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\s",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "-82"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "t",
                                    "virtual_name": "t",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\t",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "t[0]",
                                            "virtual_name": "t[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\t\\t[0]",
                                            "correspondingType": "char",
                                            "value": "-106"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isIsomorphic_string_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_isIsomorphic_string_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 205 Isomorphic Strings.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName30138 = new char[2];akaRandomName30138[0] = -82;akaRandomName30138[1] = '\\0';string s=akaRandomName30138;\nchar* akaRandomName498651 = new char[2];akaRandomName498651[0] = -106;akaRandomName498651[1] = '\\0';string t=akaRandomName498651;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isIsomorphic_string_string_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isIsomorphic(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json39\\\\LeetCode 205 Isomorphic Strings.cpp\\\\Solution\\\\isIsomorphic(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 205 Isomorphic Strings.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName863360 = new char[2];akaRandomName863360[0] = -82;akaRandomName863360[1] = '\\0';string s=akaRandomName863360;\nchar* akaRandomName293407 = new char[2];akaRandomName293407[0] = -106;akaRandomName293407[1] = '\\0';string t=akaRandomName293407;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isIsomorphic(string s, string t) {\r         vector<int> sm(CHAR_MAX, -1), tm(CHAR_MAX, -1);\r         for (int i = 0; i < s.size(); i++) {\r             if (sm[s[i]] != tm[t[i]]) {\r                 return false;\r             }\r             sm[s[i]] = i;\r             tm[t[i]] = i;\r         }\r         return true;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 205 Isomorphic Strings.cpp\\Solution\\isIsomorphic(string,string)"
    },
    {
        "f": [],
        "fm": "ListNode(int x) : val(x), next(NULL) {}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 206 Reverse Linked List.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 206 Reverse Linked List.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\ListNode(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___ListNode",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                    "dataType": "::ListNode",
                                    "realType": "::ListNode",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                    "correspondingType": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___ListNode",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                            "dataType": "::ListNode",
                                            "realType": "::ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                            "correspondingType": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode",
                                            "rawType": "::ListNode",
                                            "selectedConstructor": "ListNode(int)",
                                            "variableType": "::ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "ListNode(int)",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "functionNode": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\ListNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\ListNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "next",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode->next",
                                                    "dataType": "ListNode*",
                                                    "realType": "ListNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\next",
                                                    "correspondingType": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___ListNode",
                                    "virtual_name": "AKA_INSTANCE___ListNode",
                                    "dataType": "::ListNode",
                                    "realType": "::ListNode",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                    "correspondingType": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___ListNode",
                                            "virtual_name": "AKA_INSTANCE___ListNode",
                                            "dataType": "::ListNode",
                                            "realType": "::ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                            "correspondingType": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode",
                                            "rawType": "::ListNode",
                                            "selectedConstructor": "ListNode(int)",
                                            "variableType": "::ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "ListNode(int)",
                                                    "virtual_name": "AKA_INSTANCE___ListNode",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "functionNode": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\ListNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "AKA_INSTANCE___ListNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\ListNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "-2021374255"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "AKA_INSTANCE___ListNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "next",
                                                    "virtual_name": "AKA_INSTANCE___ListNode->next",
                                                    "dataType": "ListNode*",
                                                    "realType": "ListNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\next",
                                                    "correspondingType": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "ListNode(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\ListNode(int)"
                        }
                    ]
                },
                "td": "void AKA_TEST_ListNode_int_random_1(void) {\n{\nAKA_test_case_name=\"ListNode_int_random_1\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___ListNode */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___ListNode_x=-2021374255;\nAKA_mark(\"<<PRE-CALLING>> Test ListNode_int_random_1\");AKA_mark(\"Calling: .\\\\json39\\\\LeetCode 206 Reverse Linked List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 206 Reverse Linked List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___ListNode\\\\AKA_INSTANCE___ListNode\\\\ListNode(int)\");AKA_fCall++;AKA_INSTANCE___ListNode = new ::ListNode(AKA_INSTANCE___ListNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nAKA_INSTANCE___ListNode->next;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___ListNode */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___ListNode_x=-2021374255;\nAKA_mark(\"<<PRE-CALLING>> Test ListNode_int_random_1\");AKA_mark(\"Calling: .\\\\json39\\\\LeetCode 206 Reverse Linked List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 206 Reverse Linked List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___ListNode\\\\AKA_INSTANCE___ListNode\\\\ListNode(int)\");AKA_fCall++;AKA_INSTANCE___ListNode = new ::ListNode(AKA_INSTANCE___ListNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nAKA_INSTANCE___ListNode->next;\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 206 Reverse Linked List.cpp\\ListNode\\ListNode(int)"
    },
    {
        "f": [],
        "fm": "ListNode* reverseList(ListNode* head) {\r         ListNode *pa = NULL;\r         while (head) {\r             ListNode *pb = head->next;\r             head->next = pa;\r             pa = head;\r             head = pb;\r         }\r         return pa;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 206 Reverse Linked List.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 206 Reverse Linked List.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\reverseList(ListNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "reverseList(ListNode*)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "ListNode*",
                            "realType": "ListNode*",
                            "functionNode": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\reverseList(ListNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "EXPECTED_head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\reverseList(ListNode*)\\head",
                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\reverseList(ListNode*)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\reverseList(ListNode*)\\head",
                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                    "level": 1,
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "head[0]",
                                            "virtual_name": "head[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\reverseList(ListNode*)\\head\\head[0]",
                                            "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "head",
                                                    "virtual_name": "head[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\reverseList(ListNode*)\\head\\head",
                                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "head[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "head0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "848"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "head[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "head[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                            "level": 1,
                                                            "size": 1,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "next[0]",
                                                                    "virtual_name": "head[0].next[0]",
                                                                    "dataType": "ListNode",
                                                                    "realType": "ListNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\next\\next[0]",
                                                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "next",
                                                                            "virtual_name": "head[0].next[0]",
                                                                            "dataType": "::ListNode",
                                                                            "realType": "::ListNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\next\\next",
                                                                            "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                                            "rawType": "::ListNode",
                                                                            "selectedConstructor": "ListNode(int)",
                                                                            "variableType": "::ListNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "ListNode(int)",
                                                                                    "virtual_name": "head[0].next[0]",
                                                                                    "dataType": "::ListNode",
                                                                                    "realType": "::ListNode",
                                                                                    "functionNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "head0_next0_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "575"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "head[0].next[0].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "null"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "next",
                                                                                    "virtual_name": "head[0].next[0].next",
                                                                                    "dataType": "ListNode*",
                                                                                    "realType": "ListNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\next",
                                                                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "head[1]",
                                            "virtual_name": "head[1]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\reverseList(ListNode*)\\head\\head[1]",
                                            "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "head",
                                                    "virtual_name": "head[1]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\reverseList(ListNode*)\\head\\head",
                                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "head[1]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "head1_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "-363"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "head[1].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "head[1].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\reverseList(ListNode*)\\RETURN",
                                    "correspondingType": ".\\json39\\LeetCode 203 Remove Linked List Elements.cpp\\ListNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_reverseList_ListNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_reverseList_ListNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 206 Reverse Linked List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=848;\nAKA_mark(\"Calling: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 206 Reverse Linked List.cpp\\\\reverseList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=575;\nAKA_mark(\"Calling: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 206 Reverse Linked List.cpp\\\\reverseList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=-363;\nAKA_mark(\"Calling: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 206 Reverse Linked List.cpp\\\\reverseList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reverseList_ListNodemul_random_2\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->reverseList(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json39\\\\LeetCode 206 Reverse Linked List.cpp\\\\Solution\\\\reverseList(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 206 Reverse Linked List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=848;\nAKA_mark(\"Calling: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 206 Reverse Linked List.cpp\\\\reverseList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=575;\nAKA_mark(\"Calling: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 206 Reverse Linked List.cpp\\\\reverseList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=-363;\nAKA_mark(\"Calling: .\\\\json39\\\\LeetCode 203 Remove Linked List Elements.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 206 Reverse Linked List.cpp\\\\reverseList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     ListNode* reverseList(ListNode* head) {\r         ListNode *pa = NULL;\r         while (head) {\r             ListNode *pb = head->next;\r             head->next = pa;\r             pa = head;\r             head = pb;\r         }\r         return pa;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 206 Reverse Linked List.cpp\\Solution\\reverseList(ListNode*)"
    },
    {
        "f": [],
        "fm": "bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {\r         vector<int> indegree(numCourses);\r         vector<vector<int>> outedges(numCourses);\r         for (vector<int> &p : prerequisites) {\r             indegree[p[0]]++;\r             outedges[p[1]].push_back(p[0]);\r         }\r         \r         queue<int> q;\r         for (int i = 0; i < numCourses; i++) {\r             if (indegree[i] == 0) {\r                 q.push(i);\r             }\r         }\r         \r         while (!q.empty()) {\r             int front = q.front();\r             q.pop();\r             for (int i : outedges[front]) {\r                 if (--indegree[i] == 0) {\r                     q.push(i);\r                 }\r             }\r             numCourses--;\r         }\r         return numCourses == 0;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 207 Course Schedule.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json39\\LeetCode 207 Course Schedule.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "canFinish(int,vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "prerequisites",
                                    "virtual_name": "EXPECTED_prerequisites",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)\\prerequisites",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "numCourses",
                                    "virtual_name": "EXPECTED_numCourses",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)\\numCourses",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "numCourses",
                                    "virtual_name": "numCourses",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)\\numCourses",
                                    "correspondingType": "int",
                                    "value": "4"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "prerequisites",
                                    "virtual_name": "prerequisites",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)\\prerequisites",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "prerequisites_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)\\prerequisites\\element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "prerequisites_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)\\prerequisites\\element #0\\element #0",
                                                    "correspondingType": "int",
                                                    "value": "539"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "prerequisites_element0_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)\\prerequisites\\element #0\\element #1",
                                                    "correspondingType": "int",
                                                    "value": "289"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "prerequisites_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)\\prerequisites\\element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "prerequisites_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)\\prerequisites\\element #1\\element #0",
                                                    "correspondingType": "int",
                                                    "value": "902"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_canFinish_int_vector_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_canFinish_int_vector_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 207 Course Schedule.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint numCourses=4;\nvector<vector<int>> prerequisites;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode numCourses */\n/* VectorDataNode prerequisites */\nvector<int> prerequisites_element0;\nint prerequisites_element0_element0=539;\nprerequisites_element0.push_back(prerequisites_element0_element0);\nint prerequisites_element0_element1=289;\nprerequisites_element0.push_back(prerequisites_element0_element1);\nprerequisites.push_back(prerequisites_element0);\nvector<int> prerequisites_element1;\nint prerequisites_element1_element0=902;\nprerequisites_element1.push_back(prerequisites_element1_element0);\nprerequisites.push_back(prerequisites_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_canFinish_int_vector_vector_int_random_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->canFinish(numCourses,prerequisites);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json39\\\\LeetCode 207 Course Schedule.cpp\\\\Solution\\\\canFinish(int,vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_prerequisites;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 207 Course Schedule.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint numCourses=4;\nvector<vector<int>> prerequisites;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode numCourses */\n/* VectorDataNode prerequisites */\nvector<int> prerequisites_element0;\nint prerequisites_element0_element0=539;\nprerequisites_element0.push_back(prerequisites_element0_element0);\nint prerequisites_element0_element1=289;\nprerequisites_element0.push_back(prerequisites_element0_element1);\nprerequisites.push_back(prerequisites_element0);\nvector<int> prerequisites_element1;\nint prerequisites_element1_element0=902;\nprerequisites_element1.push_back(prerequisites_element1_element0);\nprerequisites.push_back(prerequisites_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {\r         vector<int> indegree(numCourses);\r         vector<vector<int>> outedges(numCourses);\r         for (vector<int> &p : prerequisites) {\r             indegree[p[0]]++;\r             outedges[p[1]].push_back(p[0]);\r         }\r         \r         queue<int> q;\r         for (int i = 0; i < numCourses; i++) {\r             if (indegree[i] == 0) {\r                 q.push(i);\r             }\r         }\r         \r         while (!q.empty()) {\r             int front = q.front();\r             q.pop();\r             for (int i : outedges[front]) {\r                 if (--indegree[i] == 0) {\r                     q.push(i);\r                 }\r             }\r             numCourses--;\r         }\r         return numCourses == 0;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json39\\LeetCode 207 Course Schedule.cpp\\Solution\\canFinish(int,vector<vector<int>>&)"
    }
]
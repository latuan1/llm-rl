[
    {
        "f": [],
        "fm": "int reachNumber(int target) {\r         target = abs(target);\r         int sum = 0, step = 0;\r         while (sum < target || (sum - target) % 2) {\r             sum += ++step;\r         }\r         return step;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 754 Reach a Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 754 Reach a Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 754 Reach a Number.cpp\\Solution\\reachNumber(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 754 Reach a Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 754 Reach a Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 754 Reach a Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 754 Reach a Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 754 Reach a Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 754 Reach a Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "reachNumber(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json56\\LeetCode 754 Reach a Number.cpp\\Solution\\reachNumber(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "EXPECTED_target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 754 Reach a Number.cpp\\Solution\\reachNumber(int)\\target",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 754 Reach a Number.cpp\\Solution\\reachNumber(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 754 Reach a Number.cpp\\Solution\\reachNumber(int)\\target",
                                    "correspondingType": "int",
                                    "value": "7"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 754 Reach a Number.cpp\\Solution\\reachNumber(int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_reachNumber_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_reachNumber_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 754 Reach a Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint target=7;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode target */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reachNumber_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->reachNumber(target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 754 Reach a Number.cpp\\\\Solution\\\\reachNumber(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 754 Reach a Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint target=7;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode target */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int reachNumber(int target) {\r         target = abs(target);\r         int sum = 0, step = 0;\r         while (sum < target || (sum - target) % 2) {\r             sum += ++step;\r         }\r         return step;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json56\\LeetCode 754 Reach a Number.cpp\\Solution\\reachNumber(int)"
    },
    {
        "f": [],
        "fm": "bool pyramidTransition(string bottom, vector<string>& allowed) {        \r         unordered_map<int, string> m;\r         for (string &a : allowed) {\r             m[a[0] << 8 | a[1]] += a[2];\r         }\r         return backtrack(m, bottom, 0, bottom.size() - 1);\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 756 Pyramid Transition Matrix.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pyramidTransition(string,vector<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "bottom",
                                    "virtual_name": "EXPECTED_bottom",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\bottom",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "allowed",
                                    "virtual_name": "EXPECTED_allowed",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\allowed",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "bottom",
                                    "virtual_name": "bottom",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\bottom",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "bottom[0]",
                                            "virtual_name": "bottom[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\bottom\\bottom[0]",
                                            "correspondingType": "char",
                                            "value": "64"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "allowed",
                                    "virtual_name": "allowed",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\allowed",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "allowed_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\allowed\\element #0",
                                            "correspondingType": "string",
                                            "value": "2",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "allowed_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\allowed\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "-60"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "allowed_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\allowed\\element #1",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "allowed_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\allowed\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "78"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pyramidTransition_string_vector_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_pyramidTransition_string_vector_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 756 Pyramid Transition Matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName826619 = new char[2];akaRandomName826619[0] = 64;akaRandomName826619[1] = '\\0';string bottom=akaRandomName826619;\nvector<string> allowed;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode bottom */\n/* VectorDataNode allowed */\nchar* akaRandomName241600 = new char[2];akaRandomName241600[0] = -60;akaRandomName241600[1] = '\\0';string allowed_element0=akaRandomName241600;\nallowed.push_back(allowed_element0);\nchar* akaRandomName584258 = new char[2];akaRandomName584258[0] = 78;akaRandomName584258[1] = '\\0';string allowed_element1=akaRandomName584258;\nallowed.push_back(allowed_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pyramidTransition_string_vector_string_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pyramidTransition(bottom,allowed);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 756 Pyramid Transition Matrix.cpp\\\\Solution\\\\pyramidTransition(string,vector<string>&)\");\n\n\nvector<string> EXPECTED_allowed;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 756 Pyramid Transition Matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName991161 = new char[2];akaRandomName991161[0] = 64;akaRandomName991161[1] = '\\0';string bottom=akaRandomName991161;\nvector<string> allowed;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode bottom */\n/* VectorDataNode allowed */\nchar* akaRandomName672944 = new char[2];akaRandomName672944[0] = -60;akaRandomName672944[1] = '\\0';string allowed_element0=akaRandomName672944;\nallowed.push_back(allowed_element0);\nchar* akaRandomName173691 = new char[2];akaRandomName173691[0] = 78;akaRandomName173691[1] = '\\0';string allowed_element1=akaRandomName173691;\nallowed.push_back(allowed_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 756 Pyramid Transition Matrix.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pyramidTransition(string,vector<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "allowed",
                                    "virtual_name": "EXPECTED_allowed",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\allowed",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "bottom",
                                    "virtual_name": "EXPECTED_bottom",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\bottom",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "bottom",
                                    "virtual_name": "bottom",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\bottom",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "allowed",
                                    "virtual_name": "allowed",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\allowed",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pyramidTransition_string_vector_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_pyramidTransition_string_vector_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 756 Pyramid Transition Matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring bottom=\"\";\nvector<string> allowed;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode bottom */\n/* VectorDataNode allowed */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pyramidTransition_string_vector_string_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pyramidTransition(bottom,allowed);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 756 Pyramid Transition Matrix.cpp\\\\Solution\\\\pyramidTransition(string,vector<string>&)\");\n\n\nvector<string> EXPECTED_allowed;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 756 Pyramid Transition Matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring bottom=\"\";\nvector<string> allowed;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode bottom */\n/* VectorDataNode allowed */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool pyramidTransition(string bottom, vector<string>& allowed) {        \r         unordered_map<int, string> m;\r         for (string &a : allowed) {\r             m[a[0] << 8 | a[1]] += a[2];\r         }\r         return backtrack(m, bottom, 0, bottom.size() - 1);\r     }\r \r private:\r     bool backtrack(unordered_map<int, string> &m, string &cur, int ci, int size) {\r         if (ci >= size && (!--size || (ci = 0))) return true;\r         for (char ch : m[cur[ci] << 8 | cur[ci + 1]]) {\r             swap(cur[ci], ch);\r             if (backtrack(m, cur, ci + 1, size)) {\r                 return true;\r             }\r             swap(cur[ci], ch);\r         }\r         return false;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\pyramidTransition(string,vector<string>&)"
    },
    {
        "f": [],
        "fm": "bool backtrack(unordered_map<int, string> &m, string &cur, int ci, int size) {\r         if (ci >= size && (!--size || (ci = 0))) return true;\r         for (char ch : m[cur[ci] << 8 | cur[ci + 1]]) {\r             swap(cur[ci], ch);\r             if (backtrack(m, cur, ci + 1, size)) {\r                 return true;\r             }\r             swap(cur[ci], ch);\r         }\r         return false;\r     }",
        "datatest": [],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool pyramidTransition(string bottom, vector<string>& allowed) {        \r         unordered_map<int, string> m;\r         for (string &a : allowed) {\r             m[a[0] << 8 | a[1]] += a[2];\r         }\r         return backtrack(m, bottom, 0, bottom.size() - 1);\r     }\r \r private:\r     bool backtrack(unordered_map<int, string> &m, string &cur, int ci, int size) {\r         if (ci >= size && (!--size || (ci = 0))) return true;\r         for (char ch : m[cur[ci] << 8 | cur[ci + 1]]) {\r             swap(cur[ci], ch);\r             if (backtrack(m, cur, ci + 1, size)) {\r                 return true;\r             }\r             swap(cur[ci], ch);\r         }\r         return false;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json56\\LeetCode 756 Pyramid Transition Matrix.cpp\\Solution\\backtrack(unordered_map<int,string>&,string&,int,int)"
    },
    {
        "f": [],
        "fm": "bool isToeplitzMatrix(vector<vector<int>>& matrix) {\r         for (int i = 0; i < matrix.size() - 1; i++) {\r             for (int j = 0; j < matrix[0].size() - 1; j++) {\r                 if (matrix[i][j] != matrix[i + 1][j + 1]) {\r                     return false;\r                 }\r             }\r         }\r         return true;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 766 Toeplitz Matrix.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isToeplitzMatrix(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "matrix",
                                    "virtual_name": "EXPECTED_matrix",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "matrix",
                                    "virtual_name": "matrix",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "matrix_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix\\element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "matrix_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix\\element #0\\element #0",
                                                    "correspondingType": "int",
                                                    "value": "652"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "matrix_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix\\element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "matrix_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix\\element #1\\element #0",
                                                    "correspondingType": "int",
                                                    "value": "853"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isToeplitzMatrix_vector_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_isToeplitzMatrix_vector_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 766 Toeplitz Matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> matrix;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode matrix */\nvector<int> matrix_element0;\nint matrix_element0_element0=652;\nmatrix_element0.push_back(matrix_element0_element0);\nmatrix.push_back(matrix_element0);\nvector<int> matrix_element1;\nint matrix_element1_element0=853;\nmatrix_element1.push_back(matrix_element1_element0);\nmatrix.push_back(matrix_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isToeplitzMatrix_vector_vector_int_random_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isToeplitzMatrix(matrix);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 766 Toeplitz Matrix.cpp\\\\Solution\\\\isToeplitzMatrix(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_matrix;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 766 Toeplitz Matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> matrix;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode matrix */\nvector<int> matrix_element0;\nint matrix_element0_element0=652;\nmatrix_element0.push_back(matrix_element0_element0);\nmatrix.push_back(matrix_element0);\nvector<int> matrix_element1;\nint matrix_element1_element0=853;\nmatrix_element1.push_back(matrix_element1_element0);\nmatrix.push_back(matrix_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 766 Toeplitz Matrix.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isToeplitzMatrix(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "matrix",
                                    "virtual_name": "EXPECTED_matrix",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "matrix",
                                    "virtual_name": "matrix",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "matrix_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix\\element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "matrix_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix\\element #0\\element #0",
                                                    "correspondingType": "int",
                                                    "value": "-509"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "matrix_element0_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix\\element #0\\element #1",
                                                    "correspondingType": "int",
                                                    "value": "936"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "matrix_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix\\element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "matrix_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix\\element #1\\element #0",
                                                    "correspondingType": "int",
                                                    "value": "-79"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isToeplitzMatrix_vector_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_isToeplitzMatrix_vector_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 766 Toeplitz Matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> matrix;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode matrix */\nvector<int> matrix_element0;\nint matrix_element0_element0=-509;\nmatrix_element0.push_back(matrix_element0_element0);\nint matrix_element0_element1=936;\nmatrix_element0.push_back(matrix_element0_element1);\nmatrix.push_back(matrix_element0);\nvector<int> matrix_element1;\nint matrix_element1_element0=-79;\nmatrix_element1.push_back(matrix_element1_element0);\nmatrix.push_back(matrix_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isToeplitzMatrix_vector_vector_int_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isToeplitzMatrix(matrix);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 766 Toeplitz Matrix.cpp\\\\Solution\\\\isToeplitzMatrix(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_matrix;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 766 Toeplitz Matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> matrix;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode matrix */\nvector<int> matrix_element0;\nint matrix_element0_element0=-509;\nmatrix_element0.push_back(matrix_element0_element0);\nint matrix_element0_element1=936;\nmatrix_element0.push_back(matrix_element0_element1);\nmatrix.push_back(matrix_element0);\nvector<int> matrix_element1;\nint matrix_element1_element0=-79;\nmatrix_element1.push_back(matrix_element1_element0);\nmatrix.push_back(matrix_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 766 Toeplitz Matrix.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isToeplitzMatrix(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "matrix",
                                    "virtual_name": "EXPECTED_matrix",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "matrix",
                                    "virtual_name": "matrix",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\matrix",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isToeplitzMatrix_vector_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_isToeplitzMatrix_vector_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 766 Toeplitz Matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> matrix;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode matrix */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isToeplitzMatrix_vector_vector_int_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isToeplitzMatrix(matrix);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 766 Toeplitz Matrix.cpp\\\\Solution\\\\isToeplitzMatrix(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_matrix;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 766 Toeplitz Matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> matrix;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode matrix */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isToeplitzMatrix(vector<vector<int>>& matrix) {\r         for (int i = 0; i < matrix.size() - 1; i++) {\r             for (int j = 0; j < matrix[0].size() - 1; j++) {\r                 if (matrix[i][j] != matrix[i + 1][j + 1]) {\r                     return false;\r                 }\r             }\r         }\r         return true;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json56\\LeetCode 766 Toeplitz Matrix.cpp\\Solution\\isToeplitzMatrix(vector<vector<int>>&)"
    },
    {
        "f": [],
        "fm": "int numJewelsInStones(string J, string S) {\r         vector<bool> ht(128);\r         for (char &ch : J) {\r             ht[ch] = true;\r         }\r         int cnt = 0;\r         for (char &ch : S) {\r             if (ht[ch]) {\r                 cnt++;\r             }\r         }\r         return cnt;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 771 Jewels and Stones.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 771 Jewels and Stones.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "numJewelsInStones(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "S",
                                    "virtual_name": "EXPECTED_S",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\S",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "J",
                                    "virtual_name": "EXPECTED_J",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\J",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "J",
                                    "virtual_name": "J",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\J",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "J[0]",
                                            "virtual_name": "J[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\J\\J[0]",
                                            "correspondingType": "char",
                                            "value": "-40"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "S",
                                    "virtual_name": "S",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\S",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "S[0]",
                                            "virtual_name": "S[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\S\\S[0]",
                                            "correspondingType": "char",
                                            "value": "12"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_numJewelsInStones_string_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_numJewelsInStones_string_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 771 Jewels and Stones.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName83983 = new char[2];akaRandomName83983[0] = -40;akaRandomName83983[1] = '\\0';string J=akaRandomName83983;\nchar* akaRandomName480176 = new char[2];akaRandomName480176[0] = 12;akaRandomName480176[1] = '\\0';string S=akaRandomName480176;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode J */\n/* NormalStringDataNode S */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_numJewelsInStones_string_string_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->numJewelsInStones(J,S);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 771 Jewels and Stones.cpp\\\\Solution\\\\numJewelsInStones(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 771 Jewels and Stones.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName859945 = new char[2];akaRandomName859945[0] = -40;akaRandomName859945[1] = '\\0';string J=akaRandomName859945;\nchar* akaRandomName715650 = new char[2];akaRandomName715650[0] = 12;akaRandomName715650[1] = '\\0';string S=akaRandomName715650;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode J */\n/* NormalStringDataNode S */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 771 Jewels and Stones.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 771 Jewels and Stones.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "numJewelsInStones(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "S",
                                    "virtual_name": "EXPECTED_S",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\S",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "J",
                                    "virtual_name": "EXPECTED_J",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\J",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "J",
                                    "virtual_name": "J",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\J",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "J[0]",
                                            "virtual_name": "J[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\J\\J[0]",
                                            "correspondingType": "char",
                                            "value": "-125"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "S",
                                    "virtual_name": "S",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\S",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "S[0]",
                                            "virtual_name": "S[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\S\\S[0]",
                                            "correspondingType": "char",
                                            "value": "-54"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_numJewelsInStones_string_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_numJewelsInStones_string_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 771 Jewels and Stones.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName720491 = new char[2];akaRandomName720491[0] = -125;akaRandomName720491[1] = '\\0';string J=akaRandomName720491;\nchar* akaRandomName134497 = new char[2];akaRandomName134497[0] = -54;akaRandomName134497[1] = '\\0';string S=akaRandomName134497;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode J */\n/* NormalStringDataNode S */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_numJewelsInStones_string_string_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->numJewelsInStones(J,S);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 771 Jewels and Stones.cpp\\\\Solution\\\\numJewelsInStones(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 771 Jewels and Stones.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName492529 = new char[2];akaRandomName492529[0] = -125;akaRandomName492529[1] = '\\0';string J=akaRandomName492529;\nchar* akaRandomName243039 = new char[2];akaRandomName243039[0] = -54;akaRandomName243039[1] = '\\0';string S=akaRandomName243039;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode J */\n/* NormalStringDataNode S */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int numJewelsInStones(string J, string S) {\r         vector<bool> ht(128);\r         for (char &ch : J) {\r             ht[ch] = true;\r         }\r         int cnt = 0;\r         for (char &ch : S) {\r             if (ht[ch]) {\r                 cnt++;\r             }\r         }\r         return cnt;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json56\\LeetCode 771 Jewels and Stones.cpp\\Solution\\numJewelsInStones(string,string)"
    },
    {
        "f": [],
        "fm": "int rotatedDigits(int N) {\r         int count = 0;\r         for (int i = 1; i <= N; i++) {\r             int num = i;\r             bool changed = false;\r             while (num) {\r                 int rem = num % 10;\r                 if (rem == 3 || rem == 4 || rem == 7) {\r                     break;\r                 }\r                 changed |= rem == 2 || rem == 5 ||\r                     rem == 6 || rem == 9;\r                 num /= 10;\r             }\r             if (changed && !num) {\r                 count++;\r             }\r         }\r         return count;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 788 Rotated Digits.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 788 Rotated Digits.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution\\rotatedDigits(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "rotatedDigits(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution\\rotatedDigits(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "N",
                                    "virtual_name": "EXPECTED_N",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution\\rotatedDigits(int)\\N",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution\\rotatedDigits(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "N",
                                    "virtual_name": "N",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution\\rotatedDigits(int)\\N",
                                    "correspondingType": "int",
                                    "value": "8"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution\\rotatedDigits(int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_rotatedDigits_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_rotatedDigits_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 788 Rotated Digits.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint N=8;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode N */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_rotatedDigits_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->rotatedDigits(N);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 788 Rotated Digits.cpp\\\\Solution\\\\rotatedDigits(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 788 Rotated Digits.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint N=8;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode N */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int rotatedDigits(int N) {\r         int count = 0;\r         for (int i = 1; i <= N; i++) {\r             int num = i;\r             bool changed = false;\r             while (num) {\r                 int rem = num % 10;\r                 if (rem == 3 || rem == 4 || rem == 7) {\r                     break;\r                 }\r                 changed |= rem == 2 || rem == 5 ||\r                     rem == 6 || rem == 9;\r                 num /= 10;\r             }\r             if (changed && !num) {\r                 count++;\r             }\r         }\r         return count;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json56\\LeetCode 788 Rotated Digits.cpp\\Solution\\rotatedDigits(int)"
    },
    {
        "f": [],
        "fm": "bool rotateString(string A, string B) {\r         return A.size() == B.size() && (A + A).find(B) != -1;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 796 Rotate String.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 796 Rotate String.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\rotateString(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "rotateString(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\rotateString(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "A",
                                    "virtual_name": "EXPECTED_A",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\rotateString(string,string)\\A",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "B",
                                    "virtual_name": "EXPECTED_B",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\rotateString(string,string)\\B",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\rotateString(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "A",
                                    "virtual_name": "A",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\rotateString(string,string)\\A",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "A[0]",
                                            "virtual_name": "A[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\rotateString(string,string)\\A\\A[0]",
                                            "correspondingType": "char",
                                            "value": "79"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "B",
                                    "virtual_name": "B",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\rotateString(string,string)\\B",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "B[0]",
                                            "virtual_name": "B[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\rotateString(string,string)\\B\\B[0]",
                                            "correspondingType": "char",
                                            "value": "-109"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\rotateString(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_rotateString_string_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_rotateString_string_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 796 Rotate String.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName508388 = new char[2];akaRandomName508388[0] = 79;akaRandomName508388[1] = '\\0';string A=akaRandomName508388;\nchar* akaRandomName189897 = new char[2];akaRandomName189897[0] = -109;akaRandomName189897[1] = '\\0';string B=akaRandomName189897;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode A */\n/* NormalStringDataNode B */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_rotateString_string_string_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->rotateString(A,B);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 796 Rotate String.cpp\\\\Solution\\\\rotateString(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 796 Rotate String.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName748499 = new char[2];akaRandomName748499[0] = 79;akaRandomName748499[1] = '\\0';string A=akaRandomName748499;\nchar* akaRandomName929129 = new char[2];akaRandomName929129[0] = -109;akaRandomName929129[1] = '\\0';string B=akaRandomName929129;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode A */\n/* NormalStringDataNode B */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool rotateString(string A, string B) {\r         return A.size() == B.size() && (A + A).find(B) != -1;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json56\\LeetCode 796 Rotate String.cpp\\Solution\\rotateString(string,string)"
    },
    {
        "f": [
            "vector<string> e2m = {\".-\", \"-...\", \"-.-.\",  \"-..\",    \".\",\r\n        \"..-.\",  \"--.\", \"....\",   \"..\", \".---\",  \"-.-\", \".-..\",\r\n          \"--\",   \"-.\",  \"---\", \".--.\", \"--.-\",  \".-.\",  \"...\",\r\n           \"-\",  \"..-\", \"...-\",  \".--\", \"-..-\", \"-.--\", \"--..\"};"
        ],
        "fm": "int uniqueMorseRepresentations(vector<string>& words) {\r         unordered_set<string> s;\r         for (string &word : words) {\r             string morse;\r             for (char ch : word) {\r                 morse += e2m[ch - 'a'];\r             }\r             s.insert(morse);\r         }\r         return s.size();\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 804 Unique Morse Code Words.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "uniqueMorseRepresentations(vector<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_uniqueMorseRepresentations_vector_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_uniqueMorseRepresentations_vector_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 804 Unique Morse Code Words.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_uniqueMorseRepresentations_vector_string_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->uniqueMorseRepresentations(words);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 804 Unique Morse Code Words.cpp\\\\Solution\\\\uniqueMorseRepresentations(vector<string>&)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 804 Unique Morse Code Words.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 804 Unique Morse Code Words.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "uniqueMorseRepresentations(vector<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "words_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)\\words\\element #0",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "words_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)\\words\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "46"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_uniqueMorseRepresentations_vector_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_uniqueMorseRepresentations_vector_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 804 Unique Morse Code Words.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName203874 = new char[2];akaRandomName203874[0] = 46;akaRandomName203874[1] = '\\0';string words_element0=akaRandomName203874;\nwords.push_back(words_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_uniqueMorseRepresentations_vector_string_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->uniqueMorseRepresentations(words);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 804 Unique Morse Code Words.cpp\\\\Solution\\\\uniqueMorseRepresentations(vector<string>&)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 804 Unique Morse Code Words.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName845058 = new char[2];akaRandomName845058[0] = 46;akaRandomName845058[1] = '\\0';string words_element0=akaRandomName845058;\nwords.push_back(words_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int uniqueMorseRepresentations(vector<string>& words) {\r         unordered_set<string> s;\r         for (string &word : words) {\r             string morse;\r             for (char ch : word) {\r                 morse += e2m[ch - 'a'];\r             }\r             s.insert(morse);\r         }\r         return s.size();\r     }\r     \r private:\r     vector<string> e2m = {\".-\", \"-...\", \"-.-.\",  \"-..\",    \".\",\r         \"..-.\",  \"--.\", \"....\",   \"..\", \".---\",  \"-.-\", \".-..\",\r           \"--\",   \"-.\",  \"---\", \".--.\", \"--.-\",  \".-.\",  \"...\",\r            \"-\",  \"..-\", \"...-\",  \".--\", \"-..-\", \"-.--\", \"--..\"};\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json56\\LeetCode 804 Unique Morse Code Words.cpp\\Solution\\uniqueMorseRepresentations(vector<string>&)"
    },
    {
        "f": [],
        "fm": "int maxIncreaseKeepingSkyline(vector<vector<int>>& grid) {\r         int n = grid.size();\r         vector<int> h(n), v(n);\r         for (int i = 0; i < n; i++) {\r             for (int j = 0; j < n; j++) {\r                 h[i] = max(h[i], grid[i][j]);\r                 v[j] = max(v[j], grid[i][j]);\r             }\r         }\r         \r         int ans = 0;\r         for (int i = 0; i < n; i++) {\r             for (int j = 0; j < n; j++) {\r                 ans += min(h[i], v[j]) - grid[i][j];\r             }\r         }\r         return ans;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 807 Max Increase to Keep City Skyline.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "maxIncreaseKeepingSkyline(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "grid",
                                    "virtual_name": "EXPECTED_grid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\\grid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "grid",
                                    "virtual_name": "grid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\\grid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "grid_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\\grid\\element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "grid_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\\grid\\element #0\\element #0",
                                                    "correspondingType": "int",
                                                    "value": "-936"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "grid_element0_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\\grid\\element #0\\element #1",
                                                    "correspondingType": "int",
                                                    "value": "-789"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "grid_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\\grid\\element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "grid_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\\grid\\element #1\\element #0",
                                                    "correspondingType": "int",
                                                    "value": "992"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "grid_element1_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\\grid\\element #1\\element #1",
                                                    "correspondingType": "int",
                                                    "value": "-953"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_maxIncreaseKeepingSkyline_vector_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_maxIncreaseKeepingSkyline_vector_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> grid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\nvector<int> grid_element0;\nint grid_element0_element0=-936;\ngrid_element0.push_back(grid_element0_element0);\nint grid_element0_element1=-789;\ngrid_element0.push_back(grid_element0_element1);\ngrid.push_back(grid_element0);\nvector<int> grid_element1;\nint grid_element1_element0=992;\ngrid_element1.push_back(grid_element1_element0);\nint grid_element1_element1=-953;\ngrid_element1.push_back(grid_element1_element1);\ngrid.push_back(grid_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxIncreaseKeepingSkyline_vector_vector_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxIncreaseKeepingSkyline(grid);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\\\Solution\\\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_grid;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> grid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\nvector<int> grid_element0;\nint grid_element0_element0=-936;\ngrid_element0.push_back(grid_element0_element0);\nint grid_element0_element1=-789;\ngrid_element0.push_back(grid_element0_element1);\ngrid.push_back(grid_element0);\nvector<int> grid_element1;\nint grid_element1_element0=992;\ngrid_element1.push_back(grid_element1_element0);\nint grid_element1_element1=-953;\ngrid_element1.push_back(grid_element1_element1);\ngrid.push_back(grid_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 807 Max Increase to Keep City Skyline.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "maxIncreaseKeepingSkyline(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "grid",
                                    "virtual_name": "EXPECTED_grid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\\grid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "grid",
                                    "virtual_name": "grid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\\grid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_maxIncreaseKeepingSkyline_vector_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_maxIncreaseKeepingSkyline_vector_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> grid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxIncreaseKeepingSkyline_vector_vector_int_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxIncreaseKeepingSkyline(grid);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\\\Solution\\\\maxIncreaseKeepingSkyline(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_grid;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> grid;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int maxIncreaseKeepingSkyline(vector<vector<int>>& grid) {\r         int n = grid.size();\r         vector<int> h(n), v(n);\r         for (int i = 0; i < n; i++) {\r             for (int j = 0; j < n; j++) {\r                 h[i] = max(h[i], grid[i][j]);\r                 v[j] = max(v[j], grid[i][j]);\r             }\r         }\r         \r         int ans = 0;\r         for (int i = 0; i < n; i++) {\r             for (int j = 0; j < n; j++) {\r                 ans += min(h[i], v[j]) - grid[i][j];\r             }\r         }\r         return ans;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json56\\LeetCode 807 Max Increase to Keep City Skyline.cpp\\Solution\\maxIncreaseKeepingSkyline(vector<vector<int>>&)"
    },
    {
        "f": [],
        "fm": "vector<string> subdomainVisits(vector<string>& cpdomains) {\r         unordered_map<string, int> m;\r         for (string &d : cpdomains) {\r             int count = stoi(d);\r             for (int i = d.size() - 1; d[i] != ' '; i--) {\r                 if (d[i - 1] == '.' || d[i - 1] == ' ') {\r                     m[d.substr(i, d.size() - i)] += count;\r                 } \r             }\r         }\r         \r         vector<string> ans(m.size());\r         int i = 0;\r         for (auto &[k, v] : m) {\r             ans[i++] = to_string(v) + \" \" + k;\r         }\r         return ans;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 811 Subdomain Visit Count.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "subdomainVisits(vector<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cpdomains",
                                    "virtual_name": "EXPECTED_cpdomains",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\cpdomains",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cpdomains",
                                    "virtual_name": "cpdomains",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\cpdomains",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "cpdomains_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\cpdomains\\element #0",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "cpdomains_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\cpdomains\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "74"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "cpdomains_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\cpdomains\\element #1",
                                            "correspondingType": "string",
                                            "value": "2",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "cpdomains_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\cpdomains\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "84"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_subdomainVisits_vector_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_subdomainVisits_vector_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 811 Subdomain Visit Count.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> cpdomains;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cpdomains */\nchar* akaRandomName759465 = new char[2];akaRandomName759465[0] = 74;akaRandomName759465[1] = '\\0';string cpdomains_element0=akaRandomName759465;\ncpdomains.push_back(cpdomains_element0);\nchar* akaRandomName982754 = new char[2];akaRandomName982754[0] = 84;akaRandomName982754[1] = '\\0';string cpdomains_element1=akaRandomName982754;\ncpdomains.push_back(cpdomains_element1);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_subdomainVisits_vector_string_random_1\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->subdomainVisits(cpdomains);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 811 Subdomain Visit Count.cpp\\\\Solution\\\\subdomainVisits(vector<string>&)\");\n\n\nvector<string> EXPECTED_cpdomains;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 811 Subdomain Visit Count.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> cpdomains;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cpdomains */\nchar* akaRandomName178538 = new char[2];akaRandomName178538[0] = 74;akaRandomName178538[1] = '\\0';string cpdomains_element0=akaRandomName178538;\ncpdomains.push_back(cpdomains_element0);\nchar* akaRandomName837704 = new char[2];akaRandomName837704[0] = 84;akaRandomName837704[1] = '\\0';string cpdomains_element1=akaRandomName837704;\ncpdomains.push_back(cpdomains_element1);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 811 Subdomain Visit Count.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "subdomainVisits(vector<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cpdomains",
                                    "virtual_name": "EXPECTED_cpdomains",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\cpdomains",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cpdomains",
                                    "virtual_name": "cpdomains",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\cpdomains",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_subdomainVisits_vector_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_subdomainVisits_vector_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 811 Subdomain Visit Count.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> cpdomains;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cpdomains */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_subdomainVisits_vector_string_directed_0\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->subdomainVisits(cpdomains);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 811 Subdomain Visit Count.cpp\\\\Solution\\\\subdomainVisits(vector<string>&)\");\n\n\nvector<string> EXPECTED_cpdomains;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 811 Subdomain Visit Count.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> cpdomains;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cpdomains */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 811 Subdomain Visit Count.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "subdomainVisits(vector<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cpdomains",
                                    "virtual_name": "EXPECTED_cpdomains",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\cpdomains",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cpdomains",
                                    "virtual_name": "cpdomains",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\cpdomains",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": ".\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_subdomainVisits_vector_string_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_subdomainVisits_vector_string_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 811 Subdomain Visit Count.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> cpdomains;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cpdomains */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_subdomainVisits_vector_string_directed_1\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->subdomainVisits(cpdomains);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json56\\\\LeetCode 811 Subdomain Visit Count.cpp\\\\Solution\\\\subdomainVisits(vector<string>&)\");\n\n\nvector<string> EXPECTED_cpdomains;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 811 Subdomain Visit Count.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> cpdomains;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cpdomains */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<string> subdomainVisits(vector<string>& cpdomains) {\r         unordered_map<string, int> m;\r         for (string &d : cpdomains) {\r             int count = stoi(d);\r             for (int i = d.size() - 1; d[i] != ' '; i--) {\r                 if (d[i - 1] == '.' || d[i - 1] == ' ') {\r                     m[d.substr(i, d.size() - i)] += count;\r                 } \r             }\r         }\r         \r         vector<string> ans(m.size());\r         int i = 0;\r         for (auto &[k, v] : m) {\r             ans[i++] = to_string(v) + \" \" + k;\r         }\r         return ans;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json56\\LeetCode 811 Subdomain Visit Count.cpp\\Solution\\subdomainVisits(vector<string>&)"
    }
]
[
    {
        "f": [],
        "fm": "string toLowerCase(string str) {\r         for (char &ch : str) {\r             if (isupper(ch)) {\r                 ch += 'a' - 'A';\r             }\r         }\r         return str;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 709 To Lower Case.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 709 To Lower Case.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "toLowerCase(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)\\str",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "str[0]",
                                            "virtual_name": "str[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)\\str\\str[0]",
                                            "correspondingType": "char",
                                            "value": "-43"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_toLowerCase_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_toLowerCase_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 709 To Lower Case.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName553376 = new char[2];akaRandomName553376[0] = -43;akaRandomName553376[1] = '\\0';string str=akaRandomName553376;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_toLowerCase_string_random_2\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->toLowerCase(str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 709 To Lower Case.cpp\\\\Solution\\\\toLowerCase(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 709 To Lower Case.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName307620 = new char[2];akaRandomName307620[0] = -43;akaRandomName307620[1] = '\\0';string str=akaRandomName307620;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 709 To Lower Case.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 709 To Lower Case.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "toLowerCase(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)\\str",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "str[0]",
                                            "virtual_name": "str[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)\\str\\str[0]",
                                            "correspondingType": "char",
                                            "value": "69"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_toLowerCase_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_toLowerCase_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 709 To Lower Case.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName754048 = new char[2];akaRandomName754048[0] = 69;akaRandomName754048[1] = '\\0';string str=akaRandomName754048;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_toLowerCase_string_random_1\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->toLowerCase(str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 709 To Lower Case.cpp\\\\Solution\\\\toLowerCase(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 709 To Lower Case.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName970062 = new char[2];akaRandomName970062[0] = 69;akaRandomName970062[1] = '\\0';string str=akaRandomName970062;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     string toLowerCase(string str) {\r         for (char &ch : str) {\r             if (isupper(ch)) {\r                 ch += 'a' - 'A';\r             }\r         }\r         return str;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json55\\LeetCode 709 To Lower Case.cpp\\Solution\\toLowerCase(string)"
    },
    {
        "f": [],
        "fm": "int pivotIndex(vector<int>& nums) {\r         int left_sum = 0, sum = accumulate(nums.begin(), nums.end(), 0);\r         for (int i = 0; i < nums.size(); i++) {\r             if (left_sum * 2 + nums[i] == sum) {\r                 return i;\r             }\r             left_sum += nums[i];\r         }\r         return -1;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 8,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "nums_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_directed_6(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_directed_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_directed_6\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "-394"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "15"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-394;\nnums.push_back(nums_element0);\nint nums_element1=15;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-394;\nnums.push_back(nums_element0);\nint nums_element1=15;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 4,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_directed_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "386"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=386;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=386;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_directed_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 7,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_directed_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 5,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_directed_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 6,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int pivotIndex(vector<int>& nums) {\r         int left_sum = 0, sum = accumulate(nums.begin(), nums.end(), 0);\r         for (int i = 0; i < nums.size(); i++) {\r             if (left_sum * 2 + nums[i] == sum) {\r                 return i;\r             }\r             left_sum += nums[i];\r         }\r         return -1;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json55\\LeetCode 724 Find Pivot Index - Sao chép.cpp\\Solution\\pivotIndex(vector<int>&)"
    },
    {
        "f": [],
        "fm": "int pivotIndex(vector<int>& nums) {\r         int left_sum = 0, sum = accumulate(nums.begin(), nums.end(), 0);\r         for (int i = 0; i < nums.size(); i++) {\r             if (left_sum * 2 + nums[i] == sum) {\r                 return i;\r             }\r             left_sum += nums[i];\r         }\r         return -1;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 10,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "nums_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #8",
                                            "virtual_name": "nums_element8",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #8",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #9",
                                            "virtual_name": "nums_element9",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #9",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_directed_7(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_directed_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* element #9 : null value -> no code */\nnums.push_back(nums_element9);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_directed_7\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* element #9 : null value -> no code */\nnums.push_back(nums_element9);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 7,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_directed_10(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_directed_10\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_directed_10\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "-228"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-228;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-228;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 4,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_directed_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "443"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "403"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_random_6(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_random_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=443;\nnums.push_back(nums_element0);\nint nums_element1=403;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_random_6\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=443;\nnums.push_back(nums_element0);\nint nums_element1=403;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 9,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "nums_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #8",
                                            "virtual_name": "nums_element8",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #8",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_directed_9(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_directed_9\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_directed_9\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 5,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_directed_8(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_directed_8\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_directed_8\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 724 Find Pivot Index.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "pivotIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_pivotIndex_vector_int_directed_11(void) {\n{\nAKA_test_case_name=\"Solution_pivotIndex_vector_int_directed_11\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_pivotIndex_vector_int_directed_11\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->pivotIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 724 Find Pivot Index.cpp\\\\Solution\\\\pivotIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 724 Find Pivot Index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int pivotIndex(vector<int>& nums) {\r         int left_sum = 0, sum = accumulate(nums.begin(), nums.end(), 0);\r         for (int i = 0; i < nums.size(); i++) {\r             if (left_sum * 2 + nums[i] == sum) {\r                 return i;\r             }\r             left_sum += nums[i];\r         }\r         return -1;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json55\\LeetCode 724 Find Pivot Index.cpp\\Solution\\pivotIndex(vector<int>&)"
    },
    {
        "f": [],
        "fm": "vector<ListNode*> splitListToParts(ListNode* root, int k) {\r         int size = 0;\r         ListNode *pi = root;\r         while (pi) {\r             size++;\r             pi = pi->next;\r         }\r         \r         vector<ListNode *> ans(k);\r         for (int i = 0; i < k; i++) {\r             if (!root) break;\r             ans[i] = pi = root;\r             for (int j = 0; j < size / k - (i < size % k ? 0 : 1); j++) {\r                 pi = pi->next;\r             }\r             root = pi->next;\r             pi->next = NULL;\r         }\r         return ans;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 725 Split Linked List in Parts.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "splitListToParts(ListNode*,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<ListNode*>",
                            "realType": "vector<ListNode*>",
                            "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "EXPECTED_root",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\root",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "EXPECTED_k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "root",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\root",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                    "level": 1,
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "root[0]",
                                            "virtual_name": "root[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\root\\root[0]",
                                            "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "root",
                                                    "virtual_name": "root[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\root\\root",
                                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "root[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "root0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "752"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "root[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "root[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "root[1]",
                                            "virtual_name": "root[1]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\root\\root[1]",
                                            "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "root",
                                                    "virtual_name": "root[1]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\root\\root",
                                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "root[1]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "root1_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "612"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "root[1].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "root[1].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "2"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<ListNode*>",
                                    "realType": "vector<ListNode*>",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "ListNode*"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_splitListToParts_ListNodemul_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_splitListToParts_ListNodemul_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=752;\nAKA_mark(\"Calling: .\\\\json55\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\splitListToParts(ListNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::ListNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=612;\nAKA_mark(\"Calling: .\\\\json55\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\splitListToParts(ListNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::ListNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nListNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint k=2;\nvector<ListNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_splitListToParts_ListNodemul_int_random_2\");vector<ListNode*> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->splitListToParts(root,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\Solution\\\\splitListToParts(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=752;\nAKA_mark(\"Calling: .\\\\json55\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\splitListToParts(ListNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::ListNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=612;\nAKA_mark(\"Calling: .\\\\json55\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\splitListToParts(ListNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::ListNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nListNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint k=2;\nvector<ListNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 725 Split Linked List in Parts.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "splitListToParts(ListNode*,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<ListNode*>",
                            "realType": "vector<ListNode*>",
                            "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "EXPECTED_root",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\root",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "EXPECTED_k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "root",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\root",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                    "level": 1,
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "root[0]",
                                            "virtual_name": "root[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\root\\root[0]",
                                            "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "root",
                                                    "virtual_name": "root[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\root\\root",
                                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "root[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "root0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "0"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "root[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "root[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                                            "level": 1,
                                                            "size": 0
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "1"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<ListNode*>",
                                    "realType": "vector<ListNode*>",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "ListNode*"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_splitListToParts_ListNodemul_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_splitListToParts_ListNodemul_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\json55\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\splitListToParts(ListNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::ListNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0).next = nullptr;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nListNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint k=1;\nvector<ListNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_splitListToParts_ListNodemul_int_directed_0\");vector<ListNode*> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->splitListToParts(root,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\Solution\\\\splitListToParts(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\json55\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\splitListToParts(ListNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::ListNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0).next = nullptr;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nListNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint k=1;\nvector<ListNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 725 Split Linked List in Parts.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "splitListToParts(ListNode*,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<ListNode*>",
                            "realType": "vector<ListNode*>",
                            "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "EXPECTED_root",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\root",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "EXPECTED_k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "root",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\root",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                    "level": 1,
                                    "size": 0
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\k",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<ListNode*>",
                                    "realType": "vector<ListNode*>",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "ListNode*"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_splitListToParts_ListNodemul_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_splitListToParts_ListNodemul_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nListNode* root = nullptr;\n\n\nint k=0;\nvector<ListNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_splitListToParts_ListNodemul_int_directed_1\");vector<ListNode*> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->splitListToParts(root,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\Solution\\\\splitListToParts(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nListNode* root = nullptr;\n\n\nint k=0;\nvector<ListNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<ListNode*> splitListToParts(ListNode* root, int k) {\r         int size = 0;\r         ListNode *pi = root;\r         while (pi) {\r             size++;\r             pi = pi->next;\r         }\r         \r         vector<ListNode *> ans(k);\r         for (int i = 0; i < k; i++) {\r             if (!root) break;\r             ans[i] = pi = root;\r             for (int j = 0; j < size / k - (i < size % k ? 0 : 1); j++) {\r                 pi = pi->next;\r             }\r             root = pi->next;\r             pi->next = NULL;\r         }\r         return ans;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\Solution\\splitListToParts(ListNode*,int)"
    },
    {
        "f": [],
        "fm": "ListNode(int x) : val(x), next(NULL) {}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 725 Split Linked List in Parts.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___ListNode",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                    "dataType": "::ListNode",
                                    "realType": "::ListNode",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___ListNode",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                            "dataType": "::ListNode",
                                            "realType": "::ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                            "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                            "rawType": "::ListNode",
                                            "selectedConstructor": "ListNode(int)",
                                            "variableType": "::ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "ListNode(int)",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "next",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode->next",
                                                    "dataType": "ListNode*",
                                                    "realType": "ListNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\next",
                                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___ListNode",
                                    "virtual_name": "AKA_INSTANCE___ListNode",
                                    "dataType": "::ListNode",
                                    "realType": "::ListNode",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___ListNode",
                                            "virtual_name": "AKA_INSTANCE___ListNode",
                                            "dataType": "::ListNode",
                                            "realType": "::ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                            "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                            "rawType": "::ListNode",
                                            "selectedConstructor": "ListNode(int)",
                                            "variableType": "::ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "ListNode(int)",
                                                    "virtual_name": "AKA_INSTANCE___ListNode",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "AKA_INSTANCE___ListNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "-757"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "AKA_INSTANCE___ListNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "next",
                                                    "virtual_name": "AKA_INSTANCE___ListNode->next",
                                                    "dataType": "ListNode*",
                                                    "realType": "ListNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\next",
                                                    "correspondingType": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "ListNode(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)"
                        }
                    ]
                },
                "td": "void AKA_TEST_ListNode_int_random_0(void) {\n{\nAKA_test_case_name=\"ListNode_int_random_0\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___ListNode */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___ListNode_x=-757;\nAKA_mark(\"<<PRE-CALLING>> Test ListNode_int_random_0\");AKA_mark(\"Calling: .\\\\json55\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\GLOBAL\\\\AKA_INSTANCE___ListNode\\\\AKA_INSTANCE___ListNode\\\\ListNode(int)\");AKA_fCall++;AKA_INSTANCE___ListNode = new ::ListNode(AKA_INSTANCE___ListNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nAKA_INSTANCE___ListNode->next;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___ListNode */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___ListNode_x=-757;\nAKA_mark(\"<<PRE-CALLING>> Test ListNode_int_random_0\");AKA_mark(\"Calling: .\\\\json55\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\LeetCode 725 Split Linked List in Parts.cpp\\\\GLOBAL\\\\AKA_INSTANCE___ListNode\\\\AKA_INSTANCE___ListNode\\\\ListNode(int)\");AKA_fCall++;AKA_INSTANCE___ListNode = new ::ListNode(AKA_INSTANCE___ListNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nAKA_INSTANCE___ListNode->next;\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json55\\LeetCode 725 Split Linked List in Parts.cpp\\ListNode\\ListNode(int)"
    },
    {
        "f": [],
        "fm": "vector<int> selfDividingNumbers(int left, int right) {\r         vector<int> ans;\r         for (int i = left; i <= right; i++) {\r             int n = i;\r             while (n % 10 && i % (n % 10) == 0) {\r                 n /= 10;\r             }\r             if (n == 0) {\r                 ans.push_back(i);\r             }\r         }\r         return ans;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 728 Self Dividing Numbers.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution\\selfDividingNumbers(int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "selfDividingNumbers(int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution\\selfDividingNumbers(int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "left",
                                    "virtual_name": "EXPECTED_left",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution\\selfDividingNumbers(int,int)\\left",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "right",
                                    "virtual_name": "EXPECTED_right",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution\\selfDividingNumbers(int,int)\\right",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution\\selfDividingNumbers(int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "left",
                                    "virtual_name": "left",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution\\selfDividingNumbers(int,int)\\left",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "right",
                                    "virtual_name": "right",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution\\selfDividingNumbers(int,int)\\right",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution\\selfDividingNumbers(int,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_selfDividingNumbers_int_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_selfDividingNumbers_int_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 728 Self Dividing Numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint left=0;\n\n\nint right=3;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode left */\n/* NormalNumberDataNode right */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_selfDividingNumbers_int_int_random_0\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->selfDividingNumbers(left,right);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 728 Self Dividing Numbers.cpp\\\\Solution\\\\selfDividingNumbers(int,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 728 Self Dividing Numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint left=0;\n\n\nint right=3;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode left */\n/* NormalNumberDataNode right */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<int> selfDividingNumbers(int left, int right) {\r         vector<int> ans;\r         for (int i = left; i <= right; i++) {\r             int n = i;\r             while (n % 10 && i % (n % 10) == 0) {\r                 n /= 10;\r             }\r             if (n == 0) {\r                 ans.push_back(i);\r             }\r         }\r         return ans;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json55\\LeetCode 728 Self Dividing Numbers.cpp\\Solution\\selfDividingNumbers(int,int)"
    },
    {
        "f": [],
        "fm": "vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {\r         if (image[sr][sc] == newColor) return image;\r         dfs(image, sr, sc, image[sr][sc], newColor);\r         return image;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 733 Flood Fill.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 733 Flood Fill.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "floodFill(vector<vector<int>>&,int,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "sc",
                                    "virtual_name": "EXPECTED_sc",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\sc",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "image",
                                    "virtual_name": "EXPECTED_image",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\image",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "sr",
                                    "virtual_name": "EXPECTED_sr",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\sr",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "newColor",
                                    "virtual_name": "EXPECTED_newColor",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\newColor",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "image",
                                    "virtual_name": "image",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\image",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "image_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\image\\element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "image_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\image\\element #0\\element #0",
                                                    "correspondingType": "int",
                                                    "value": "786"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "image_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\image\\element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "image_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\image\\element #1\\element #0",
                                                    "correspondingType": "int",
                                                    "value": "741"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "sr",
                                    "virtual_name": "sr",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\sr",
                                    "correspondingType": "int",
                                    "value": "-951"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "sc",
                                    "virtual_name": "sc",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\sc",
                                    "correspondingType": "int",
                                    "value": "170"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "newColor",
                                    "virtual_name": "newColor",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\newColor",
                                    "correspondingType": "int",
                                    "value": "-542"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_floodFill_vector_vector_int_int_int_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_floodFill_vector_vector_int_int_int_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 733 Flood Fill.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> image;\n\n\nint sr=-951;\n\n\nint sc=170;\n\n\nint newColor=-542;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode image */\nvector<int> image_element0;\nint image_element0_element0=786;\nimage_element0.push_back(image_element0_element0);\nimage.push_back(image_element0);\nvector<int> image_element1;\nint image_element1_element0=741;\nimage_element1.push_back(image_element1_element0);\nimage.push_back(image_element1);\n/* NormalNumberDataNode sr */\n/* NormalNumberDataNode sc */\n/* NormalNumberDataNode newColor */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_floodFill_vector_vector_int_int_int_int_random_2\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->floodFill(image,sr,sc,newColor);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 733 Flood Fill.cpp\\\\Solution\\\\floodFill(vector<vector<int>>&,int,int,int)\");\n\n\nvector<vector<int>> EXPECTED_image;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 733 Flood Fill.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> image;\n\n\nint sr=-951;\n\n\nint sc=170;\n\n\nint newColor=-542;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode image */\nvector<int> image_element0;\nint image_element0_element0=786;\nimage_element0.push_back(image_element0_element0);\nimage.push_back(image_element0);\nvector<int> image_element1;\nint image_element1_element0=741;\nimage_element1.push_back(image_element1_element0);\nimage.push_back(image_element1);\n/* NormalNumberDataNode sr */\n/* NormalNumberDataNode sc */\n/* NormalNumberDataNode newColor */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 733 Flood Fill.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 733 Flood Fill.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "floodFill(vector<vector<int>>&,int,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "sc",
                                    "virtual_name": "EXPECTED_sc",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\sc",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "image",
                                    "virtual_name": "EXPECTED_image",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\image",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "sr",
                                    "virtual_name": "EXPECTED_sr",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\sr",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "newColor",
                                    "virtual_name": "EXPECTED_newColor",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\newColor",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "image",
                                    "virtual_name": "image",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\image",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "sr",
                                    "virtual_name": "sr",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\sr",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "sc",
                                    "virtual_name": "sc",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\sc",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "newColor",
                                    "virtual_name": "newColor",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\newColor",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_floodFill_vector_vector_int_int_int_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_floodFill_vector_vector_int_int_int_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 733 Flood Fill.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> image;\n\n\nint sr=0;\n\n\nint sc=0;\n\n\nint newColor=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode image */\n/* NormalNumberDataNode sr */\n/* NormalNumberDataNode sc */\n/* NormalNumberDataNode newColor */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_floodFill_vector_vector_int_int_int_int_directed_0\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->floodFill(image,sr,sc,newColor);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 733 Flood Fill.cpp\\\\Solution\\\\floodFill(vector<vector<int>>&,int,int,int)\");\n\n\nvector<vector<int>> EXPECTED_image;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 733 Flood Fill.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> image;\n\n\nint sr=0;\n\n\nint sc=0;\n\n\nint newColor=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode image */\n/* NormalNumberDataNode sr */\n/* NormalNumberDataNode sc */\n/* NormalNumberDataNode newColor */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {\r         if (image[sr][sc] == newColor) return image;\r         dfs(image, sr, sc, image[sr][sc], newColor);\r         return image;\r     }\r     \r private:\r     void dfs(vector<vector<int>>& image, int sr, int sc, int baseColor, int newColor) {\r         if (sr < 0 || sr >= image.size()) return;\r         if (sc < 0 || sc >= image[0].size()) return;\r         if (image[sr][sc] != baseColor) return;\r         \r         image[sr][sc] = newColor;\r         \r         dfs(image, sr - 1, sc, baseColor, newColor);\r         dfs(image, sr + 1, sc, baseColor, newColor);\r         dfs(image, sr, sc - 1, baseColor, newColor);\r         dfs(image, sr, sc + 1, baseColor, newColor);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\floodFill(vector<vector<int>>&,int,int,int)"
    },
    {
        "f": [],
        "fm": "void dfs(vector<vector<int>>& image, int sr, int sc, int baseColor, int newColor) {\r         if (sr < 0 || sr >= image.size()) return;\r         if (sc < 0 || sc >= image[0].size()) return;\r         if (image[sr][sc] != baseColor) return;\r         \r         image[sr][sc] = newColor;\r         \r         dfs(image, sr - 1, sc, baseColor, newColor);\r         dfs(image, sr + 1, sc, baseColor, newColor);\r         dfs(image, sr, sc - 1, baseColor, newColor);\r         dfs(image, sr, sc + 1, baseColor, newColor);\r     }",
        "datatest": [],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {\r         if (image[sr][sc] == newColor) return image;\r         dfs(image, sr, sc, image[sr][sc], newColor);\r         return image;\r     }\r     \r private:\r     void dfs(vector<vector<int>>& image, int sr, int sc, int baseColor, int newColor) {\r         if (sr < 0 || sr >= image.size()) return;\r         if (sc < 0 || sc >= image[0].size()) return;\r         if (image[sr][sc] != baseColor) return;\r         \r         image[sr][sc] = newColor;\r         \r         dfs(image, sr - 1, sc, baseColor, newColor);\r         dfs(image, sr + 1, sc, baseColor, newColor);\r         dfs(image, sr, sc - 1, baseColor, newColor);\r         dfs(image, sr, sc + 1, baseColor, newColor);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json55\\LeetCode 733 Flood Fill.cpp\\Solution\\dfs(vector<vector<int>>&,int,int,int,int)"
    },
    {
        "f": [],
        "fm": "vector<int> asteroidCollision(vector<int>& asteroids) {\r         vector<int> s;\r         for (int ast : asteroids) {\r             if (ast < 0) {\r                 while (!s.empty() && 0 < s.back() && s.back() < -ast) {\r                     s.pop_back();\r                 }\r                 if (s.empty() || s.back() < 0) {\r                     s.push_back(ast);\r                 } else if (s.back() == -ast) {\r                     s.pop_back();\r                 }\r             } else {\r                 s.push_back(ast);\r             }\r         }\r         return s;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 735 Asteroid Collision.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 735 Asteroid Collision.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "asteroidCollision(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "asteroids",
                                    "virtual_name": "EXPECTED_asteroids",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)\\asteroids",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "asteroids",
                                    "virtual_name": "asteroids",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)\\asteroids",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_asteroidCollision_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_asteroidCollision_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 735 Asteroid Collision.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> asteroids;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode asteroids */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_asteroidCollision_vector_int_directed_0\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->asteroidCollision(asteroids);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 735 Asteroid Collision.cpp\\\\Solution\\\\asteroidCollision(vector<int>&)\");\n\n\nvector<int> EXPECTED_asteroids;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 735 Asteroid Collision.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> asteroids;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode asteroids */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 735 Asteroid Collision.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 735 Asteroid Collision.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "asteroidCollision(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "asteroids",
                                    "virtual_name": "EXPECTED_asteroids",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)\\asteroids",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "asteroids",
                                    "virtual_name": "asteroids",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)\\asteroids",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "asteroids_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)\\asteroids\\element #0",
                                            "correspondingType": "int",
                                            "value": "-141"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "asteroids_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)\\asteroids\\element #1",
                                            "correspondingType": "int",
                                            "value": "-874"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_asteroidCollision_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_asteroidCollision_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 735 Asteroid Collision.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> asteroids;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode asteroids */\nint asteroids_element0=-141;\nasteroids.push_back(asteroids_element0);\nint asteroids_element1=-874;\nasteroids.push_back(asteroids_element1);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_asteroidCollision_vector_int_random_4\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->asteroidCollision(asteroids);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 735 Asteroid Collision.cpp\\\\Solution\\\\asteroidCollision(vector<int>&)\");\n\n\nvector<int> EXPECTED_asteroids;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 735 Asteroid Collision.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> asteroids;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode asteroids */\nint asteroids_element0=-141;\nasteroids.push_back(asteroids_element0);\nint asteroids_element1=-874;\nasteroids.push_back(asteroids_element1);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 735 Asteroid Collision.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 735 Asteroid Collision.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "asteroidCollision(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "asteroids",
                                    "virtual_name": "EXPECTED_asteroids",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)\\asteroids",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "asteroids",
                                    "virtual_name": "asteroids",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)\\asteroids",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "asteroids_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)\\asteroids\\element #0",
                                            "correspondingType": "int",
                                            "value": "744"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_asteroidCollision_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_asteroidCollision_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 735 Asteroid Collision.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> asteroids;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode asteroids */\nint asteroids_element0=744;\nasteroids.push_back(asteroids_element0);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_asteroidCollision_vector_int_random_3\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->asteroidCollision(asteroids);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 735 Asteroid Collision.cpp\\\\Solution\\\\asteroidCollision(vector<int>&)\");\n\n\nvector<int> EXPECTED_asteroids;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 735 Asteroid Collision.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> asteroids;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode asteroids */\nint asteroids_element0=744;\nasteroids.push_back(asteroids_element0);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<int> asteroidCollision(vector<int>& asteroids) {\r         vector<int> s;\r         for (int ast : asteroids) {\r             if (ast < 0) {\r                 while (!s.empty() && 0 < s.back() && s.back() < -ast) {\r                     s.pop_back();\r                 }\r                 if (s.empty() || s.back() < 0) {\r                     s.push_back(ast);\r                 } else if (s.back() == -ast) {\r                     s.pop_back();\r                 }\r             } else {\r                 s.push_back(ast);\r             }\r         }\r         return s;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json55\\LeetCode 735 Asteroid Collision.cpp\\Solution\\asteroidCollision(vector<int>&)"
    },
    {
        "f": [],
        "fm": "int minCostClimbingStairs(vector<int>& cost) {\r         vector<int> dp(2);\r         for (int i = 0; i < cost.size(); i++) {\r             dp[i % 2] = min(dp[0], dp[1]) + cost[i];\r         }\r         return min(dp[0], dp[1]);\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minCostClimbingStairs(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "EXPECTED_cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 8,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "cost_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "cost_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "cost_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "cost_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "cost_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "cost_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "cost_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "cost_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minCostClimbingStairs_vector_int_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_minCostClimbingStairs_vector_int_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\n/* element #0 : null value -> no code */\ncost.push_back(cost_element0);\n/* element #1 : null value -> no code */\ncost.push_back(cost_element1);\n/* element #2 : null value -> no code */\ncost.push_back(cost_element2);\n/* element #3 : null value -> no code */\ncost.push_back(cost_element3);\n/* element #4 : null value -> no code */\ncost.push_back(cost_element4);\n/* element #5 : null value -> no code */\ncost.push_back(cost_element5);\n/* element #6 : null value -> no code */\ncost.push_back(cost_element6);\n/* element #7 : null value -> no code */\ncost.push_back(cost_element7);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minCostClimbingStairs_vector_int_directed_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minCostClimbingStairs(cost);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\Solution\\\\minCostClimbingStairs(vector<int>&)\");\n\n\nvector<int> EXPECTED_cost;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\n/* element #0 : null value -> no code */\ncost.push_back(cost_element0);\n/* element #1 : null value -> no code */\ncost.push_back(cost_element1);\n/* element #2 : null value -> no code */\ncost.push_back(cost_element2);\n/* element #3 : null value -> no code */\ncost.push_back(cost_element3);\n/* element #4 : null value -> no code */\ncost.push_back(cost_element4);\n/* element #5 : null value -> no code */\ncost.push_back(cost_element5);\n/* element #6 : null value -> no code */\ncost.push_back(cost_element6);\n/* element #7 : null value -> no code */\ncost.push_back(cost_element7);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minCostClimbingStairs(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "EXPECTED_cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 6,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "cost_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "cost_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "cost_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "cost_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "cost_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "cost_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minCostClimbingStairs_vector_int_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_minCostClimbingStairs_vector_int_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\n/* element #0 : null value -> no code */\ncost.push_back(cost_element0);\n/* element #1 : null value -> no code */\ncost.push_back(cost_element1);\n/* element #2 : null value -> no code */\ncost.push_back(cost_element2);\n/* element #3 : null value -> no code */\ncost.push_back(cost_element3);\n/* element #4 : null value -> no code */\ncost.push_back(cost_element4);\n/* element #5 : null value -> no code */\ncost.push_back(cost_element5);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minCostClimbingStairs_vector_int_directed_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minCostClimbingStairs(cost);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\Solution\\\\minCostClimbingStairs(vector<int>&)\");\n\n\nvector<int> EXPECTED_cost;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\n/* element #0 : null value -> no code */\ncost.push_back(cost_element0);\n/* element #1 : null value -> no code */\ncost.push_back(cost_element1);\n/* element #2 : null value -> no code */\ncost.push_back(cost_element2);\n/* element #3 : null value -> no code */\ncost.push_back(cost_element3);\n/* element #4 : null value -> no code */\ncost.push_back(cost_element4);\n/* element #5 : null value -> no code */\ncost.push_back(cost_element5);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minCostClimbingStairs(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "EXPECTED_cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "cost_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "cost_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "cost_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minCostClimbingStairs_vector_int_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_minCostClimbingStairs_vector_int_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\n/* element #0 : null value -> no code */\ncost.push_back(cost_element0);\n/* element #1 : null value -> no code */\ncost.push_back(cost_element1);\n/* element #2 : null value -> no code */\ncost.push_back(cost_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minCostClimbingStairs_vector_int_directed_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minCostClimbingStairs(cost);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\Solution\\\\minCostClimbingStairs(vector<int>&)\");\n\n\nvector<int> EXPECTED_cost;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\n/* element #0 : null value -> no code */\ncost.push_back(cost_element0);\n/* element #1 : null value -> no code */\ncost.push_back(cost_element1);\n/* element #2 : null value -> no code */\ncost.push_back(cost_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minCostClimbingStairs(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "EXPECTED_cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 4,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "cost_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "cost_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "cost_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "cost_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minCostClimbingStairs_vector_int_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_minCostClimbingStairs_vector_int_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\n/* element #0 : null value -> no code */\ncost.push_back(cost_element0);\n/* element #1 : null value -> no code */\ncost.push_back(cost_element1);\n/* element #2 : null value -> no code */\ncost.push_back(cost_element2);\n/* element #3 : null value -> no code */\ncost.push_back(cost_element3);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minCostClimbingStairs_vector_int_directed_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minCostClimbingStairs(cost);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\Solution\\\\minCostClimbingStairs(vector<int>&)\");\n\n\nvector<int> EXPECTED_cost;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\n/* element #0 : null value -> no code */\ncost.push_back(cost_element0);\n/* element #1 : null value -> no code */\ncost.push_back(cost_element1);\n/* element #2 : null value -> no code */\ncost.push_back(cost_element2);\n/* element #3 : null value -> no code */\ncost.push_back(cost_element3);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minCostClimbingStairs(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "EXPECTED_cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "cost_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #0",
                                            "correspondingType": "int",
                                            "value": "-739"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "cost_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #1",
                                            "correspondingType": "int",
                                            "value": "-225"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minCostClimbingStairs_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_minCostClimbingStairs_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\nint cost_element0=-739;\ncost.push_back(cost_element0);\nint cost_element1=-225;\ncost.push_back(cost_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minCostClimbingStairs_vector_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minCostClimbingStairs(cost);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\Solution\\\\minCostClimbingStairs(vector<int>&)\");\n\n\nvector<int> EXPECTED_cost;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\nint cost_element0=-739;\ncost.push_back(cost_element0);\nint cost_element1=-225;\ncost.push_back(cost_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minCostClimbingStairs(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "EXPECTED_cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 10,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "cost_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "cost_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "cost_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "cost_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "cost_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "cost_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "cost_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "cost_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #8",
                                            "virtual_name": "cost_element8",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #8",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #9",
                                            "virtual_name": "cost_element9",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #9",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minCostClimbingStairs_vector_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_minCostClimbingStairs_vector_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\n/* element #0 : null value -> no code */\ncost.push_back(cost_element0);\n/* element #1 : null value -> no code */\ncost.push_back(cost_element1);\n/* element #2 : null value -> no code */\ncost.push_back(cost_element2);\n/* element #3 : null value -> no code */\ncost.push_back(cost_element3);\n/* element #4 : null value -> no code */\ncost.push_back(cost_element4);\n/* element #5 : null value -> no code */\ncost.push_back(cost_element5);\n/* element #6 : null value -> no code */\ncost.push_back(cost_element6);\n/* element #7 : null value -> no code */\ncost.push_back(cost_element7);\n/* element #8 : null value -> no code */\ncost.push_back(cost_element8);\n/* element #9 : null value -> no code */\ncost.push_back(cost_element9);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minCostClimbingStairs_vector_int_directed_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minCostClimbingStairs(cost);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\Solution\\\\minCostClimbingStairs(vector<int>&)\");\n\n\nvector<int> EXPECTED_cost;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\n/* element #0 : null value -> no code */\ncost.push_back(cost_element0);\n/* element #1 : null value -> no code */\ncost.push_back(cost_element1);\n/* element #2 : null value -> no code */\ncost.push_back(cost_element2);\n/* element #3 : null value -> no code */\ncost.push_back(cost_element3);\n/* element #4 : null value -> no code */\ncost.push_back(cost_element4);\n/* element #5 : null value -> no code */\ncost.push_back(cost_element5);\n/* element #6 : null value -> no code */\ncost.push_back(cost_element6);\n/* element #7 : null value -> no code */\ncost.push_back(cost_element7);\n/* element #8 : null value -> no code */\ncost.push_back(cost_element8);\n/* element #9 : null value -> no code */\ncost.push_back(cost_element9);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minCostClimbingStairs(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "EXPECTED_cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "cost",
                                    "virtual_name": "cost",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 9,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "cost_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "cost_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "cost_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "cost_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "cost_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "cost_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "cost_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "cost_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #8",
                                            "virtual_name": "cost_element8",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\cost\\element #8",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minCostClimbingStairs_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_minCostClimbingStairs_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\n/* element #0 : null value -> no code */\ncost.push_back(cost_element0);\n/* element #1 : null value -> no code */\ncost.push_back(cost_element1);\n/* element #2 : null value -> no code */\ncost.push_back(cost_element2);\n/* element #3 : null value -> no code */\ncost.push_back(cost_element3);\n/* element #4 : null value -> no code */\ncost.push_back(cost_element4);\n/* element #5 : null value -> no code */\ncost.push_back(cost_element5);\n/* element #6 : null value -> no code */\ncost.push_back(cost_element6);\n/* element #7 : null value -> no code */\ncost.push_back(cost_element7);\n/* element #8 : null value -> no code */\ncost.push_back(cost_element8);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minCostClimbingStairs_vector_int_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minCostClimbingStairs(cost);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\Solution\\\\minCostClimbingStairs(vector<int>&)\");\n\n\nvector<int> EXPECTED_cost;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 746 Min Cost Climbing Stairs.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\n/* element #0 : null value -> no code */\ncost.push_back(cost_element0);\n/* element #1 : null value -> no code */\ncost.push_back(cost_element1);\n/* element #2 : null value -> no code */\ncost.push_back(cost_element2);\n/* element #3 : null value -> no code */\ncost.push_back(cost_element3);\n/* element #4 : null value -> no code */\ncost.push_back(cost_element4);\n/* element #5 : null value -> no code */\ncost.push_back(cost_element5);\n/* element #6 : null value -> no code */\ncost.push_back(cost_element6);\n/* element #7 : null value -> no code */\ncost.push_back(cost_element7);\n/* element #8 : null value -> no code */\ncost.push_back(cost_element8);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int minCostClimbingStairs(vector<int>& cost) {\r         vector<int> dp(2);\r         for (int i = 0; i < cost.size(); i++) {\r             dp[i % 2] = min(dp[0], dp[1]) + cost[i];\r         }\r         return min(dp[0], dp[1]);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json55\\LeetCode 746 Min Cost Climbing Stairs.cpp\\Solution\\minCostClimbingStairs(vector<int>&)"
    },
    {
        "f": [],
        "fm": "int dominantIndex(vector<int>& nums) {\r         int max_idx = 0;\r         for (int i = 0; i < nums.size(); i++) {\r             if (nums[i] > nums[max_idx]) {\r                 max_idx = i;\r             }\r         }\r         for (int i = 0; i < nums.size(); i++) {\r             if (i != max_idx && nums[i] * 2 > nums[max_idx]) {\r                 return -1;\r             }\r         }\r         return max_idx;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "dominantIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "229"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "396"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_dominantIndex_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_dominantIndex_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=229;\nnums.push_back(nums_element0);\nint nums_element1=396;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dominantIndex_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->dominantIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\Solution\\\\dominantIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=229;\nnums.push_back(nums_element0);\nint nums_element1=396;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "dominantIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 8,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "nums_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_dominantIndex_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_dominantIndex_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dominantIndex_vector_int_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->dominantIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\Solution\\\\dominantIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "dominantIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 4,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_dominantIndex_vector_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_dominantIndex_vector_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dominantIndex_vector_int_directed_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->dominantIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\Solution\\\\dominantIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "dominantIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 6,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_dominantIndex_vector_int_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_dominantIndex_vector_int_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dominantIndex_vector_int_directed_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->dominantIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\Solution\\\\dominantIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "dominantIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 9,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "nums_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #8",
                                            "virtual_name": "nums_element8",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #8",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_dominantIndex_vector_int_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_dominantIndex_vector_int_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dominantIndex_vector_int_directed_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->dominantIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\Solution\\\\dominantIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "dominantIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "-678"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "573"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_dominantIndex_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_dominantIndex_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-678;\nnums.push_back(nums_element0);\nint nums_element1=573;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dominantIndex_vector_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->dominantIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\Solution\\\\dominantIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-678;\nnums.push_back(nums_element0);\nint nums_element1=573;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "dominantIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 7,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_dominantIndex_vector_int_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_dominantIndex_vector_int_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dominantIndex_vector_int_directed_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->dominantIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\Solution\\\\dominantIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "dominantIndex(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 5,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_dominantIndex_vector_int_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_dominantIndex_vector_int_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dominantIndex_vector_int_directed_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->dominantIndex(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\Solution\\\\dominantIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int dominantIndex(vector<int>& nums) {\r         int max_idx = 0;\r         for (int i = 0; i < nums.size(); i++) {\r             if (nums[i] > nums[max_idx]) {\r                 max_idx = i;\r             }\r         }\r         for (int i = 0; i < nums.size(); i++) {\r             if (i != max_idx && nums[i] * 2 > nums[max_idx]) {\r                 return -1;\r             }\r         }\r         return max_idx;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json55\\LeetCode 747 Largest Number At Least Twice of Others.cpp\\Solution\\dominantIndex(vector<int>&)"
    },
    {
        "f": [],
        "fm": "string shortestCompletingWord(string licensePlate, vector<string>& words) {\r         vector<int> ht1(26);\r         for (char ch : licensePlate) {\r             if (isalpha(ch)) {\r                 ht1[tolower(ch) - 'a']++;\r             }\r         }\r         \r         int wi = -1;\r         for (int i = 0, j; i < words.size(); i++) {\r             if (wi != -1 && words[i].size() >= words[wi].size()) {\r                 continue;\r             }\r             \r             vector<int> ht2(26);\r             for (char ch : words[i]) {\r                 ht2[ch - 'a']++;\r             }\r             \r             for (j = 0; j < 26; j++) {\r                 if (ht1[j] > ht2[j]) {\r                     break;\r                 }\r             }\r             if (j >= 26) {\r                 wi = i;\r             }\r         }\r         return words[wi];\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 748 Shortest Completing Word.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "shortestCompletingWord(string,vector<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "EXPECTED_words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "licensePlate",
                                    "virtual_name": "EXPECTED_licensePlate",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)\\licensePlate",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "licensePlate",
                                    "virtual_name": "licensePlate",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)\\licensePlate",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "licensePlate[0]",
                                            "virtual_name": "licensePlate[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)\\licensePlate\\licensePlate[0]",
                                            "correspondingType": "char",
                                            "value": "-16"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "words",
                                    "virtual_name": "words",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)\\words",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "words_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)\\words\\element #0",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "words_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)\\words\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "55"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "words_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)\\words\\element #1",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "words_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)\\words\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "-37"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_shortestCompletingWord_string_vector_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_shortestCompletingWord_string_vector_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 748 Shortest Completing Word.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName235544 = new char[2];akaRandomName235544[0] = -16;akaRandomName235544[1] = '\\0';string licensePlate=akaRandomName235544;\nvector<string> words;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode licensePlate */\n/* VectorDataNode words */\nchar* akaRandomName334124 = new char[2];akaRandomName334124[0] = 55;akaRandomName334124[1] = '\\0';string words_element0=akaRandomName334124;\nwords.push_back(words_element0);\nchar* akaRandomName151048 = new char[2];akaRandomName151048[0] = -37;akaRandomName151048[1] = '\\0';string words_element1=akaRandomName151048;\nwords.push_back(words_element1);\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_shortestCompletingWord_string_vector_string_random_4\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->shortestCompletingWord(licensePlate,words);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json55\\\\LeetCode 748 Shortest Completing Word.cpp\\\\Solution\\\\shortestCompletingWord(string,vector<string>&)\");\n\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 748 Shortest Completing Word.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName425942 = new char[2];akaRandomName425942[0] = -16;akaRandomName425942[1] = '\\0';string licensePlate=akaRandomName425942;\nvector<string> words;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode licensePlate */\n/* VectorDataNode words */\nchar* akaRandomName83421 = new char[2];akaRandomName83421[0] = 55;akaRandomName83421[1] = '\\0';string words_element0=akaRandomName83421;\nwords.push_back(words_element0);\nchar* akaRandomName411017 = new char[2];akaRandomName411017[0] = -37;akaRandomName411017[1] = '\\0';string words_element1=akaRandomName411017;\nwords.push_back(words_element1);\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     string shortestCompletingWord(string licensePlate, vector<string>& words) {\r         vector<int> ht1(26);\r         for (char ch : licensePlate) {\r             if (isalpha(ch)) {\r                 ht1[tolower(ch) - 'a']++;\r             }\r         }\r         \r         int wi = -1;\r         for (int i = 0, j; i < words.size(); i++) {\r             if (wi != -1 && words[i].size() >= words[wi].size()) {\r                 continue;\r             }\r             \r             vector<int> ht2(26);\r             for (char ch : words[i]) {\r                 ht2[ch - 'a']++;\r             }\r             \r             for (j = 0; j < 26; j++) {\r                 if (ht1[j] > ht2[j]) {\r                     break;\r                 }\r             }\r             if (j >= 26) {\r                 wi = i;\r             }\r         }\r         return words[wi];\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json55\\LeetCode 748 Shortest Completing Word.cpp\\Solution\\shortestCompletingWord(string,vector<string>&)"
    }
]
[
    {
        "f": [],
        "fm": "TreeNode* constructMaximumBinaryTree(vector<int>& nums) {\r         return construct(nums, 0, nums.size());\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 654 Maximum Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "constructMaximumBinaryTree(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "TreeNode*",
                            "realType": "TreeNode*",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "103"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "-62"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)\\RETURN",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_constructMaximumBinaryTree_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_constructMaximumBinaryTree_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=103;\nnums.push_back(nums_element0);\nint nums_element1=-62;\nnums.push_back(nums_element1);\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_constructMaximumBinaryTree_vector_int_random_3\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->constructMaximumBinaryTree(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json53\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\Solution\\\\constructMaximumBinaryTree(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=103;\nnums.push_back(nums_element0);\nint nums_element1=-62;\nnums.push_back(nums_element1);\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 654 Maximum Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "constructMaximumBinaryTree(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "TreeNode*",
                            "realType": "TreeNode*",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "-678"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "-74"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)\\RETURN",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_constructMaximumBinaryTree_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_constructMaximumBinaryTree_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-678;\nnums.push_back(nums_element0);\nint nums_element1=-74;\nnums.push_back(nums_element1);\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_constructMaximumBinaryTree_vector_int_random_0\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->constructMaximumBinaryTree(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json53\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\Solution\\\\constructMaximumBinaryTree(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-678;\nnums.push_back(nums_element0);\nint nums_element1=-74;\nnums.push_back(nums_element1);\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     TreeNode* constructMaximumBinaryTree(vector<int>& nums) {\r         return construct(nums, 0, nums.size());\r     }\r     \r private:\r     TreeNode * construct(vector<int> &nums, int begin, int end) {\r         if (begin >= end) return NULL;\r         int cut = begin;\r         for (int i = begin + 1; i < end; i++) {\r             if (nums[i] > nums[cut]) {\r                 cut = i;\r             }\r         }\r         TreeNode *root = new TreeNode(nums[cut]);\r         root->left  = construct(nums, begin, cut);\r         root->right = construct(nums, cut + 1, end);\r         return root;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\constructMaximumBinaryTree(vector<int>&)"
    },
    {
        "f": [],
        "fm": "TreeNode * construct(vector<int> &nums, int begin, int end) {\r         if (begin >= end) return NULL;\r         int cut = begin;\r         for (int i = begin + 1; i < end; i++) {\r             if (nums[i] > nums[cut]) {\r                 cut = i;\r             }\r         }\r         TreeNode *root = new TreeNode(nums[cut]);\r         root->left  = construct(nums, begin, cut);\r         root->right = construct(nums, cut + 1, end);\r         return root;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 654 Maximum Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "construct(vector<int>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "TreeNode*",
                            "realType": "TreeNode*",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "end",
                                    "virtual_name": "EXPECTED_end",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\end",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "begin",
                                    "virtual_name": "EXPECTED_begin",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\begin",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "begin",
                                    "virtual_name": "begin",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\begin",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "end",
                                    "virtual_name": "end",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\end",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\RETURN",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_construct_vector_int_int_int_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_construct_vector_int_int_int_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint begin=0;\n\n\nint end=0;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* NormalNumberDataNode begin */\n/* NormalNumberDataNode end */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_construct_vector_int_int_int_directed_3\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->construct(nums,begin,end);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json53\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\Solution\\\\construct(vector<int>&,int,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint begin=0;\n\n\nint end=0;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* NormalNumberDataNode begin */\n/* NormalNumberDataNode end */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 654 Maximum Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "construct(vector<int>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "TreeNode*",
                            "realType": "TreeNode*",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "begin",
                                    "virtual_name": "EXPECTED_begin",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\begin",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "end",
                                    "virtual_name": "EXPECTED_end",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\end",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "begin",
                                    "virtual_name": "begin",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\begin",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "end",
                                    "virtual_name": "end",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\end",
                                    "correspondingType": "int",
                                    "value": "5"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\RETURN",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_construct_vector_int_int_int_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_construct_vector_int_int_int_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint begin=0;\n\n\nint end=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* NormalNumberDataNode begin */\n/* NormalNumberDataNode end */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_construct_vector_int_int_int_directed_4\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->construct(nums,begin,end);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json53\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\Solution\\\\construct(vector<int>&,int,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint begin=0;\n\n\nint end=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* NormalNumberDataNode begin */\n/* NormalNumberDataNode end */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 654 Maximum Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "construct(vector<int>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "TreeNode*",
                            "realType": "TreeNode*",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "begin",
                                    "virtual_name": "EXPECTED_begin",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\begin",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "end",
                                    "virtual_name": "EXPECTED_end",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\end",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "begin",
                                    "virtual_name": "begin",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\begin",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "end",
                                    "virtual_name": "end",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\end",
                                    "correspondingType": "int",
                                    "value": "8"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\RETURN",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_construct_vector_int_int_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_construct_vector_int_int_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint begin=0;\n\n\nint end=8;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* NormalNumberDataNode begin */\n/* NormalNumberDataNode end */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_construct_vector_int_int_int_directed_1\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->construct(nums,begin,end);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json53\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\Solution\\\\construct(vector<int>&,int,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint begin=0;\n\n\nint end=8;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* NormalNumberDataNode begin */\n/* NormalNumberDataNode end */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 654 Maximum Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "construct(vector<int>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "TreeNode*",
                            "realType": "TreeNode*",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "end",
                                    "virtual_name": "EXPECTED_end",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\end",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "begin",
                                    "virtual_name": "EXPECTED_begin",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\begin",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "begin",
                                    "virtual_name": "begin",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\begin",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "end",
                                    "virtual_name": "end",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\end",
                                    "correspondingType": "int",
                                    "value": "9"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)\\RETURN",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_construct_vector_int_int_int_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_construct_vector_int_int_int_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint begin=0;\n\n\nint end=9;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* NormalNumberDataNode begin */\n/* NormalNumberDataNode end */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_construct_vector_int_int_int_directed_2\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->construct(nums,begin,end);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json53\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\Solution\\\\construct(vector<int>&,int,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint begin=0;\n\n\nint end=9;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* NormalNumberDataNode begin */\n/* NormalNumberDataNode end */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     TreeNode* constructMaximumBinaryTree(vector<int>& nums) {\r         return construct(nums, 0, nums.size());\r     }\r     \r private:\r     TreeNode * construct(vector<int> &nums, int begin, int end) {\r         if (begin >= end) return NULL;\r         int cut = begin;\r         for (int i = begin + 1; i < end; i++) {\r             if (nums[i] > nums[cut]) {\r                 cut = i;\r             }\r         }\r         TreeNode *root = new TreeNode(nums[cut]);\r         root->left  = construct(nums, begin, cut);\r         root->right = construct(nums, cut + 1, end);\r         return root;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\Solution\\construct(vector<int>&,int,int)"
    },
    {
        "f": [],
        "fm": "TreeNode(int x) : val(x), left(NULL), right(NULL) {}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 654 Maximum Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___TreeNode",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode",
                                    "dataType": "::TreeNode",
                                    "realType": "::TreeNode",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___TreeNode",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode",
                                            "dataType": "::TreeNode",
                                            "realType": "::TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                            "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                            "rawType": "::TreeNode",
                                            "selectedConstructor": "TreeNode(int)",
                                            "variableType": "::TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "TreeNode(int)",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "left",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode->left",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\left",
                                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                                    "level": 1
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "right",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode->right",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\right",
                                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___TreeNode",
                                    "virtual_name": "AKA_INSTANCE___TreeNode",
                                    "dataType": "::TreeNode",
                                    "realType": "::TreeNode",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___TreeNode",
                                            "virtual_name": "AKA_INSTANCE___TreeNode",
                                            "dataType": "::TreeNode",
                                            "realType": "::TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                            "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                            "rawType": "::TreeNode",
                                            "selectedConstructor": "TreeNode(int)",
                                            "variableType": "::TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "TreeNode(int)",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "AKA_INSTANCE___TreeNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "-624"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "left",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode->left",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\left",
                                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                                    "level": 1
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "right",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode->right",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\right",
                                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "TreeNode(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\TreeNode(int)"
                        }
                    ]
                },
                "td": "void AKA_TEST_TreeNode_int_random_0(void) {\n{\nAKA_test_case_name=\"TreeNode_int_random_0\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=-624;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_0\");AKA_mark(\"Calling: .\\\\json53\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=-624;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_0\");AKA_mark(\"Calling: .\\\\json53\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\TreeNode(int)"
    },
    {
        "f": [],
        "fm": "TreeNode(int x) : val(x), left(NULL), right(NULL) {}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 655 Print Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 655 Print Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___TreeNode",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode",
                                    "dataType": "::TreeNode",
                                    "realType": "::TreeNode",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                    "correspondingType": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___TreeNode",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode",
                                            "dataType": "::TreeNode",
                                            "realType": "::TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                            "correspondingType": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode",
                                            "rawType": "::TreeNode",
                                            "selectedConstructor": "TreeNode(int)",
                                            "variableType": "::TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "TreeNode(int)",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "functionNode": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "left",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode->left",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\left",
                                                    "correspondingType": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode",
                                                    "level": 1
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "right",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode->right",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\right",
                                                    "correspondingType": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___TreeNode",
                                    "virtual_name": "AKA_INSTANCE___TreeNode",
                                    "dataType": "::TreeNode",
                                    "realType": "::TreeNode",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                    "correspondingType": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___TreeNode",
                                            "virtual_name": "AKA_INSTANCE___TreeNode",
                                            "dataType": "::TreeNode",
                                            "realType": "::TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                            "correspondingType": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode",
                                            "rawType": "::TreeNode",
                                            "selectedConstructor": "TreeNode(int)",
                                            "variableType": "::TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "TreeNode(int)",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "functionNode": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "AKA_INSTANCE___TreeNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "-387"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "left",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode->left",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\left",
                                                    "correspondingType": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode",
                                                    "level": 1
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "right",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode->right",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\right",
                                                    "correspondingType": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "TreeNode(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\TreeNode(int)"
                        }
                    ]
                },
                "td": "void AKA_TEST_TreeNode_int_random_5(void) {\n{\nAKA_test_case_name=\"TreeNode_int_random_5\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=-387;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_5\");AKA_mark(\"Calling: .\\\\json53\\\\LeetCode 655 Print Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 655 Print Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=-387;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_5\");AKA_mark(\"Calling: .\\\\json53\\\\LeetCode 655 Print Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 655 Print Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json53\\LeetCode 655 Print Binary Tree.cpp\\TreeNode\\TreeNode(int)"
    },
    {
        "f": [],
        "fm": "vector<vector<string>> printTree(TreeNode* root) {\r         int m = maxDepth(root);\r         int n = (1 << m) - 1;\r         vector<vector<string>> ans(m, vector<string>(n));\r         dfs(ans, root, 0, n, 0);\r         return ans;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 655 Print Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 655 Print Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\printTree(TreeNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "printTree(TreeNode*)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<string>>",
                            "realType": "vector<vector<string>>",
                            "functionNode": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\printTree(TreeNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "EXPECTED_root",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\printTree(TreeNode*)\\root",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\printTree(TreeNode*)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "root",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\printTree(TreeNode*)\\root",
                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                    "level": 1,
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "root[0]",
                                            "virtual_name": "root[0]",
                                            "dataType": "TreeNode",
                                            "realType": "TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\printTree(TreeNode*)\\root\\root[0]",
                                            "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "root",
                                                    "virtual_name": "root[0]",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\printTree(TreeNode*)\\root\\root",
                                                    "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                                    "rawType": "::TreeNode",
                                                    "selectedConstructor": "TreeNode(int)",
                                                    "variableType": "::TreeNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "TreeNode(int)",
                                                            "virtual_name": "root[0]",
                                                            "dataType": "::TreeNode",
                                                            "realType": "::TreeNode",
                                                            "functionNode": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "root0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "633"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "root[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "left",
                                                            "virtual_name": "root[0].left",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\left",
                                                            "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                                            "level": 1
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "right",
                                                            "virtual_name": "root[0].right",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode\\right",
                                                            "correspondingType": ".\\json53\\LeetCode 654 Maximum Binary Tree.cpp\\TreeNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<string>>",
                                    "realType": "vector<vector<string>>",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\printTree(TreeNode*)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<string>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_printTree_TreeNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_printTree_TreeNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 655 Print Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=633;\nAKA_mark(\"Calling: .\\\\json53\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 655 Print Binary Tree.cpp\\\\printTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<string>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_printTree_TreeNodemul_random_3\");vector<vector<string>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->printTree(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json53\\\\LeetCode 655 Print Binary Tree.cpp\\\\Solution\\\\printTree(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 655 Print Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=633;\nAKA_mark(\"Calling: .\\\\json53\\\\LeetCode 654 Maximum Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 655 Print Binary Tree.cpp\\\\printTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<string>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<vector<string>> printTree(TreeNode* root) {\r         int m = maxDepth(root);\r         int n = (1 << m) - 1;\r         vector<vector<string>> ans(m, vector<string>(n));\r         dfs(ans, root, 0, n, 0);\r         return ans;\r     }\r     \r private:\r     int maxDepth(TreeNode* root) {\r         if (!root) return 0;\r         return max(maxDepth(root->left), maxDepth(root->right)) + 1;\r     }\r     \r     void dfs(vector<vector<string>> &ans, TreeNode *root, int begin, int end, int row) {\r         if (!root) return;\r         int col = (begin + end) / 2;\r         ans[row][col] = to_string(root->val);\r         dfs(ans, root->left, begin, col, row + 1);\r         dfs(ans, root->right, col, end, row + 1);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\printTree(TreeNode*)"
    },
    {
        "f": [],
        "fm": "int maxDepth(TreeNode* root) {\r         if (!root) return 0;\r         return max(maxDepth(root->left), maxDepth(root->right)) + 1;\r     }",
        "datatest": [],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<vector<string>> printTree(TreeNode* root) {\r         int m = maxDepth(root);\r         int n = (1 << m) - 1;\r         vector<vector<string>> ans(m, vector<string>(n));\r         dfs(ans, root, 0, n, 0);\r         return ans;\r     }\r     \r private:\r     int maxDepth(TreeNode* root) {\r         if (!root) return 0;\r         return max(maxDepth(root->left), maxDepth(root->right)) + 1;\r     }\r     \r     void dfs(vector<vector<string>> &ans, TreeNode *root, int begin, int end, int row) {\r         if (!root) return;\r         int col = (begin + end) / 2;\r         ans[row][col] = to_string(root->val);\r         dfs(ans, root->left, begin, col, row + 1);\r         dfs(ans, root->right, col, end, row + 1);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\maxDepth(TreeNode*)"
    },
    {
        "f": [],
        "fm": "void dfs(vector<vector<string>> &ans, TreeNode *root, int begin, int end, int row) {\r         if (!root) return;\r         int col = (begin + end) / 2;\r         ans[row][col] = to_string(root->val);\r         dfs(ans, root->left, begin, col, row + 1);\r         dfs(ans, root->right, col, end, row + 1);\r     }",
        "datatest": [],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<vector<string>> printTree(TreeNode* root) {\r         int m = maxDepth(root);\r         int n = (1 << m) - 1;\r         vector<vector<string>> ans(m, vector<string>(n));\r         dfs(ans, root, 0, n, 0);\r         return ans;\r     }\r     \r private:\r     int maxDepth(TreeNode* root) {\r         if (!root) return 0;\r         return max(maxDepth(root->left), maxDepth(root->right)) + 1;\r     }\r     \r     void dfs(vector<vector<string>> &ans, TreeNode *root, int begin, int end, int row) {\r         if (!root) return;\r         int col = (begin + end) / 2;\r         ans[row][col] = to_string(root->val);\r         dfs(ans, root->left, begin, col, row + 1);\r         dfs(ans, root->right, col, end, row + 1);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json53\\LeetCode 655 Print Binary Tree.cpp\\Solution\\dfs(vector<vector<string>>&,TreeNode*,int,int,int)"
    },
    {
        "f": [],
        "fm": "bool judgeCircle(string moves) {\r         int x = 0, y = 0;\r         for (char move : moves) {\r             switch (move) {\r             case 'U':\r                 y++;\r                 break;\r             case 'R':\r                 x++;\r                 break;\r             case 'D':\r                 y--;\r                 break;\r             case 'L':\r                 x--;\r             }\r         }\r         return x == 0 && y == 0;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 657 Robot Return to Origin.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution\\judgeCircle(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "judgeCircle(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution\\judgeCircle(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "moves",
                                    "virtual_name": "EXPECTED_moves",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution\\judgeCircle(string)\\moves",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution\\judgeCircle(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "moves",
                                    "virtual_name": "moves",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution\\judgeCircle(string)\\moves",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "moves[0]",
                                            "virtual_name": "moves[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution\\judgeCircle(string)\\moves\\moves[0]",
                                            "correspondingType": "char",
                                            "value": "-97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution\\judgeCircle(string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_judgeCircle_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_judgeCircle_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 657 Robot Return to Origin.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName448377 = new char[2];akaRandomName448377[0] = -97;akaRandomName448377[1] = '\\0';string moves=akaRandomName448377;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode moves */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_judgeCircle_string_random_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->judgeCircle(moves);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json53\\\\LeetCode 657 Robot Return to Origin.cpp\\\\Solution\\\\judgeCircle(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 657 Robot Return to Origin.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName45789 = new char[2];akaRandomName45789[0] = -97;akaRandomName45789[1] = '\\0';string moves=akaRandomName45789;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode moves */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool judgeCircle(string moves) {\r         int x = 0, y = 0;\r         for (char move : moves) {\r             switch (move) {\r             case 'U':\r                 y++;\r                 break;\r             case 'R':\r                 x++;\r                 break;\r             case 'D':\r                 y--;\r                 break;\r             case 'L':\r                 x--;\r             }\r         }\r         return x == 0 && y == 0;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json53\\LeetCode 657 Robot Return to Origin.cpp\\Solution\\judgeCircle(string)"
    },
    {
        "f": [],
        "fm": "int repeatedStringMatch(string A, string B) {\r         int as = A.size(), bs = B.size();\r         string nA = A;\r         while (nA.size() < as + bs) {\r             nA += A;\r         }\r         int i = nA.find(B);\r         return i != -1 ? (i + bs - 1) / as + 1 : -1;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 686 Repeated String Match.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 686 Repeated String Match.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\repeatedStringMatch(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "repeatedStringMatch(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\repeatedStringMatch(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "B",
                                    "virtual_name": "EXPECTED_B",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\repeatedStringMatch(string,string)\\B",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "A",
                                    "virtual_name": "EXPECTED_A",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\repeatedStringMatch(string,string)\\A",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\repeatedStringMatch(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "A",
                                    "virtual_name": "A",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\repeatedStringMatch(string,string)\\A",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "A[0]",
                                            "virtual_name": "A[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\repeatedStringMatch(string,string)\\A\\A[0]",
                                            "correspondingType": "char",
                                            "value": "-107"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "B",
                                    "virtual_name": "B",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\repeatedStringMatch(string,string)\\B",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "B[0]",
                                            "virtual_name": "B[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\repeatedStringMatch(string,string)\\B\\B[0]",
                                            "correspondingType": "char",
                                            "value": "-27"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\repeatedStringMatch(string,string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_repeatedStringMatch_string_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_repeatedStringMatch_string_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 686 Repeated String Match.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName427589 = new char[2];akaRandomName427589[0] = -107;akaRandomName427589[1] = '\\0';string A=akaRandomName427589;\nchar* akaRandomName248995 = new char[2];akaRandomName248995[0] = -27;akaRandomName248995[1] = '\\0';string B=akaRandomName248995;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode A */\n/* NormalStringDataNode B */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_repeatedStringMatch_string_string_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->repeatedStringMatch(A,B);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json53\\\\LeetCode 686 Repeated String Match.cpp\\\\Solution\\\\repeatedStringMatch(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 686 Repeated String Match.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName344129 = new char[2];akaRandomName344129[0] = -107;akaRandomName344129[1] = '\\0';string A=akaRandomName344129;\nchar* akaRandomName371581 = new char[2];akaRandomName371581[0] = -27;akaRandomName371581[1] = '\\0';string B=akaRandomName371581;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode A */\n/* NormalStringDataNode B */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int repeatedStringMatch(string A, string B) {\r         int as = A.size(), bs = B.size();\r         string nA = A;\r         while (nA.size() < as + bs) {\r             nA += A;\r         }\r         int i = nA.find(B);\r         return i != -1 ? (i + bs - 1) / as + 1 : -1;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json53\\LeetCode 686 Repeated String Match.cpp\\Solution\\repeatedStringMatch(string,string)"
    },
    {
        "f": [],
        "fm": "int getImportance(vector<Employee*> employees, int id) {\r         unordered_map<int, Employee *> m;\r         for (Employee *e : employees) {\r             m[e->id] = e;\r         }\r         return dfs(m, id);\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 690 Employee Importance.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 690 Employee Importance.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "getImportance(vector<Employee*>,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "id",
                                    "virtual_name": "EXPECTED_id",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)\\id",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "employees",
                                    "virtual_name": "EXPECTED_employees",
                                    "dataType": "vector<Employee*>",
                                    "realType": "vector<Employee*>",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)\\employees",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "Employee*"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "employees",
                                    "virtual_name": "employees",
                                    "dataType": "vector<Employee*>",
                                    "realType": "vector<Employee*>",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)\\employees",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "Employee*",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                            "name": "element #0",
                                            "virtual_name": "employees_element0",
                                            "dataType": "Employee*",
                                            "realType": "Employee*",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)\\employees\\element #0",
                                            "correspondingType": "",
                                            "level": 1
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "id",
                                    "virtual_name": "id",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)\\id",
                                    "correspondingType": "int",
                                    "value": "576"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_getImportance_vector_Employeemul_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_getImportance_vector_Employeemul_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 690 Employee Importance.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<Employee*> employees;\n\n\nint id=576;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode employees */\nEmployee* employees_element0;\nemployees.push_back(employees_element0);\n/* NormalNumberDataNode id */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_getImportance_vector_Employeemul_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->getImportance(employees,id);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json53\\\\LeetCode 690 Employee Importance.cpp\\\\Solution\\\\getImportance(vector<Employee*>,int)\");\n\n\nvector<Employee*> EXPECTED_employees;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 690 Employee Importance.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<Employee*> employees;\n\n\nint id=576;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode employees */\nEmployee* employees_element0;\nemployees.push_back(employees_element0);\n/* NormalNumberDataNode id */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 690 Employee Importance.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json53\\LeetCode 690 Employee Importance.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "getImportance(vector<Employee*>,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "employees",
                                    "virtual_name": "EXPECTED_employees",
                                    "dataType": "vector<Employee*>",
                                    "realType": "vector<Employee*>",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)\\employees",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "Employee*"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "id",
                                    "virtual_name": "EXPECTED_id",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)\\id",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "employees",
                                    "virtual_name": "employees",
                                    "dataType": "vector<Employee*>",
                                    "realType": "vector<Employee*>",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)\\employees",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "Employee*"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "id",
                                    "virtual_name": "id",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)\\id",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_getImportance_vector_Employeemul_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_getImportance_vector_Employeemul_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 690 Employee Importance.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<Employee*> employees;\n\n\nint id=0;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode employees */\n/* NormalNumberDataNode id */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_getImportance_vector_Employeemul_int_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->getImportance(employees,id);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json53\\\\LeetCode 690 Employee Importance.cpp\\\\Solution\\\\getImportance(vector<Employee*>,int)\");\n\n\nvector<Employee*> EXPECTED_employees;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 690 Employee Importance.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<Employee*> employees;\n\n\nint id=0;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode employees */\n/* NormalNumberDataNode id */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int getImportance(vector<Employee*> employees, int id) {\r         unordered_map<int, Employee *> m;\r         for (Employee *e : employees) {\r             m[e->id] = e;\r         }\r         return dfs(m, id);\r     }\r     \r private:\r     int dfs(unordered_map<int, Employee *> &m, int id) {\r         int ans = m[id]->importance;\r         for (int sub : m[id]->subordinates) {\r             ans += dfs(m, sub);\r         }\r         return ans;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\getImportance(vector<Employee*>,int)"
    },
    {
        "f": [],
        "fm": "int dfs(unordered_map<int, Employee *> &m, int id) {\r         int ans = m[id]->importance;\r         for (int sub : m[id]->subordinates) {\r             ans += dfs(m, sub);\r         }\r         return ans;\r     }",
        "datatest": [],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int getImportance(vector<Employee*> employees, int id) {\r         unordered_map<int, Employee *> m;\r         for (Employee *e : employees) {\r             m[e->id] = e;\r         }\r         return dfs(m, id);\r     }\r     \r private:\r     int dfs(unordered_map<int, Employee *> &m, int id) {\r         int ans = m[id]->importance;\r         for (int sub : m[id]->subordinates) {\r             ans += dfs(m, sub);\r         }\r         return ans;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json53\\LeetCode 690 Employee Importance.cpp\\Solution\\dfs(unordered_map<int,Employee*>&,int)"
    }
]
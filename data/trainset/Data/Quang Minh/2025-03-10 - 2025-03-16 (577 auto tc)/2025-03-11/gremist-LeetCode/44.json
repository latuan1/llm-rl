[
    {
        "f": [],
        "fm": "int findDuplicate(vector<int>& nums) {\r         sort(nums.begin(), nums.end());\r         for (int i = 0; i < nums.size() - 1; i++) {\r             if (nums[i] == nums[i + 1]) {\r                 return nums[i];\r             }\r         }\r         throw logic_error(\"Unreachable code path\");\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 287 Find the Duplicate Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findDuplicate(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 5,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findDuplicate_vector_int_directed_7(void) {\n{\nAKA_test_case_name=\"Solution_findDuplicate_vector_int_directed_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDuplicate_vector_int_directed_7\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDuplicate(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\Solution\\\\findDuplicate(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 287 Find the Duplicate Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findDuplicate(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 6,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findDuplicate_vector_int_directed_6(void) {\n{\nAKA_test_case_name=\"Solution_findDuplicate_vector_int_directed_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDuplicate_vector_int_directed_6\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDuplicate(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\Solution\\\\findDuplicate(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 287 Find the Duplicate Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findDuplicate(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 6,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findDuplicate_vector_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_findDuplicate_vector_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDuplicate_vector_int_directed_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDuplicate(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\Solution\\\\findDuplicate(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 287 Find the Duplicate Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findDuplicate(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "-749889478"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "2123486876"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "1358158660"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findDuplicate_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_findDuplicate_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-749889478;\nnums.push_back(nums_element0);\nint nums_element1=2123486876;\nnums.push_back(nums_element1);\nint nums_element2=1358158660;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDuplicate_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDuplicate(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\Solution\\\\findDuplicate(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-749889478;\nnums.push_back(nums_element0);\nint nums_element1=2123486876;\nnums.push_back(nums_element1);\nint nums_element2=1358158660;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 287 Find the Duplicate Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findDuplicate(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 9,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "nums_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #8",
                                            "virtual_name": "nums_element8",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #8",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findDuplicate_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_findDuplicate_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDuplicate_vector_int_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDuplicate(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\Solution\\\\findDuplicate(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 287 Find the Duplicate Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findDuplicate(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 5,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findDuplicate_vector_int_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_findDuplicate_vector_int_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDuplicate_vector_int_directed_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDuplicate(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\Solution\\\\findDuplicate(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 287 Find the Duplicate Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findDuplicate(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 11,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "nums_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #8",
                                            "virtual_name": "nums_element8",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #8",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #9",
                                            "virtual_name": "nums_element9",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #9",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #10",
                                            "virtual_name": "nums_element10",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #10",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findDuplicate_vector_int_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_findDuplicate_vector_int_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* element #9 : null value -> no code */\nnums.push_back(nums_element9);\n/* element #10 : null value -> no code */\nnums.push_back(nums_element10);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDuplicate_vector_int_directed_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDuplicate(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\Solution\\\\findDuplicate(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* element #7 : null value -> no code */\nnums.push_back(nums_element7);\n/* element #8 : null value -> no code */\nnums.push_back(nums_element8);\n/* element #9 : null value -> no code */\nnums.push_back(nums_element9);\n/* element #10 : null value -> no code */\nnums.push_back(nums_element10);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 287 Find the Duplicate Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findDuplicate(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 7,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "nums_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "nums_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "nums_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findDuplicate_vector_int_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_findDuplicate_vector_int_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDuplicate_vector_int_directed_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDuplicate(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\Solution\\\\findDuplicate(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* element #4 : null value -> no code */\nnums.push_back(nums_element4);\n/* element #5 : null value -> no code */\nnums.push_back(nums_element5);\n/* element #6 : null value -> no code */\nnums.push_back(nums_element6);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 8,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 287 Find the Duplicate Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findDuplicate(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 4,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "nums_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\nums\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findDuplicate_vector_int_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_findDuplicate_vector_int_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDuplicate_vector_int_directed_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDuplicate(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\Solution\\\\findDuplicate(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 287 Find the Duplicate Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* element #0 : null value -> no code */\nnums.push_back(nums_element0);\n/* element #1 : null value -> no code */\nnums.push_back(nums_element1);\n/* element #2 : null value -> no code */\nnums.push_back(nums_element2);\n/* element #3 : null value -> no code */\nnums.push_back(nums_element3);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int findDuplicate(vector<int>& nums) {\r         sort(nums.begin(), nums.end());\r         for (int i = 0; i < nums.size() - 1; i++) {\r             if (nums[i] == nums[i + 1]) {\r                 return nums[i];\r             }\r         }\r         throw logic_error(\"Unreachable code path\");\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 287 Find the Duplicate Number.cpp\\Solution\\findDuplicate(vector<int>&)"
    },
    {
        "f": [],
        "fm": "bool wordPattern(string pattern, string str) {\r         unordered_map<char, int> pm;\r         unordered_map<string, int> sm;\r         istringstream iss(str);\r         int i = 0, ps = pattern.size();\r         for (string word; iss >> word; i++) {\r             if (i >= ps || pm[pattern[i]] != sm[word]) {\r                 return false;\r             }\r             pm[pattern[i]] = i + 1;\r             sm[word] = i + 1;\r         }\r         return i >= ps;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 290 Word Pattern.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 290 Word Pattern.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordPattern(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "5",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordPattern_string_string_directed_8(void) {\n{\nAKA_test_case_name=\"Solution_wordPattern_string_string_directed_8\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName316108 = new char[2];akaRandomName316108[0] = 0;akaRandomName316108[1] = '\\0';string pattern=akaRandomName316108;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordPattern_string_string_directed_8\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordPattern(pattern,str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 290 Word Pattern.cpp\\\\Solution\\\\wordPattern(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName408333 = new char[2];akaRandomName408333[0] = 0;akaRandomName408333[1] = '\\0';string pattern=akaRandomName408333;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 290 Word Pattern.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 290 Word Pattern.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordPattern(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "10",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[1]",
                                            "virtual_name": "pattern[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordPattern_string_string_directed_9(void) {\n{\nAKA_test_case_name=\"Solution_wordPattern_string_string_directed_9\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName188576 = new char[3];akaRandomName188576[0] = 0;akaRandomName188576[1] = 0;akaRandomName188576[2] = '\\0';string pattern=akaRandomName188576;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordPattern_string_string_directed_9\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordPattern(pattern,str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 290 Word Pattern.cpp\\\\Solution\\\\wordPattern(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName364409 = new char[3];akaRandomName364409[0] = 0;akaRandomName364409[1] = 0;akaRandomName364409[2] = '\\0';string pattern=akaRandomName364409;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 290 Word Pattern.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 290 Word Pattern.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordPattern(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "4",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordPattern_string_string_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_wordPattern_string_string_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName424592 = new char[2];akaRandomName424592[0] = 0;akaRandomName424592[1] = '\\0';string pattern=akaRandomName424592;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordPattern_string_string_directed_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordPattern(pattern,str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 290 Word Pattern.cpp\\\\Solution\\\\wordPattern(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName985448 = new char[2];akaRandomName985448[0] = 0;akaRandomName985448[1] = '\\0';string pattern=akaRandomName985448;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 290 Word Pattern.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 290 Word Pattern.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordPattern(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "7",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordPattern_string_string_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_wordPattern_string_string_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName182938 = new char[2];akaRandomName182938[0] = 0;akaRandomName182938[1] = '\\0';string pattern=akaRandomName182938;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordPattern_string_string_directed_5\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordPattern(pattern,str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 290 Word Pattern.cpp\\\\Solution\\\\wordPattern(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName850123 = new char[2];akaRandomName850123[0] = 0;akaRandomName850123[1] = '\\0';string pattern=akaRandomName850123;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 290 Word Pattern.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 290 Word Pattern.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordPattern(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "10",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[1]",
                                            "virtual_name": "pattern[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[1]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordPattern_string_string_directed_10(void) {\n{\nAKA_test_case_name=\"Solution_wordPattern_string_string_directed_10\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName572113 = new char[3];akaRandomName572113[0] = 0;akaRandomName572113[1] = 0;akaRandomName572113[2] = '\\0';string pattern=akaRandomName572113;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordPattern_string_string_directed_10\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordPattern(pattern,str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 290 Word Pattern.cpp\\\\Solution\\\\wordPattern(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName68742 = new char[3];akaRandomName68742[0] = 0;akaRandomName68742[1] = 0;akaRandomName68742[2] = '\\0';string pattern=akaRandomName68742;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 290 Word Pattern.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 290 Word Pattern.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordPattern(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordPattern_string_string_directed_6(void) {\n{\nAKA_test_case_name=\"Solution_wordPattern_string_string_directed_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName882919 = new char[2];akaRandomName882919[0] = 0;akaRandomName882919[1] = '\\0';string pattern=akaRandomName882919;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordPattern_string_string_directed_6\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordPattern(pattern,str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 290 Word Pattern.cpp\\\\Solution\\\\wordPattern(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName219388 = new char[2];akaRandomName219388[0] = 0;akaRandomName219388[1] = '\\0';string pattern=akaRandomName219388;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 290 Word Pattern.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 290 Word Pattern.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordPattern(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "4",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordPattern_string_string_directed_7(void) {\n{\nAKA_test_case_name=\"Solution_wordPattern_string_string_directed_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName703837 = new char[2];akaRandomName703837[0] = 0;akaRandomName703837[1] = '\\0';string pattern=akaRandomName703837;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordPattern_string_string_directed_7\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordPattern(pattern,str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 290 Word Pattern.cpp\\\\Solution\\\\wordPattern(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName314336 = new char[2];akaRandomName314336[0] = 0;akaRandomName314336[1] = '\\0';string pattern=akaRandomName314336;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 290 Word Pattern.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 290 Word Pattern.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordPattern(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "8",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordPattern_string_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_wordPattern_string_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName359696 = new char[2];akaRandomName359696[0] = 0;akaRandomName359696[1] = '\\0';string pattern=akaRandomName359696;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordPattern_string_string_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordPattern(pattern,str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 290 Word Pattern.cpp\\\\Solution\\\\wordPattern(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName543245 = new char[2];akaRandomName543245[0] = 0;akaRandomName543245[1] = '\\0';string pattern=akaRandomName543245;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 8,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 290 Word Pattern.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 290 Word Pattern.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordPattern(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "9",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordPattern_string_string_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_wordPattern_string_string_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName204874 = new char[2];akaRandomName204874[0] = 0;akaRandomName204874[1] = '\\0';string pattern=akaRandomName204874;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordPattern_string_string_directed_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordPattern(pattern,str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 290 Word Pattern.cpp\\\\Solution\\\\wordPattern(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName899790 = new char[2];akaRandomName899790[0] = 0;akaRandomName899790[1] = '\\0';string pattern=akaRandomName899790;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 9,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 290 Word Pattern.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 290 Word Pattern.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordPattern(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "6",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordPattern_string_string_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_wordPattern_string_string_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName213129 = new char[2];akaRandomName213129[0] = 0;akaRandomName213129[1] = '\\0';string pattern=akaRandomName213129;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordPattern_string_string_directed_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordPattern(pattern,str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 290 Word Pattern.cpp\\\\Solution\\\\wordPattern(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName938167 = new char[2];akaRandomName938167[0] = 0;akaRandomName938167[1] = '\\0';string pattern=akaRandomName938167;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 10,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 290 Word Pattern.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 290 Word Pattern.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordPattern(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[0]",
                                            "correspondingType": "char",
                                            "value": "11"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "str[0]",
                                            "virtual_name": "str[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str\\str[0]",
                                            "correspondingType": "char",
                                            "value": "124"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordPattern_string_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_wordPattern_string_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName597660 = new char[2];akaRandomName597660[0] = 11;akaRandomName597660[1] = '\\0';string pattern=akaRandomName597660;\nchar* akaRandomName633857 = new char[2];akaRandomName633857[0] = 124;akaRandomName633857[1] = '\\0';string str=akaRandomName633857;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordPattern_string_string_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordPattern(pattern,str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 290 Word Pattern.cpp\\\\Solution\\\\wordPattern(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName299545 = new char[2];akaRandomName299545[0] = 11;akaRandomName299545[1] = '\\0';string pattern=akaRandomName299545;\nchar* akaRandomName445603 = new char[2];akaRandomName445603[0] = 124;akaRandomName445603[1] = '\\0';string str=akaRandomName445603;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 11,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 290 Word Pattern.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 290 Word Pattern.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "wordPattern(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "EXPECTED_str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\pattern\\pattern[0]",
                                            "correspondingType": "char",
                                            "value": "0"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "str",
                                    "virtual_name": "str",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\str",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_wordPattern_string_string_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_wordPattern_string_string_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName741151 = new char[2];akaRandomName741151[0] = 0;akaRandomName741151[1] = '\\0';string pattern=akaRandomName741151;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_wordPattern_string_string_directed_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->wordPattern(pattern,str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 290 Word Pattern.cpp\\\\Solution\\\\wordPattern(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 290 Word Pattern.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName322368 = new char[2];akaRandomName322368[0] = 0;akaRandomName322368[1] = '\\0';string pattern=akaRandomName322368;\nstring str=\"\";\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool wordPattern(string pattern, string str) {\r         unordered_map<char, int> pm;\r         unordered_map<string, int> sm;\r         istringstream iss(str);\r         int i = 0, ps = pattern.size();\r         for (string word; iss >> word; i++) {\r             if (i >= ps || pm[pattern[i]] != sm[word]) {\r                 return false;\r             }\r             pm[pattern[i]] = i + 1;\r             sm[word] = i + 1;\r         }\r         return i >= ps;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 290 Word Pattern.cpp\\Solution\\wordPattern(string,string)"
    },
    {
        "f": [],
        "fm": "bool canWinNim(int n) {\r         return n % 4;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 292 Nim Game.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 292 Nim Game.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 292 Nim Game.cpp\\Solution\\canWinNim(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 292 Nim Game.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 292 Nim Game.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 292 Nim Game.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 292 Nim Game.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 292 Nim Game.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 292 Nim Game.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "canWinNim(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 292 Nim Game.cpp\\Solution\\canWinNim(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 292 Nim Game.cpp\\Solution\\canWinNim(int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 292 Nim Game.cpp\\Solution\\canWinNim(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 292 Nim Game.cpp\\Solution\\canWinNim(int)\\n",
                                    "correspondingType": "int",
                                    "value": "473988872"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 292 Nim Game.cpp\\Solution\\canWinNim(int)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_canWinNim_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_canWinNim_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 292 Nim Game.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=473988872;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_canWinNim_int_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->canWinNim(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 292 Nim Game.cpp\\\\Solution\\\\canWinNim(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 292 Nim Game.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=473988872;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool canWinNim(int n) {\r         return n % 4;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 292 Nim Game.cpp\\Solution\\canWinNim(int)"
    },
    {
        "f": [
            "priority_queue<int> lo;",
            "priority_queue<int, vector<int>, greater<int>> hi;"
        ],
        "fm": "MedianFinder() {\r         \r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 295 Find Median from Data Stream.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\MedianFinder()",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___MedianFinder",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___MedianFinder",
                                    "dataType": "::MedianFinder",
                                    "realType": "::MedianFinder",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                    "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___MedianFinder",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___MedianFinder",
                                            "dataType": "::MedianFinder",
                                            "realType": "::MedianFinder",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                            "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder",
                                            "rawType": "::MedianFinder",
                                            "selectedConstructor": "MedianFinder()",
                                            "variableType": "::MedianFinder",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "MedianFinder()",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___MedianFinder",
                                                    "dataType": "::MedianFinder",
                                                    "realType": "::MedianFinder",
                                                    "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\MedianFinder()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___MedianFinder",
                                    "virtual_name": "AKA_INSTANCE___MedianFinder",
                                    "dataType": "::MedianFinder",
                                    "realType": "::MedianFinder",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                    "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___MedianFinder",
                                            "virtual_name": "AKA_INSTANCE___MedianFinder",
                                            "dataType": "::MedianFinder",
                                            "realType": "::MedianFinder",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                            "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder",
                                            "rawType": "::MedianFinder",
                                            "selectedConstructor": "MedianFinder()",
                                            "variableType": "::MedianFinder",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "MedianFinder()",
                                                    "virtual_name": "AKA_INSTANCE___MedianFinder",
                                                    "dataType": "::MedianFinder",
                                                    "realType": "::MedianFinder",
                                                    "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\MedianFinder()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "MedianFinder()",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\MedianFinder()"
                        }
                    ]
                },
                "td": "void AKA_TEST_MedianFinder_MedianFinder_random_0(void) {\n{\nAKA_test_case_name=\"MedianFinder_MedianFinder_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___MedianFinder */\n/* ConstructorDataNode MedianFinder() */\nAKA_mark(\"<<PRE-CALLING>> Test MedianFinder_MedianFinder_random_0\");AKA_mark(\"Calling: .\\\\json44\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\MedianFinder\\\\MedianFinder()|ROOT\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\GLOBAL\\\\AKA_INSTANCE___MedianFinder\\\\AKA_INSTANCE___MedianFinder\\\\MedianFinder()\");AKA_fCall++;AKA_INSTANCE___MedianFinder = new ::MedianFinder();\n\n\n\n\n\n\n\n/* error assertion */\n\n\n/* SubClassDataNode AKA_INSTANCE___MedianFinder */\n/* ConstructorDataNode MedianFinder() */\nAKA_mark(\"<<PRE-CALLING>>\");AKA_mark(\"Calling: .\\\\json44\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\MedianFinder\\\\MedianFinder()|ROOT\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\GLOBAL\\\\AKA_INSTANCE___MedianFinder\\\\AKA_INSTANCE___MedianFinder\\\\MedianFinder()\");AKA_fCall++;auto EXPECTED_AKA_GLOBAL_AKA_INSTANCE___MedianFinder = new ::MedianFinder();\n\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___MedianFinder */\n/* ConstructorDataNode MedianFinder() */\nAKA_mark(\"<<PRE-CALLING>> Test MedianFinder_MedianFinder_random_0\");AKA_mark(\"Calling: .\\\\json44\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\MedianFinder\\\\MedianFinder()|ROOT\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\GLOBAL\\\\AKA_INSTANCE___MedianFinder\\\\AKA_INSTANCE___MedianFinder\\\\MedianFinder()\");AKA_fCall++;AKA_INSTANCE___MedianFinder = new ::MedianFinder();\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class MedianFinder {\r public:\r     /** initialize your data structure here. */\r     MedianFinder() {\r         \r     }\r     \r     void addNum(int num) {\r         lo.push(num);\r         \r         hi.push(lo.top());\r         lo.pop();\r     \r         if (lo.size() < hi.size()) {\r             lo.push(hi.top());\r             hi.pop();\r         }\r     }\r     \r     double findMedian() {\r         return lo.size() > hi.size() ? lo.top() : (lo.top() + hi.top()) / 2.0;\r     }\r \r private:\r     priority_queue<int> lo;\r     priority_queue<int, vector<int>, greater<int>> hi;\r };",
        "c": [
            "MedianFinder() {\r\n        \r\n    }"
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\MedianFinder()"
    },
    {
        "f": [
            "priority_queue<int> lo;",
            "priority_queue<int, vector<int>, greater<int>> hi;"
        ],
        "fm": "void addNum(int num) {\r         lo.push(num);\r         \r         hi.push(lo.top());\r         lo.pop();\r     \r         if (lo.size() < hi.size()) {\r             lo.push(hi.top());\r             hi.pop();\r         }\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 295 Find Median from Data Stream.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\addNum(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___MedianFinder",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___MedianFinder",
                                    "dataType": "::MedianFinder",
                                    "realType": "::MedianFinder",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                    "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___MedianFinder",
                                    "virtual_name": "AKA_INSTANCE___MedianFinder",
                                    "dataType": "::MedianFinder",
                                    "realType": "::MedianFinder",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                    "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___MedianFinder",
                                            "virtual_name": "AKA_INSTANCE___MedianFinder",
                                            "dataType": "::MedianFinder",
                                            "realType": "::MedianFinder",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                            "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder",
                                            "rawType": "::MedianFinder",
                                            "selectedConstructor": "MedianFinder()",
                                            "variableType": "::MedianFinder",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "MedianFinder()",
                                                    "virtual_name": "AKA_INSTANCE___MedianFinder",
                                                    "dataType": "::MedianFinder",
                                                    "realType": "::MedianFinder",
                                                    "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\MedianFinder()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "addNum(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\addNum(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "num",
                                    "virtual_name": "EXPECTED_num",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\addNum(int)\\num",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\addNum(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "num",
                                    "virtual_name": "num",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\addNum(int)\\num",
                                    "correspondingType": "int",
                                    "value": "0"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_MedianFinder_addNum_int_directed_0(void) {\n{\nAKA_test_case_name=\"MedianFinder_addNum_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___MedianFinder */\n/* ConstructorDataNode MedianFinder() */\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\MedianFinder\\\\MedianFinder()|ROOT\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\GLOBAL\\\\AKA_INSTANCE___MedianFinder\\\\AKA_INSTANCE___MedianFinder\\\\MedianFinder()\");AKA_fCall++;AKA_INSTANCE___MedianFinder = new ::MedianFinder();\n\n\n\n\nint num=0;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test MedianFinder_addNum_int_directed_0\");AKA_INSTANCE___MedianFinder->addNum(num);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\MedianFinder\\\\addNum(int)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___MedianFinder */\n/* ConstructorDataNode MedianFinder() */\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\MedianFinder\\\\MedianFinder()|ROOT\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\GLOBAL\\\\AKA_INSTANCE___MedianFinder\\\\AKA_INSTANCE___MedianFinder\\\\MedianFinder()\");AKA_fCall++;AKA_INSTANCE___MedianFinder = new ::MedianFinder();\n\n\n\n\nint num=0;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 295 Find Median from Data Stream.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\addNum(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___MedianFinder",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___MedianFinder",
                                    "dataType": "::MedianFinder",
                                    "realType": "::MedianFinder",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                    "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___MedianFinder",
                                    "virtual_name": "AKA_INSTANCE___MedianFinder",
                                    "dataType": "::MedianFinder",
                                    "realType": "::MedianFinder",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                    "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___MedianFinder",
                                            "virtual_name": "AKA_INSTANCE___MedianFinder",
                                            "dataType": "::MedianFinder",
                                            "realType": "::MedianFinder",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                            "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder",
                                            "rawType": "::MedianFinder",
                                            "selectedConstructor": "MedianFinder()",
                                            "variableType": "::MedianFinder",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "MedianFinder()",
                                                    "virtual_name": "AKA_INSTANCE___MedianFinder",
                                                    "dataType": "::MedianFinder",
                                                    "realType": "::MedianFinder",
                                                    "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\MedianFinder()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "addNum(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\addNum(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "num",
                                    "virtual_name": "EXPECTED_num",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\addNum(int)\\num",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\addNum(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "num",
                                    "virtual_name": "num",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\addNum(int)\\num",
                                    "correspondingType": "int",
                                    "value": "-334986497"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_MedianFinder_addNum_int_random_2(void) {\n{\nAKA_test_case_name=\"MedianFinder_addNum_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___MedianFinder */\n/* ConstructorDataNode MedianFinder() */\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\MedianFinder\\\\MedianFinder()|ROOT\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\GLOBAL\\\\AKA_INSTANCE___MedianFinder\\\\AKA_INSTANCE___MedianFinder\\\\MedianFinder()\");AKA_fCall++;AKA_INSTANCE___MedianFinder = new ::MedianFinder();\n\n\n\n\nint num=-334986497;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test MedianFinder_addNum_int_random_2\");AKA_INSTANCE___MedianFinder->addNum(num);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\MedianFinder\\\\addNum(int)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___MedianFinder */\n/* ConstructorDataNode MedianFinder() */\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\MedianFinder\\\\MedianFinder()|ROOT\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\GLOBAL\\\\AKA_INSTANCE___MedianFinder\\\\AKA_INSTANCE___MedianFinder\\\\MedianFinder()\");AKA_fCall++;AKA_INSTANCE___MedianFinder = new ::MedianFinder();\n\n\n\n\nint num=-334986497;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class MedianFinder {\r public:\r     /** initialize your data structure here. */\r     MedianFinder() {\r         \r     }\r     \r     void addNum(int num) {\r         lo.push(num);\r         \r         hi.push(lo.top());\r         lo.pop();\r     \r         if (lo.size() < hi.size()) {\r             lo.push(hi.top());\r             hi.pop();\r         }\r     }\r     \r     double findMedian() {\r         return lo.size() > hi.size() ? lo.top() : (lo.top() + hi.top()) / 2.0;\r     }\r \r private:\r     priority_queue<int> lo;\r     priority_queue<int, vector<int>, greater<int>> hi;\r };",
        "c": [
            "MedianFinder() {\r\n        \r\n    }"
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\addNum(int)"
    },
    {
        "f": [
            "priority_queue<int> lo;",
            "priority_queue<int, vector<int>, greater<int>> hi;"
        ],
        "fm": "double findMedian() {\r         return lo.size() > hi.size() ? lo.top() : (lo.top() + hi.top()) / 2.0;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 295 Find Median from Data Stream.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\findMedian()",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___MedianFinder",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___MedianFinder",
                                    "dataType": "::MedianFinder",
                                    "realType": "::MedianFinder",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                    "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___MedianFinder",
                                    "virtual_name": "AKA_INSTANCE___MedianFinder",
                                    "dataType": "::MedianFinder",
                                    "realType": "::MedianFinder",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                    "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___MedianFinder",
                                            "virtual_name": "AKA_INSTANCE___MedianFinder",
                                            "dataType": "::MedianFinder",
                                            "realType": "::MedianFinder",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\AKA_INSTANCE___MedianFinder",
                                            "correspondingType": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder",
                                            "rawType": "::MedianFinder",
                                            "selectedConstructor": "MedianFinder()",
                                            "variableType": "::MedianFinder",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "MedianFinder()",
                                                    "virtual_name": "AKA_INSTANCE___MedianFinder",
                                                    "dataType": "::MedianFinder",
                                                    "realType": "::MedianFinder",
                                                    "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\MedianFinder()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMedian()",
                            "virtual_name": "NON_VALUE",
                            "dataType": "double",
                            "realType": "double",
                            "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\findMedian()",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\findMedian()",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "double",
                                    "realType": "double",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\findMedian()\\RETURN",
                                    "correspondingType": "double",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_MedianFinder_findMedian_random_0(void) {\n{\nAKA_test_case_name=\"MedianFinder_findMedian_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___MedianFinder */\n/* ConstructorDataNode MedianFinder() */\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\MedianFinder\\\\MedianFinder()|ROOT\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\GLOBAL\\\\AKA_INSTANCE___MedianFinder\\\\AKA_INSTANCE___MedianFinder\\\\MedianFinder()\");AKA_fCall++;AKA_INSTANCE___MedianFinder = new ::MedianFinder();\n\n\n\n\ndouble AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test MedianFinder_findMedian_random_0\");double AKA_ACTUAL_OUTPUT=AKA_INSTANCE___MedianFinder->findMedian();\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\MedianFinder\\\\findMedian()\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___MedianFinder */\n/* ConstructorDataNode MedianFinder() */\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\MedianFinder\\\\MedianFinder()|ROOT\\\\LeetCode 295 Find Median from Data Stream.cpp\\\\GLOBAL\\\\AKA_INSTANCE___MedianFinder\\\\AKA_INSTANCE___MedianFinder\\\\MedianFinder()\");AKA_fCall++;AKA_INSTANCE___MedianFinder = new ::MedianFinder();\n\n\n\n\ndouble AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class MedianFinder {\r public:\r     /** initialize your data structure here. */\r     MedianFinder() {\r         \r     }\r     \r     void addNum(int num) {\r         lo.push(num);\r         \r         hi.push(lo.top());\r         lo.pop();\r     \r         if (lo.size() < hi.size()) {\r             lo.push(hi.top());\r             hi.pop();\r         }\r     }\r     \r     double findMedian() {\r         return lo.size() > hi.size() ? lo.top() : (lo.top() + hi.top()) / 2.0;\r     }\r \r private:\r     priority_queue<int> lo;\r     priority_queue<int, vector<int>, greater<int>> hi;\r };",
        "c": [
            "MedianFinder() {\r\n        \r\n    }"
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 295 Find Median from Data Stream.cpp\\MedianFinder\\findMedian()"
    },
    {
        "f": [],
        "fm": "TreeNode(int x) : val(x), left(NULL), right(NULL) {}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 297 Serialize and Deserialize Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___TreeNode",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode",
                                    "dataType": "::TreeNode",
                                    "realType": "::TreeNode",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___TreeNode",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode",
                                            "dataType": "::TreeNode",
                                            "realType": "::TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                            "rawType": "::TreeNode",
                                            "selectedConstructor": "TreeNode(int)",
                                            "variableType": "::TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "TreeNode(int)",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "left",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode->left",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                    "level": 1
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "right",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___TreeNode->right",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___TreeNode",
                                    "virtual_name": "AKA_INSTANCE___TreeNode",
                                    "dataType": "::TreeNode",
                                    "realType": "::TreeNode",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___TreeNode",
                                            "virtual_name": "AKA_INSTANCE___TreeNode",
                                            "dataType": "::TreeNode",
                                            "realType": "::TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\AKA_INSTANCE___TreeNode",
                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                            "rawType": "::TreeNode",
                                            "selectedConstructor": "TreeNode(int)",
                                            "variableType": "::TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "TreeNode(int)",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "AKA_INSTANCE___TreeNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "1861059565"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "left",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode->left",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                    "level": 1
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "right",
                                                    "virtual_name": "AKA_INSTANCE___TreeNode->right",
                                                    "dataType": "TreeNode*",
                                                    "realType": "TreeNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "TreeNode(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)"
                        }
                    ]
                },
                "td": "void AKA_TEST_TreeNode_int_random_0(void) {\n{\nAKA_test_case_name=\"TreeNode_int_random_0\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=1861059565;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_0\");AKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=1861059565;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_0\");AKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)"
    },
    {
        "f": [],
        "fm": "string serialize(TreeNode* root) {\r         string data;\r         serializeHelper(data, root);\r         return data;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 297 Serialize and Deserialize Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serialize(TreeNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Codec",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Codec",
                                    "dataType": "::Codec",
                                    "realType": "::Codec",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Codec",
                                    "virtual_name": "AKA_INSTANCE___Codec",
                                    "dataType": "::Codec",
                                    "realType": "::Codec",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Codec",
                                            "virtual_name": "AKA_INSTANCE___Codec",
                                            "dataType": "::Codec",
                                            "realType": "::Codec",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec",
                                            "rawType": "::Codec",
                                            "selectedConstructor": "Codec()",
                                            "variableType": "::Codec",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Codec()",
                                                    "virtual_name": "AKA_INSTANCE___Codec",
                                                    "dataType": "::Codec",
                                                    "realType": "::Codec",
                                                    "functionNode": "\\Codec()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "serialize(TreeNode*)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serialize(TreeNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "EXPECTED_root",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serialize(TreeNode*)\\root",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serialize(TreeNode*)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "root",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serialize(TreeNode*)\\root",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                    "level": 1,
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "root[0]",
                                            "virtual_name": "root[0]",
                                            "dataType": "TreeNode",
                                            "realType": "TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serialize(TreeNode*)\\root\\root[0]",
                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "root",
                                                    "virtual_name": "root[0]",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serialize(TreeNode*)\\root\\root",
                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                    "rawType": "::TreeNode",
                                                    "selectedConstructor": "TreeNode(int)",
                                                    "variableType": "::TreeNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "TreeNode(int)",
                                                            "virtual_name": "root[0]",
                                                            "dataType": "::TreeNode",
                                                            "realType": "::TreeNode",
                                                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "root0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "1317933945"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "root[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "left",
                                                            "virtual_name": "root[0].left",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                            "level": 1
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "right",
                                                            "virtual_name": "root[0].right",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "root[1]",
                                            "virtual_name": "root[1]",
                                            "dataType": "TreeNode",
                                            "realType": "TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serialize(TreeNode*)\\root\\root[1]",
                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "root",
                                                    "virtual_name": "root[1]",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serialize(TreeNode*)\\root\\root",
                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                    "rawType": "::TreeNode",
                                                    "selectedConstructor": "TreeNode(int)",
                                                    "variableType": "::TreeNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "TreeNode(int)",
                                                            "virtual_name": "root[1]",
                                                            "dataType": "::TreeNode",
                                                            "realType": "::TreeNode",
                                                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "root1_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "743463613"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "root[1].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "left",
                                                            "virtual_name": "root[1].left",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                            "level": 1
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "right",
                                                            "virtual_name": "root[1].right",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serialize(TreeNode*)\\RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Codec_serialize_TreeNodemul_random_1(void) {\n{\nAKA_test_case_name=\"Codec_serialize_TreeNodemul_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Codec */\n/* ConstructorDataNode Codec() */\nAKA_mark(\"Calling: \\\\Codec()|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Codec\\\\AKA_INSTANCE___Codec\\\\Codec()\");AKA_fCall++;AKA_INSTANCE___Codec = new ::Codec();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1317933945;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serialize(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=743463613;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serialize(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Codec_serialize_TreeNodemul_random_1\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Codec->serialize(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\Codec\\\\serialize(TreeNode*)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Codec */\n/* ConstructorDataNode Codec() */\nAKA_mark(\"Calling: \\\\Codec()|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Codec\\\\AKA_INSTANCE___Codec\\\\Codec()\");AKA_fCall++;AKA_INSTANCE___Codec = new ::Codec();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1317933945;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serialize(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=743463613;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serialize(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Codec {\r public:\r     // Encodes a tree to a single string.\r     string serialize(TreeNode* root) {\r         string data;\r         serializeHelper(data, root);\r         return data;\r     }\r     \r     void serializeHelper(string &data, TreeNode *root) {\r         if (!root) {\r             data += '#';\r             return;\r         }\r         data += to_string(root->val);\r         data += '#';\r         serializeHelper(data, root->left);\r         serializeHelper(data, root->right);\r     }\r \r     // Decodes your encoded data to tree.\r     TreeNode* deserialize(string data) {\r         istringstream iss(data);\r         return deserializeHelper(iss);\r     }\r     \r     TreeNode * deserializeHelper(istringstream &iss) {\r         string buf;\r         getline(iss, buf, '#');\r         if (buf.empty()) {\r             return NULL;\r         }\r         TreeNode *root = new TreeNode(stoi(buf));\r         root->left  = deserializeHelper(iss);\r         root->right = deserializeHelper(iss);\r         return root;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serialize(TreeNode*)"
    },
    {
        "f": [],
        "fm": "void serializeHelper(string &data, TreeNode *root) {\r         if (!root) {\r             data += '#';\r             return;\r         }\r         data += to_string(root->val);\r         data += '#';\r         serializeHelper(data, root->left);\r         serializeHelper(data, root->right);\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 297 Serialize and Deserialize Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Codec",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Codec",
                                    "dataType": "::Codec",
                                    "realType": "::Codec",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Codec",
                                    "virtual_name": "AKA_INSTANCE___Codec",
                                    "dataType": "::Codec",
                                    "realType": "::Codec",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Codec",
                                            "virtual_name": "AKA_INSTANCE___Codec",
                                            "dataType": "::Codec",
                                            "realType": "::Codec",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec",
                                            "rawType": "::Codec",
                                            "selectedConstructor": "Codec()",
                                            "variableType": "::Codec",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Codec()",
                                                    "virtual_name": "AKA_INSTANCE___Codec",
                                                    "dataType": "::Codec",
                                                    "realType": "::Codec",
                                                    "functionNode": "\\Codec()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "serializeHelper(string&,TreeNode*)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "data",
                                    "virtual_name": "EXPECTED_data",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)\\data",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "EXPECTED_root",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)\\root",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "data",
                                    "virtual_name": "data",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)\\data",
                                    "correspondingType": "string&",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "data[0]",
                                            "virtual_name": "data[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)\\data\\data[0]",
                                            "correspondingType": "char",
                                            "value": "-117"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "root",
                                    "virtual_name": "root",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)\\root",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                    "level": 1,
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "root[0]",
                                            "virtual_name": "root[0]",
                                            "dataType": "TreeNode",
                                            "realType": "TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)\\root\\root[0]",
                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "root",
                                                    "virtual_name": "root[0]",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)\\root\\root",
                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                    "rawType": "::TreeNode",
                                                    "selectedConstructor": "TreeNode(int)",
                                                    "variableType": "::TreeNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "TreeNode(int)",
                                                            "virtual_name": "root[0]",
                                                            "dataType": "::TreeNode",
                                                            "realType": "::TreeNode",
                                                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "root0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "1256696541"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "root[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "-692838605"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "left",
                                                            "virtual_name": "root[0].left",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                            "level": 1,
                                                            "size": 1,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "left[0]",
                                                                    "virtual_name": "root[0].left[0]",
                                                                    "dataType": "TreeNode",
                                                                    "realType": "TreeNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left\\left[0]",
                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "left",
                                                                            "virtual_name": "root[0].left[0]",
                                                                            "dataType": "::TreeNode",
                                                                            "realType": "::TreeNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left\\left",
                                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                            "rawType": "::TreeNode",
                                                                            "selectedConstructor": "TreeNode(int)",
                                                                            "variableType": "::TreeNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "TreeNode(int)",
                                                                                    "virtual_name": "root[0].left[0]",
                                                                                    "dataType": "::TreeNode",
                                                                                    "realType": "::TreeNode",
                                                                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "root0_left0_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "-2127566576"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "root[0].left[0].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "-929500735"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "left",
                                                                                    "virtual_name": "root[0].left[0].left",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "right",
                                                                                    "virtual_name": "root[0].left[0].right",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "right",
                                                            "virtual_name": "root[0].right",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                            "level": 1,
                                                            "size": 2,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "right[0]",
                                                                    "virtual_name": "root[0].right[0]",
                                                                    "dataType": "TreeNode",
                                                                    "realType": "TreeNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right\\right[0]",
                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "right",
                                                                            "virtual_name": "root[0].right[0]",
                                                                            "dataType": "::TreeNode",
                                                                            "realType": "::TreeNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right\\right",
                                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                            "rawType": "::TreeNode",
                                                                            "selectedConstructor": "TreeNode(int)",
                                                                            "variableType": "::TreeNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "TreeNode(int)",
                                                                                    "virtual_name": "root[0].right[0]",
                                                                                    "dataType": "::TreeNode",
                                                                                    "realType": "::TreeNode",
                                                                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "root0_right0_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "1646712709"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "root[0].right[0].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "-1747330523"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "left",
                                                                                    "virtual_name": "root[0].right[0].left",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "right",
                                                                                    "virtual_name": "root[0].right[0].right",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "right[1]",
                                                                    "virtual_name": "root[0].right[1]",
                                                                    "dataType": "TreeNode",
                                                                    "realType": "TreeNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right\\right[1]",
                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "right",
                                                                            "virtual_name": "root[0].right[1]",
                                                                            "dataType": "::TreeNode",
                                                                            "realType": "::TreeNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right\\right",
                                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                            "rawType": "::TreeNode",
                                                                            "selectedConstructor": "TreeNode(int)",
                                                                            "variableType": "::TreeNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "TreeNode(int)",
                                                                                    "virtual_name": "root[0].right[1]",
                                                                                    "dataType": "::TreeNode",
                                                                                    "realType": "::TreeNode",
                                                                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "root0_right1_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "-2015386064"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "root[0].right[1].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "-1905280150"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "left",
                                                                                    "virtual_name": "root[0].right[1].left",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "right",
                                                                                    "virtual_name": "root[0].right[1].right",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "root[1]",
                                            "virtual_name": "root[1]",
                                            "dataType": "TreeNode",
                                            "realType": "TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)\\root\\root[1]",
                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "root",
                                                    "virtual_name": "root[1]",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)\\root\\root",
                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                    "rawType": "::TreeNode",
                                                    "selectedConstructor": "TreeNode(int)",
                                                    "variableType": "::TreeNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "TreeNode(int)",
                                                            "virtual_name": "root[1]",
                                                            "dataType": "::TreeNode",
                                                            "realType": "::TreeNode",
                                                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "root1_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "1800581673"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "root[1].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "1097186276"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "left",
                                                            "virtual_name": "root[1].left",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                            "level": 1,
                                                            "size": 1,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "left[0]",
                                                                    "virtual_name": "root[1].left[0]",
                                                                    "dataType": "TreeNode",
                                                                    "realType": "TreeNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left\\left[0]",
                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "left",
                                                                            "virtual_name": "root[1].left[0]",
                                                                            "dataType": "::TreeNode",
                                                                            "realType": "::TreeNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left\\left",
                                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                            "rawType": "::TreeNode",
                                                                            "selectedConstructor": "TreeNode(int)",
                                                                            "variableType": "::TreeNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "TreeNode(int)",
                                                                                    "virtual_name": "root[1].left[0]",
                                                                                    "dataType": "::TreeNode",
                                                                                    "realType": "::TreeNode",
                                                                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "root1_left0_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "1614024435"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "root[1].left[0].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "1933866114"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "left",
                                                                                    "virtual_name": "root[1].left[0].left",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "right",
                                                                                    "virtual_name": "root[1].left[0].right",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "right",
                                                            "virtual_name": "root[1].right",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                            "level": 1,
                                                            "size": 1,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "right[0]",
                                                                    "virtual_name": "root[1].right[0]",
                                                                    "dataType": "TreeNode",
                                                                    "realType": "TreeNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right\\right[0]",
                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "right",
                                                                            "virtual_name": "root[1].right[0]",
                                                                            "dataType": "::TreeNode",
                                                                            "realType": "::TreeNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right\\right",
                                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                            "rawType": "::TreeNode",
                                                                            "selectedConstructor": "TreeNode(int)",
                                                                            "variableType": "::TreeNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "TreeNode(int)",
                                                                                    "virtual_name": "root[1].right[0]",
                                                                                    "dataType": "::TreeNode",
                                                                                    "realType": "::TreeNode",
                                                                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "root1_right0_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "1628276053"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "root[1].right[0].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "1116134827"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "left",
                                                                                    "virtual_name": "root[1].right[0].left",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "right",
                                                                                    "virtual_name": "root[1].right[0].right",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "root[2]",
                                            "virtual_name": "root[2]",
                                            "dataType": "TreeNode",
                                            "realType": "TreeNode",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)\\root\\root[2]",
                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "root",
                                                    "virtual_name": "root[2]",
                                                    "dataType": "::TreeNode",
                                                    "realType": "::TreeNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)\\root\\root",
                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                    "rawType": "::TreeNode",
                                                    "selectedConstructor": "TreeNode(int)",
                                                    "variableType": "::TreeNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "TreeNode(int)",
                                                            "virtual_name": "root[2]",
                                                            "dataType": "::TreeNode",
                                                            "realType": "::TreeNode",
                                                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "root2_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "-663345557"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "root[2].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "-647926257"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "left",
                                                            "virtual_name": "root[2].left",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                            "level": 1,
                                                            "size": 2,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "left[0]",
                                                                    "virtual_name": "root[2].left[0]",
                                                                    "dataType": "TreeNode",
                                                                    "realType": "TreeNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left\\left[0]",
                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "left",
                                                                            "virtual_name": "root[2].left[0]",
                                                                            "dataType": "::TreeNode",
                                                                            "realType": "::TreeNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left\\left",
                                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                            "rawType": "::TreeNode",
                                                                            "selectedConstructor": "TreeNode(int)",
                                                                            "variableType": "::TreeNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "TreeNode(int)",
                                                                                    "virtual_name": "root[2].left[0]",
                                                                                    "dataType": "::TreeNode",
                                                                                    "realType": "::TreeNode",
                                                                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "root2_left0_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "1713141872"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "root[2].left[0].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "526643317"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "left",
                                                                                    "virtual_name": "root[2].left[0].left",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "right",
                                                                                    "virtual_name": "root[2].left[0].right",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "left[1]",
                                                                    "virtual_name": "root[2].left[1]",
                                                                    "dataType": "TreeNode",
                                                                    "realType": "TreeNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left\\left[1]",
                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "left",
                                                                            "virtual_name": "root[2].left[1]",
                                                                            "dataType": "::TreeNode",
                                                                            "realType": "::TreeNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left\\left",
                                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                            "rawType": "::TreeNode",
                                                                            "selectedConstructor": "TreeNode(int)",
                                                                            "variableType": "::TreeNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "TreeNode(int)",
                                                                                    "virtual_name": "root[2].left[1]",
                                                                                    "dataType": "::TreeNode",
                                                                                    "realType": "::TreeNode",
                                                                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "root2_left1_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "-1638396213"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "root[2].left[1].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "534135232"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "left",
                                                                                    "virtual_name": "root[2].left[1].left",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "right",
                                                                                    "virtual_name": "root[2].left[1].right",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "right",
                                                            "virtual_name": "root[2].right",
                                                            "dataType": "TreeNode*",
                                                            "realType": "TreeNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                            "level": 1,
                                                            "size": 1,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "right[0]",
                                                                    "virtual_name": "root[2].right[0]",
                                                                    "dataType": "TreeNode",
                                                                    "realType": "TreeNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right\\right[0]",
                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "right",
                                                                            "virtual_name": "root[2].right[0]",
                                                                            "dataType": "::TreeNode",
                                                                            "realType": "::TreeNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right\\right",
                                                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                            "rawType": "::TreeNode",
                                                                            "selectedConstructor": "TreeNode(int)",
                                                                            "variableType": "::TreeNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "TreeNode(int)",
                                                                                    "virtual_name": "root[2].right[0]",
                                                                                    "dataType": "::TreeNode",
                                                                                    "realType": "::TreeNode",
                                                                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "root2_right0_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\TreeNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "1059185538"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "root[2].right[0].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "-1672823635"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "left",
                                                                                    "virtual_name": "root[2].right[0].left",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\left",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "right",
                                                                                    "virtual_name": "root[2].right[0].right",
                                                                                    "dataType": "TreeNode*",
                                                                                    "realType": "TreeNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode\\right",
                                                                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Codec_serializeHelper_string_TreeNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Codec_serializeHelper_string_TreeNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Codec */\n/* ConstructorDataNode Codec() */\nAKA_mark(\"Calling: \\\\Codec()|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Codec\\\\AKA_INSTANCE___Codec\\\\Codec()\");AKA_fCall++;AKA_INSTANCE___Codec = new ::Codec();\n\n\nchar* akaRandomName205578 = new char[2];akaRandomName205578[0] = -117;akaRandomName205578[1] = '\\0';string data=akaRandomName205578;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1256696541;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-692838605;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2127566576;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-929500735;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1646712709;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-1747330523;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-2015386064;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-1905280150;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1800581673;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1097186276;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=1614024435;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=1933866114;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1628276053;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1116134827;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-663345557;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=-647926257;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left0_x=1713141872;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_0 = new ::TreeNode(root2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).val=526643317;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left1_x=-1638396213;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_1 = new ::TreeNode(root2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).val=534135232;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_1);\n(*AKA_VECTOR_INIT_root_2).left = AKA_VECTOR_INIT_root_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right0_x=1059185538;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode(root2_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=-1672823635;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode data */\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Codec_serializeHelper_string_TreeNodemul_random_4\");AKA_INSTANCE___Codec->serializeHelper(data,root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\Codec\\\\serializeHelper(string&,TreeNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Codec */\n/* ConstructorDataNode Codec() */\nAKA_mark(\"Calling: \\\\Codec()|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Codec\\\\AKA_INSTANCE___Codec\\\\Codec()\");AKA_fCall++;AKA_INSTANCE___Codec = new ::Codec();\n\n\nchar* akaRandomName638777 = new char[2];akaRandomName638777[0] = -117;akaRandomName638777[1] = '\\0';string data=akaRandomName638777;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1256696541;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-692838605;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2127566576;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-929500735;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1646712709;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-1747330523;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-2015386064;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-1905280150;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1800581673;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1097186276;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=1614024435;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=1933866114;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1628276053;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1116134827;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-663345557;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=-647926257;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left0_x=1713141872;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_0 = new ::TreeNode(root2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).val=526643317;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left1_x=-1638396213;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_1 = new ::TreeNode(root2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).val=534135232;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_1);\n(*AKA_VECTOR_INIT_root_2).left = AKA_VECTOR_INIT_root_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right0_x=1059185538;\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\serializeHelper(string&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode(root2_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=-1672823635;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode data */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Codec {\r public:\r     // Encodes a tree to a single string.\r     string serialize(TreeNode* root) {\r         string data;\r         serializeHelper(data, root);\r         return data;\r     }\r     \r     void serializeHelper(string &data, TreeNode *root) {\r         if (!root) {\r             data += '#';\r             return;\r         }\r         data += to_string(root->val);\r         data += '#';\r         serializeHelper(data, root->left);\r         serializeHelper(data, root->right);\r     }\r \r     // Decodes your encoded data to tree.\r     TreeNode* deserialize(string data) {\r         istringstream iss(data);\r         return deserializeHelper(iss);\r     }\r     \r     TreeNode * deserializeHelper(istringstream &iss) {\r         string buf;\r         getline(iss, buf, '#');\r         if (buf.empty()) {\r             return NULL;\r         }\r         TreeNode *root = new TreeNode(stoi(buf));\r         root->left  = deserializeHelper(iss);\r         root->right = deserializeHelper(iss);\r         return root;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\serializeHelper(string&,TreeNode*)"
    },
    {
        "f": [],
        "fm": "TreeNode* deserialize(string data) {\r         istringstream iss(data);\r         return deserializeHelper(iss);\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 297 Serialize and Deserialize Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserialize(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Codec",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Codec",
                                    "dataType": "::Codec",
                                    "realType": "::Codec",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Codec",
                                    "virtual_name": "AKA_INSTANCE___Codec",
                                    "dataType": "::Codec",
                                    "realType": "::Codec",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Codec",
                                            "virtual_name": "AKA_INSTANCE___Codec",
                                            "dataType": "::Codec",
                                            "realType": "::Codec",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec",
                                            "rawType": "::Codec",
                                            "selectedConstructor": "Codec()",
                                            "variableType": "::Codec",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Codec()",
                                                    "virtual_name": "AKA_INSTANCE___Codec",
                                                    "dataType": "::Codec",
                                                    "realType": "::Codec",
                                                    "functionNode": "\\Codec()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "deserialize(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "TreeNode*",
                            "realType": "TreeNode*",
                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserialize(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "data",
                                    "virtual_name": "EXPECTED_data",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserialize(string)\\data",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserialize(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "data",
                                    "virtual_name": "data",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserialize(string)\\data",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "data[0]",
                                            "virtual_name": "data[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserialize(string)\\data\\data[0]",
                                            "correspondingType": "char",
                                            "value": "113"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserialize(string)\\RETURN",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Codec_deserialize_string_random_0(void) {\n{\nAKA_test_case_name=\"Codec_deserialize_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Codec */\n/* ConstructorDataNode Codec() */\nAKA_mark(\"Calling: \\\\Codec()|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Codec\\\\AKA_INSTANCE___Codec\\\\Codec()\");AKA_fCall++;AKA_INSTANCE___Codec = new ::Codec();\n\n\nchar* akaRandomName979404 = new char[2];akaRandomName979404[0] = 113;akaRandomName979404[1] = '\\0';string data=akaRandomName979404;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode data */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Codec_deserialize_string_random_0\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Codec->deserialize(data);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\Codec\\\\deserialize(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Codec */\n/* ConstructorDataNode Codec() */\nAKA_mark(\"Calling: \\\\Codec()|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Codec\\\\AKA_INSTANCE___Codec\\\\Codec()\");AKA_fCall++;AKA_INSTANCE___Codec = new ::Codec();\n\n\nchar* akaRandomName533037 = new char[2];akaRandomName533037[0] = 113;akaRandomName533037[1] = '\\0';string data=akaRandomName533037;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode data */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Codec {\r public:\r     // Encodes a tree to a single string.\r     string serialize(TreeNode* root) {\r         string data;\r         serializeHelper(data, root);\r         return data;\r     }\r     \r     void serializeHelper(string &data, TreeNode *root) {\r         if (!root) {\r             data += '#';\r             return;\r         }\r         data += to_string(root->val);\r         data += '#';\r         serializeHelper(data, root->left);\r         serializeHelper(data, root->right);\r     }\r \r     // Decodes your encoded data to tree.\r     TreeNode* deserialize(string data) {\r         istringstream iss(data);\r         return deserializeHelper(iss);\r     }\r     \r     TreeNode * deserializeHelper(istringstream &iss) {\r         string buf;\r         getline(iss, buf, '#');\r         if (buf.empty()) {\r             return NULL;\r         }\r         TreeNode *root = new TreeNode(stoi(buf));\r         root->left  = deserializeHelper(iss);\r         root->right = deserializeHelper(iss);\r         return root;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserialize(string)"
    },
    {
        "f": [],
        "fm": "TreeNode * deserializeHelper(istringstream &iss) {\r         string buf;\r         getline(iss, buf, '#');\r         if (buf.empty()) {\r             return NULL;\r         }\r         TreeNode *root = new TreeNode(stoi(buf));\r         root->left  = deserializeHelper(iss);\r         root->right = deserializeHelper(iss);\r         return root;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 297 Serialize and Deserialize Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Codec",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Codec",
                                    "dataType": "::Codec",
                                    "realType": "::Codec",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Codec",
                                    "virtual_name": "AKA_INSTANCE___Codec",
                                    "dataType": "::Codec",
                                    "realType": "::Codec",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Codec",
                                            "virtual_name": "AKA_INSTANCE___Codec",
                                            "dataType": "::Codec",
                                            "realType": "::Codec",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec",
                                            "rawType": "::Codec",
                                            "selectedConstructor": "Codec()",
                                            "variableType": "::Codec",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Codec()",
                                                    "virtual_name": "AKA_INSTANCE___Codec",
                                                    "dataType": "::Codec",
                                                    "realType": "::Codec",
                                                    "functionNode": "\\Codec()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "deserializeHelper(istringstream&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "TreeNode*",
                            "realType": "TreeNode*",
                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.OtherUnresolvedDataNode",
                                    "name": "iss",
                                    "virtual_name": "EXPECTED_iss",
                                    "dataType": "istringstream&",
                                    "realType": "istringstream&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)\\iss"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.OtherUnresolvedDataNode",
                                    "name": "iss",
                                    "virtual_name": "iss",
                                    "dataType": "istringstream&",
                                    "realType": "istringstream&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)\\iss"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)\\RETURN",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Codec_deserializeHelper_istringstream_directed_0(void) {\n{\nAKA_test_case_name=\"Codec_deserializeHelper_istringstream_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Codec */\n/* ConstructorDataNode Codec() */\nAKA_mark(\"Calling: \\\\Codec()|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Codec\\\\AKA_INSTANCE___Codec\\\\Codec()\");AKA_fCall++;AKA_INSTANCE___Codec = new ::Codec();\n\n\nistringstream iss;TreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* OtherUnresolvedDataNode iss */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Codec_deserializeHelper_istringstream_directed_0\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Codec->deserializeHelper(iss);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\Codec\\\\deserializeHelper(istringstream&)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Codec */\n/* ConstructorDataNode Codec() */\nAKA_mark(\"Calling: \\\\Codec()|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Codec\\\\AKA_INSTANCE___Codec\\\\Codec()\");AKA_fCall++;AKA_INSTANCE___Codec = new ::Codec();\n\n\nistringstream iss;TreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* OtherUnresolvedDataNode iss */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 297 Serialize and Deserialize Binary Tree.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Codec",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Codec",
                                    "dataType": "::Codec",
                                    "realType": "::Codec",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Codec",
                                    "virtual_name": "AKA_INSTANCE___Codec",
                                    "dataType": "::Codec",
                                    "realType": "::Codec",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Codec",
                                            "virtual_name": "AKA_INSTANCE___Codec",
                                            "dataType": "::Codec",
                                            "realType": "::Codec",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\AKA_INSTANCE___Codec",
                                            "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec",
                                            "rawType": "::Codec",
                                            "selectedConstructor": "Codec()",
                                            "variableType": "::Codec",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Codec()",
                                                    "virtual_name": "AKA_INSTANCE___Codec",
                                                    "dataType": "::Codec",
                                                    "realType": "::Codec",
                                                    "functionNode": "\\Codec()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "deserializeHelper(istringstream&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "TreeNode*",
                            "realType": "TreeNode*",
                            "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.OtherUnresolvedDataNode",
                                    "name": "iss",
                                    "virtual_name": "EXPECTED_iss",
                                    "dataType": "istringstream&",
                                    "realType": "istringstream&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)\\iss"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.OtherUnresolvedDataNode",
                                    "name": "iss",
                                    "virtual_name": "iss",
                                    "dataType": "istringstream&",
                                    "realType": "istringstream&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)\\iss"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "TreeNode*",
                                    "realType": "TreeNode*",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)\\RETURN",
                                    "correspondingType": ".\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\TreeNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Codec_deserializeHelper_istringstream_random_0(void) {\n{\nAKA_test_case_name=\"Codec_deserializeHelper_istringstream_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Codec */\n/* ConstructorDataNode Codec() */\nAKA_mark(\"Calling: \\\\Codec()|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Codec\\\\AKA_INSTANCE___Codec\\\\Codec()\");AKA_fCall++;AKA_INSTANCE___Codec = new ::Codec();\n\n\nistringstream iss;TreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* OtherUnresolvedDataNode iss */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Codec_deserializeHelper_istringstream_random_0\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Codec->deserializeHelper(iss);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\Codec\\\\deserializeHelper(istringstream&)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Codec */\n/* ConstructorDataNode Codec() */\nAKA_mark(\"Calling: \\\\Codec()|ROOT\\\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Codec\\\\AKA_INSTANCE___Codec\\\\Codec()\");AKA_fCall++;AKA_INSTANCE___Codec = new ::Codec();\n\n\nistringstream iss;TreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* OtherUnresolvedDataNode iss */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Codec {\r public:\r     // Encodes a tree to a single string.\r     string serialize(TreeNode* root) {\r         string data;\r         serializeHelper(data, root);\r         return data;\r     }\r     \r     void serializeHelper(string &data, TreeNode *root) {\r         if (!root) {\r             data += '#';\r             return;\r         }\r         data += to_string(root->val);\r         data += '#';\r         serializeHelper(data, root->left);\r         serializeHelper(data, root->right);\r     }\r \r     // Decodes your encoded data to tree.\r     TreeNode* deserialize(string data) {\r         istringstream iss(data);\r         return deserializeHelper(iss);\r     }\r     \r     TreeNode * deserializeHelper(istringstream &iss) {\r         string buf;\r         getline(iss, buf, '#');\r         if (buf.empty()) {\r             return NULL;\r         }\r         TreeNode *root = new TreeNode(stoi(buf));\r         root->left  = deserializeHelper(iss);\r         root->right = deserializeHelper(iss);\r         return root;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 297 Serialize and Deserialize Binary Tree.cpp\\Codec\\deserializeHelper(istringstream&)"
    },
    {
        "f": [
            "vector<int> sum;"
        ],
        "fm": "NumArray(vector<int> nums) : sum(nums.size() + 1) {\r         for (int i = 1; i < sum.size(); i++) {\r             sum[i] = sum[i - 1] + nums[i - 1];\r         }\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 303 Range Sum Query - Immutable.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\NumArray(vector<int>)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___NumArray",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___NumArray",
                                    "dataType": "::NumArray",
                                    "realType": "::NumArray",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\AKA_INSTANCE___NumArray",
                                    "correspondingType": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___NumArray",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___NumArray",
                                            "dataType": "::NumArray",
                                            "realType": "::NumArray",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\AKA_INSTANCE___NumArray",
                                            "correspondingType": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray",
                                            "rawType": "::NumArray",
                                            "selectedConstructor": "NumArray(vector<int>)",
                                            "variableType": "::NumArray",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "NumArray(vector<int>)",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___NumArray",
                                                    "dataType": "::NumArray",
                                                    "realType": "::NumArray",
                                                    "functionNode": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\NumArray(vector<int>)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                            "name": "nums",
                                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___NumArray_nums",
                                                            "dataType": "vector<int>",
                                                            "realType": "vector<int>",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\NumArray(vector<int>)\\nums",
                                                            "correspondingType": "STLListBaseType",
                                                            "templateArg": "int"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___NumArray",
                                    "virtual_name": "AKA_INSTANCE___NumArray",
                                    "dataType": "::NumArray",
                                    "realType": "::NumArray",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\AKA_INSTANCE___NumArray",
                                    "correspondingType": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___NumArray",
                                            "virtual_name": "AKA_INSTANCE___NumArray",
                                            "dataType": "::NumArray",
                                            "realType": "::NumArray",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\AKA_INSTANCE___NumArray",
                                            "correspondingType": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray",
                                            "rawType": "::NumArray",
                                            "selectedConstructor": "NumArray(vector<int>)",
                                            "variableType": "::NumArray",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "NumArray(vector<int>)",
                                                    "virtual_name": "AKA_INSTANCE___NumArray",
                                                    "dataType": "::NumArray",
                                                    "realType": "::NumArray",
                                                    "functionNode": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\NumArray(vector<int>)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                            "name": "nums",
                                                            "virtual_name": "AKA_INSTANCE___NumArray_nums",
                                                            "dataType": "vector<int>",
                                                            "realType": "vector<int>",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\NumArray(vector<int>)\\nums",
                                                            "correspondingType": "STLListBaseType",
                                                            "templateArg": "int",
                                                            "size": 1,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "element #0",
                                                                    "virtual_name": "AKA_INSTANCE___NumArray_nums_element0",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\NumArray(vector<int>)\\nums\\element #0",
                                                                    "correspondingType": "int",
                                                                    "value": "-1181677181"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "NumArray(vector<int>)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\NumArray(vector<int>)"
                        }
                    ]
                },
                "td": "void AKA_TEST_NumArray_NumArray_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"NumArray_NumArray_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___NumArray */\n/* ConstructorDataNode NumArray(vector<int>) */\n/* VectorDataNode nums */\nvector<int> AKA_INSTANCE___NumArray_nums;\nint AKA_INSTANCE___NumArray_nums_element0=-1181677181;\nAKA_INSTANCE___NumArray_nums.push_back(AKA_INSTANCE___NumArray_nums_element0);\nAKA_mark(\"<<PRE-CALLING>> Test NumArray_NumArray_vector_int_random_1\");AKA_mark(\"Calling: .\\\\json44\\\\LeetCode 303 Range Sum Query - Immutable.cpp\\\\NumArray\\\\NumArray(vector<int>)|ROOT\\\\LeetCode 303 Range Sum Query - Immutable.cpp\\\\GLOBAL\\\\AKA_INSTANCE___NumArray\\\\AKA_INSTANCE___NumArray\\\\NumArray(vector<int>)\");AKA_fCall++;AKA_INSTANCE___NumArray = new ::NumArray(AKA_INSTANCE___NumArray_nums);\n\n\n\n\n\n\n\n/* error assertion */\n\n\n/* SubClassDataNode AKA_INSTANCE___NumArray */\n/* ConstructorDataNode NumArray(vector<int>) */\n/* VectorDataNode nums */\nvector<int> EXPECTED_AKA_GLOBAL_AKA_INSTANCE___NumArray_nums;\nAKA_mark(\"<<PRE-CALLING>>\");AKA_mark(\"Calling: .\\\\json44\\\\LeetCode 303 Range Sum Query - Immutable.cpp\\\\NumArray\\\\NumArray(vector<int>)|ROOT\\\\LeetCode 303 Range Sum Query - Immutable.cpp\\\\GLOBAL\\\\AKA_INSTANCE___NumArray\\\\AKA_INSTANCE___NumArray\\\\NumArray(vector<int>)\");AKA_fCall++;auto EXPECTED_AKA_GLOBAL_AKA_INSTANCE___NumArray = new ::NumArray(EXPECTED_AKA_GLOBAL_AKA_INSTANCE___NumArray_nums);\n\n\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___NumArray */\n/* ConstructorDataNode NumArray(vector<int>) */\n/* VectorDataNode nums */\nvector<int> AKA_INSTANCE___NumArray_nums;\nint AKA_INSTANCE___NumArray_nums_element0=-1181677181;\nAKA_INSTANCE___NumArray_nums.push_back(AKA_INSTANCE___NumArray_nums_element0);\nAKA_mark(\"<<PRE-CALLING>> Test NumArray_NumArray_vector_int_random_1\");AKA_mark(\"Calling: .\\\\json44\\\\LeetCode 303 Range Sum Query - Immutable.cpp\\\\NumArray\\\\NumArray(vector<int>)|ROOT\\\\LeetCode 303 Range Sum Query - Immutable.cpp\\\\GLOBAL\\\\AKA_INSTANCE___NumArray\\\\AKA_INSTANCE___NumArray\\\\NumArray(vector<int>)\");AKA_fCall++;AKA_INSTANCE___NumArray = new ::NumArray(AKA_INSTANCE___NumArray_nums);\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class NumArray {\r public:\r     NumArray(vector<int> nums) : sum(nums.size() + 1) {\r         for (int i = 1; i < sum.size(); i++) {\r             sum[i] = sum[i - 1] + nums[i - 1];\r         }\r     }\r     \r     int sumRange(int i, int j) {\r         return sum[j + 1] - sum[i];\r     }\r     \r private:\r     vector<int> sum;\r };",
        "c": [
            "NumArray(vector<int> nums) : sum(nums.size() + 1) {\r\n        for (int i = 1; i < sum.size(); i++) {\r\n            sum[i] = sum[i - 1] + nums[i - 1];\r\n        }\r\n    }"
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\NumArray(vector<int>)"
    },
    {
        "f": [
            "vector<int> sum;"
        ],
        "fm": "int sumRange(int i, int j) {\r         return sum[j + 1] - sum[i];\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 303 Range Sum Query - Immutable.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\sumRange(int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___NumArray",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___NumArray",
                                    "dataType": "::NumArray",
                                    "realType": "::NumArray",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\AKA_INSTANCE___NumArray",
                                    "correspondingType": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___NumArray",
                                    "virtual_name": "AKA_INSTANCE___NumArray",
                                    "dataType": "::NumArray",
                                    "realType": "::NumArray",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\AKA_INSTANCE___NumArray",
                                    "correspondingType": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___NumArray",
                                            "virtual_name": "AKA_INSTANCE___NumArray",
                                            "dataType": "::NumArray",
                                            "realType": "::NumArray",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\AKA_INSTANCE___NumArray",
                                            "correspondingType": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray",
                                            "rawType": "::NumArray",
                                            "selectedConstructor": "NumArray(vector<int>)",
                                            "variableType": "::NumArray",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "NumArray(vector<int>)",
                                                    "virtual_name": "AKA_INSTANCE___NumArray",
                                                    "dataType": "::NumArray",
                                                    "realType": "::NumArray",
                                                    "functionNode": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\NumArray(vector<int>)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                            "name": "nums",
                                                            "virtual_name": "AKA_INSTANCE___NumArray_nums",
                                                            "dataType": "vector<int>",
                                                            "realType": "vector<int>",
                                                            "external": false,
                                                            "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\NumArray(vector<int>)\\nums",
                                                            "correspondingType": "STLListBaseType",
                                                            "templateArg": "int",
                                                            "size": 2,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "element #0",
                                                                    "virtual_name": "AKA_INSTANCE___NumArray_nums_element0",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\NumArray(vector<int>)\\nums\\element #0",
                                                                    "correspondingType": "int",
                                                                    "value": "-1841476349"
                                                                },
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "element #1",
                                                                    "virtual_name": "AKA_INSTANCE___NumArray_nums_element1",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\NumArray(vector<int>)\\nums\\element #1",
                                                                    "correspondingType": "int",
                                                                    "value": "1227140619"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "sumRange(int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\sumRange(int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "i",
                                    "virtual_name": "EXPECTED_i",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\sumRange(int,int)\\i",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "j",
                                    "virtual_name": "EXPECTED_j",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\sumRange(int,int)\\j",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\sumRange(int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "i",
                                    "virtual_name": "i",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\sumRange(int,int)\\i",
                                    "correspondingType": "int",
                                    "value": "-1942267682"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "j",
                                    "virtual_name": "j",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\sumRange(int,int)\\j",
                                    "correspondingType": "int",
                                    "value": "-791198348"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\sumRange(int,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_NumArray_sumRange_int_int_random_2(void) {\n{\nAKA_test_case_name=\"NumArray_sumRange_int_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___NumArray */\n/* ConstructorDataNode NumArray(vector<int>) */\n/* VectorDataNode nums */\nvector<int> AKA_INSTANCE___NumArray_nums;\nint AKA_INSTANCE___NumArray_nums_element0=-1841476349;\nAKA_INSTANCE___NumArray_nums.push_back(AKA_INSTANCE___NumArray_nums_element0);\nint AKA_INSTANCE___NumArray_nums_element1=1227140619;\nAKA_INSTANCE___NumArray_nums.push_back(AKA_INSTANCE___NumArray_nums_element1);\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 303 Range Sum Query - Immutable.cpp\\\\NumArray\\\\NumArray(vector<int>)|ROOT\\\\LeetCode 303 Range Sum Query - Immutable.cpp\\\\GLOBAL\\\\AKA_INSTANCE___NumArray\\\\AKA_INSTANCE___NumArray\\\\NumArray(vector<int>)\");AKA_fCall++;AKA_INSTANCE___NumArray = new ::NumArray(AKA_INSTANCE___NumArray_nums);\n\n\n\n\nint i=-1942267682;\n\n\nint j=-791198348;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode i */\n/* NormalNumberDataNode j */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test NumArray_sumRange_int_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___NumArray->sumRange(i,j);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 303 Range Sum Query - Immutable.cpp\\\\NumArray\\\\sumRange(int,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___NumArray */\n/* ConstructorDataNode NumArray(vector<int>) */\n/* VectorDataNode nums */\nvector<int> AKA_INSTANCE___NumArray_nums;\nint AKA_INSTANCE___NumArray_nums_element0=-1841476349;\nAKA_INSTANCE___NumArray_nums.push_back(AKA_INSTANCE___NumArray_nums_element0);\nint AKA_INSTANCE___NumArray_nums_element1=1227140619;\nAKA_INSTANCE___NumArray_nums.push_back(AKA_INSTANCE___NumArray_nums_element1);\nAKA_mark(\"Calling: .\\\\json44\\\\LeetCode 303 Range Sum Query - Immutable.cpp\\\\NumArray\\\\NumArray(vector<int>)|ROOT\\\\LeetCode 303 Range Sum Query - Immutable.cpp\\\\GLOBAL\\\\AKA_INSTANCE___NumArray\\\\AKA_INSTANCE___NumArray\\\\NumArray(vector<int>)\");AKA_fCall++;AKA_INSTANCE___NumArray = new ::NumArray(AKA_INSTANCE___NumArray_nums);\n\n\n\n\nint i=-1942267682;\n\n\nint j=-791198348;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode i */\n/* NormalNumberDataNode j */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class NumArray {\r public:\r     NumArray(vector<int> nums) : sum(nums.size() + 1) {\r         for (int i = 1; i < sum.size(); i++) {\r             sum[i] = sum[i - 1] + nums[i - 1];\r         }\r     }\r     \r     int sumRange(int i, int j) {\r         return sum[j + 1] - sum[i];\r     }\r     \r private:\r     vector<int> sum;\r };",
        "c": [
            "NumArray(vector<int> nums) : sum(nums.size() + 1) {\r\n        for (int i = 1; i < sum.size(); i++) {\r\n            sum[i] = sum[i - 1] + nums[i - 1];\r\n        }\r\n    }"
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 303 Range Sum Query - Immutable.cpp\\NumArray\\sumRange(int,int)"
    },
    {
        "f": [],
        "fm": "int nthSuperUglyNumber(int n, vector<int>& primes) {\r         vector<int> ugly(n);\r         ugly[0] = 1;\r         \r         vector<int> idx(primes.size());\r         for (int i = 1; i < n; i++) {\r             ugly[i] = ugly[idx[0]] * primes[0];\r             for (int j = 1; j < idx.size(); j++) {\r                 ugly[i] = min(ugly[i], ugly[idx[j]] * primes[j]);\r             }\r             for (int j = 0; j < idx.size(); j++) {\r                 if (ugly[i] == ugly[idx[j]] * primes[j]) {\r                     idx[j]++;\r                 }\r             }\r         }\r         return ugly.back();\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 313 Super Ugly Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "nthSuperUglyNumber(int,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "EXPECTED_primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "10"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "primes_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #0",
                                            "correspondingType": "int",
                                            "value": "110220078"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "primes_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #1",
                                            "correspondingType": "int",
                                            "value": "-1587225628"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_nthSuperUglyNumber_int_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_nthSuperUglyNumber_int_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=10;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\nint primes_element0=110220078;\nprimes.push_back(primes_element0);\nint primes_element1=-1587225628;\nprimes.push_back(primes_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_nthSuperUglyNumber_int_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->nthSuperUglyNumber(n,primes);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 313 Super Ugly Number.cpp\\\\Solution\\\\nthSuperUglyNumber(int,vector<int>&)\");\n\n\nvector<int> EXPECTED_primes;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=10;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\nint primes_element0=110220078;\nprimes.push_back(primes_element0);\nint primes_element1=-1587225628;\nprimes.push_back(primes_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 313 Super Ugly Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "nthSuperUglyNumber(int,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "EXPECTED_primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "7"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "primes_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_nthSuperUglyNumber_int_vector_int_directed_6(void) {\n{\nAKA_test_case_name=\"Solution_nthSuperUglyNumber_int_vector_int_directed_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=7;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_nthSuperUglyNumber_int_vector_int_directed_6\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->nthSuperUglyNumber(n,primes);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 313 Super Ugly Number.cpp\\\\Solution\\\\nthSuperUglyNumber(int,vector<int>&)\");\n\n\nvector<int> EXPECTED_primes;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=7;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 313 Super Ugly Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "nthSuperUglyNumber(int,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "EXPECTED_primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "2"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 5,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "primes_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "primes_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "primes_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "primes_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "primes_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_nthSuperUglyNumber_int_vector_int_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_nthSuperUglyNumber_int_vector_int_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=2;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* element #1 : null value -> no code */\nprimes.push_back(primes_element1);\n/* element #2 : null value -> no code */\nprimes.push_back(primes_element2);\n/* element #3 : null value -> no code */\nprimes.push_back(primes_element3);\n/* element #4 : null value -> no code */\nprimes.push_back(primes_element4);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_nthSuperUglyNumber_int_vector_int_directed_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->nthSuperUglyNumber(n,primes);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 313 Super Ugly Number.cpp\\\\Solution\\\\nthSuperUglyNumber(int,vector<int>&)\");\n\n\nvector<int> EXPECTED_primes;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=2;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* element #1 : null value -> no code */\nprimes.push_back(primes_element1);\n/* element #2 : null value -> no code */\nprimes.push_back(primes_element2);\n/* element #3 : null value -> no code */\nprimes.push_back(primes_element3);\n/* element #4 : null value -> no code */\nprimes.push_back(primes_element4);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 313 Super Ugly Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "nthSuperUglyNumber(int,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "EXPECTED_primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "2"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 6,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "primes_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "primes_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "primes_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "primes_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "primes_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "primes_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_nthSuperUglyNumber_int_vector_int_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_nthSuperUglyNumber_int_vector_int_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=2;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* element #1 : null value -> no code */\nprimes.push_back(primes_element1);\n/* element #2 : null value -> no code */\nprimes.push_back(primes_element2);\n/* element #3 : null value -> no code */\nprimes.push_back(primes_element3);\n/* element #4 : null value -> no code */\nprimes.push_back(primes_element4);\n/* element #5 : null value -> no code */\nprimes.push_back(primes_element5);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_nthSuperUglyNumber_int_vector_int_directed_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->nthSuperUglyNumber(n,primes);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 313 Super Ugly Number.cpp\\\\Solution\\\\nthSuperUglyNumber(int,vector<int>&)\");\n\n\nvector<int> EXPECTED_primes;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=2;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* element #1 : null value -> no code */\nprimes.push_back(primes_element1);\n/* element #2 : null value -> no code */\nprimes.push_back(primes_element2);\n/* element #3 : null value -> no code */\nprimes.push_back(primes_element3);\n/* element #4 : null value -> no code */\nprimes.push_back(primes_element4);\n/* element #5 : null value -> no code */\nprimes.push_back(primes_element5);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 313 Super Ugly Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "nthSuperUglyNumber(int,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "EXPECTED_primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "2"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 9,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "primes_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "primes_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "primes_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "primes_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "primes_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "primes_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "primes_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "primes_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #8",
                                            "virtual_name": "primes_element8",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #8",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_nthSuperUglyNumber_int_vector_int_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_nthSuperUglyNumber_int_vector_int_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=2;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* element #1 : null value -> no code */\nprimes.push_back(primes_element1);\n/* element #2 : null value -> no code */\nprimes.push_back(primes_element2);\n/* element #3 : null value -> no code */\nprimes.push_back(primes_element3);\n/* element #4 : null value -> no code */\nprimes.push_back(primes_element4);\n/* element #5 : null value -> no code */\nprimes.push_back(primes_element5);\n/* element #6 : null value -> no code */\nprimes.push_back(primes_element6);\n/* element #7 : null value -> no code */\nprimes.push_back(primes_element7);\n/* element #8 : null value -> no code */\nprimes.push_back(primes_element8);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_nthSuperUglyNumber_int_vector_int_directed_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->nthSuperUglyNumber(n,primes);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 313 Super Ugly Number.cpp\\\\Solution\\\\nthSuperUglyNumber(int,vector<int>&)\");\n\n\nvector<int> EXPECTED_primes;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=2;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* element #1 : null value -> no code */\nprimes.push_back(primes_element1);\n/* element #2 : null value -> no code */\nprimes.push_back(primes_element2);\n/* element #3 : null value -> no code */\nprimes.push_back(primes_element3);\n/* element #4 : null value -> no code */\nprimes.push_back(primes_element4);\n/* element #5 : null value -> no code */\nprimes.push_back(primes_element5);\n/* element #6 : null value -> no code */\nprimes.push_back(primes_element6);\n/* element #7 : null value -> no code */\nprimes.push_back(primes_element7);\n/* element #8 : null value -> no code */\nprimes.push_back(primes_element8);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 313 Super Ugly Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "nthSuperUglyNumber(int,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "EXPECTED_primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "2"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 4,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "primes_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "primes_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "primes_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "primes_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_nthSuperUglyNumber_int_vector_int_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_nthSuperUglyNumber_int_vector_int_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=2;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* element #1 : null value -> no code */\nprimes.push_back(primes_element1);\n/* element #2 : null value -> no code */\nprimes.push_back(primes_element2);\n/* element #3 : null value -> no code */\nprimes.push_back(primes_element3);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_nthSuperUglyNumber_int_vector_int_directed_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->nthSuperUglyNumber(n,primes);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 313 Super Ugly Number.cpp\\\\Solution\\\\nthSuperUglyNumber(int,vector<int>&)\");\n\n\nvector<int> EXPECTED_primes;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=2;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* element #1 : null value -> no code */\nprimes.push_back(primes_element1);\n/* element #2 : null value -> no code */\nprimes.push_back(primes_element2);\n/* element #3 : null value -> no code */\nprimes.push_back(primes_element3);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 313 Super Ugly Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "nthSuperUglyNumber(int,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "EXPECTED_primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "4"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "primes_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_nthSuperUglyNumber_int_vector_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_nthSuperUglyNumber_int_vector_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=4;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_nthSuperUglyNumber_int_vector_int_directed_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->nthSuperUglyNumber(n,primes);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 313 Super Ugly Number.cpp\\\\Solution\\\\nthSuperUglyNumber(int,vector<int>&)\");\n\n\nvector<int> EXPECTED_primes;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=4;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 313 Super Ugly Number.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "nthSuperUglyNumber(int,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "EXPECTED_primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\n",
                                    "correspondingType": "int",
                                    "value": "2"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "primes",
                                    "virtual_name": "primes",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 8,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "primes_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #0",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "primes_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #1",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "primes_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #2",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #3",
                                            "virtual_name": "primes_element3",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #3",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #4",
                                            "virtual_name": "primes_element4",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #4",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #5",
                                            "virtual_name": "primes_element5",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #5",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #6",
                                            "virtual_name": "primes_element6",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #6",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #7",
                                            "virtual_name": "primes_element7",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\primes\\element #7",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_nthSuperUglyNumber_int_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_nthSuperUglyNumber_int_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=2;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* element #1 : null value -> no code */\nprimes.push_back(primes_element1);\n/* element #2 : null value -> no code */\nprimes.push_back(primes_element2);\n/* element #3 : null value -> no code */\nprimes.push_back(primes_element3);\n/* element #4 : null value -> no code */\nprimes.push_back(primes_element4);\n/* element #5 : null value -> no code */\nprimes.push_back(primes_element5);\n/* element #6 : null value -> no code */\nprimes.push_back(primes_element6);\n/* element #7 : null value -> no code */\nprimes.push_back(primes_element7);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_nthSuperUglyNumber_int_vector_int_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->nthSuperUglyNumber(n,primes);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 313 Super Ugly Number.cpp\\\\Solution\\\\nthSuperUglyNumber(int,vector<int>&)\");\n\n\nvector<int> EXPECTED_primes;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 313 Super Ugly Number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=2;\nvector<int> primes;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode primes */\n/* element #0 : null value -> no code */\nprimes.push_back(primes_element0);\n/* element #1 : null value -> no code */\nprimes.push_back(primes_element1);\n/* element #2 : null value -> no code */\nprimes.push_back(primes_element2);\n/* element #3 : null value -> no code */\nprimes.push_back(primes_element3);\n/* element #4 : null value -> no code */\nprimes.push_back(primes_element4);\n/* element #5 : null value -> no code */\nprimes.push_back(primes_element5);\n/* element #6 : null value -> no code */\nprimes.push_back(primes_element6);\n/* element #7 : null value -> no code */\nprimes.push_back(primes_element7);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int nthSuperUglyNumber(int n, vector<int>& primes) {\r         vector<int> ugly(n);\r         ugly[0] = 1;\r         \r         vector<int> idx(primes.size());\r         for (int i = 1; i < n; i++) {\r             ugly[i] = ugly[idx[0]] * primes[0];\r             for (int j = 1; j < idx.size(); j++) {\r                 ugly[i] = min(ugly[i], ugly[idx[j]] * primes[j]);\r             }\r             for (int j = 0; j < idx.size(); j++) {\r                 if (ugly[i] == ugly[idx[j]] * primes[j]) {\r                     idx[j]++;\r                 }\r             }\r         }\r         return ugly.back();\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 313 Super Ugly Number.cpp\\Solution\\nthSuperUglyNumber(int,vector<int>&)"
    },
    {
        "f": [],
        "fm": "int bulbSwitch(int n) {\r         return sqrt(n);\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 319 Bulb Switcher.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 319 Bulb Switcher.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution\\bulbSwitch(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "bulbSwitch(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution\\bulbSwitch(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution\\bulbSwitch(int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution\\bulbSwitch(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution\\bulbSwitch(int)\\n",
                                    "correspondingType": "int",
                                    "value": "-219248423"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution\\bulbSwitch(int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_bulbSwitch_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_bulbSwitch_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 319 Bulb Switcher.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=-219248423;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_bulbSwitch_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->bulbSwitch(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 319 Bulb Switcher.cpp\\\\Solution\\\\bulbSwitch(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 319 Bulb Switcher.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=-219248423;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int bulbSwitch(int n) {\r         return sqrt(n);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 319 Bulb Switcher.cpp\\Solution\\bulbSwitch(int)"
    },
    {
        "f": [],
        "fm": "bool isPowerOfThree(int n) {\r         if (n < 1) return false;\r         while (n % 3 == 0) {\r             n /= 3;\r         }\r         return n == 1;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 326 Power of Three.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 326 Power of Three.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPowerOfThree(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)\\n",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPowerOfThree_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_isPowerOfThree_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 326 Power of Three.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=0;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPowerOfThree_int_directed_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPowerOfThree(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 326 Power of Three.cpp\\\\Solution\\\\isPowerOfThree(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 326 Power of Three.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=0;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 326 Power of Three.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 326 Power of Three.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPowerOfThree(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)\\n",
                                    "correspondingType": "int",
                                    "value": "6"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPowerOfThree_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_isPowerOfThree_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 326 Power of Three.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=6;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPowerOfThree_int_random_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPowerOfThree(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 326 Power of Three.cpp\\\\Solution\\\\isPowerOfThree(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 326 Power of Three.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=6;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isPowerOfThree(int n) {\r         if (n < 1) return false;\r         while (n % 3 == 0) {\r             n /= 3;\r         }\r         return n == 1;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 326 Power of Three.cpp\\Solution\\isPowerOfThree(int)"
    },
    {
        "f": [],
        "fm": "int minPatches(vector<int>& nums, int n) {\r         int i = 0, cnt = 0;\r         long miss = 1;\r         while (miss <= n) {\r             if (i < nums.size() && nums[i] <= miss) {\r                 miss += nums[i++];\r             } else {\r                 miss *= 2;\r                 cnt++;\r             }\r         }\r         return cnt;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 330 Patching Array.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 330 Patching Array.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minPatches(vector<int>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\n",
                                    "correspondingType": "int",
                                    "value": "8"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minPatches_vector_int_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_minPatches_vector_int_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 330 Patching Array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint n=8;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minPatches_vector_int_int_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minPatches(nums,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 330 Patching Array.cpp\\\\Solution\\\\minPatches(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 330 Patching Array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint n=8;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "LeetCode 330 Patching Array.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\json44\\LeetCode 330 Patching Array.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minPatches(vector<int>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "-1827546244"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "-27739264"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "188490978"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\n",
                                    "correspondingType": "int",
                                    "value": "1"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minPatches_vector_int_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_minPatches_vector_int_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 330 Patching Array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint n=1;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1827546244;\nnums.push_back(nums_element0);\nint nums_element1=-27739264;\nnums.push_back(nums_element1);\nint nums_element2=188490978;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minPatches_vector_int_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minPatches(nums,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\json44\\\\LeetCode 330 Patching Array.cpp\\\\Solution\\\\minPatches(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\LeetCode 330 Patching Array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint n=1;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1827546244;\nnums.push_back(nums_element0);\nint nums_element1=-27739264;\nnums.push_back(nums_element1);\nint nums_element2=188490978;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int minPatches(vector<int>& nums, int n) {\r         int i = 0, cnt = 0;\r         long miss = 1;\r         while (miss <= n) {\r             if (i < nums.size() && nums[i] <= miss) {\r                 miss += nums[i++];\r             } else {\r                 miss *= 2;\r                 cnt++;\r             }\r         }\r         return cnt;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\gremist_LeetCode\\json44\\LeetCode 330 Patching Array.cpp\\Solution\\minPatches(vector<int>&,int)"
    }
]
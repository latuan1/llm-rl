[
    {
        "f": [],
        "fm": "int findSubstringInWraproundString(string p) {\r         int n = p.size();\r         if (n == 0)\r             return 0;\r         vector<int> con(26, 0);\r         con[p[0] - 'a'] = 1;\r         int sum = 0, len = 1;\r         for (int i = 1; i < n; ++i) {\r             if ((p[i] == p[i - 1] + 1))\r                 con[p[i] - 'a'] = max(++len, con[p[i] - 'a']);\r             else if (p[i] == p[i - 1] - 25)\r                 con[0] = max(++len, con[0]);\r             else {\r                 con[p[i] - 'a'] = max(con[p[i] - 'a'], 1);\r                 len = 1;\r             }\r         }\r         for (int i = 0; i < 26; ++i)\r             sum += con[i];\r         return sum;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "467.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\467.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findSubstringInWraproundString(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "EXPECTED_p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "abc",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[0]",
                                            "virtual_name": "p[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[1]",
                                            "virtual_name": "p[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[1]",
                                            "correspondingType": "char",
                                            "value": "98"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[2]",
                                            "virtual_name": "p[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[2]",
                                            "correspondingType": "char",
                                            "value": "99"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findSubstringInWraproundString_string_manual_2(void) {\n{\nAKA_test_case_name=\"Solution_findSubstringInWraproundString_string_manual_2\";\n\n// set up\n;\n\n\n\nchar* akaRandomName716348 = new char[4];akaRandomName716348[0] = 97;akaRandomName716348[1] = 98;akaRandomName716348[2] = 99;akaRandomName716348[3] = '\\0';string p=akaRandomName716348;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findSubstringInWraproundString_string_manual_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findSubstringInWraproundString(p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\467.cpp\\\\Solution\\\\findSubstringInWraproundString(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nchar* akaRandomName681771 = new char[4];akaRandomName681771[0] = 97;akaRandomName681771[1] = 98;akaRandomName681771[2] = 99;akaRandomName681771[3] = '\\0';string p=akaRandomName681771;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "467.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\467.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findSubstringInWraproundString(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "EXPECTED_p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "aaa",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[0]",
                                            "virtual_name": "p[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[1]",
                                            "virtual_name": "p[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[1]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[2]",
                                            "virtual_name": "p[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[2]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findSubstringInWraproundString_string_manual_3(void) {\n{\nAKA_test_case_name=\"Solution_findSubstringInWraproundString_string_manual_3\";\n\n// set up\n;\n\n\n\nchar* akaRandomName246333 = new char[4];akaRandomName246333[0] = 97;akaRandomName246333[1] = 97;akaRandomName246333[2] = 97;akaRandomName246333[3] = '\\0';string p=akaRandomName246333;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findSubstringInWraproundString_string_manual_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findSubstringInWraproundString(p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\467.cpp\\\\Solution\\\\findSubstringInWraproundString(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nchar* akaRandomName595283 = new char[4];akaRandomName595283[0] = 97;akaRandomName595283[1] = 97;akaRandomName595283[2] = 97;akaRandomName595283[3] = '\\0';string p=akaRandomName595283;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "467.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\467.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\folder_44\\467.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findSubstringInWraproundString(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "EXPECTED_p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[0]",
                                            "virtual_name": "p[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[0]",
                                            "correspondingType": "char",
                                            "value": "-26"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findSubstringInWraproundString_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_findSubstringInWraproundString_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\467.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName933847 = new char[2];akaRandomName933847[0] = -26;akaRandomName933847[1] = '\\0';string p=akaRandomName933847;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findSubstringInWraproundString_string_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findSubstringInWraproundString(p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\467.cpp\\\\Solution\\\\findSubstringInWraproundString(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\467.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName767042 = new char[2];akaRandomName767042[0] = -26;akaRandomName767042[1] = '\\0';string p=akaRandomName767042;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "467.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\467.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findSubstringInWraproundString(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "EXPECTED_p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findSubstringInWraproundString_string_manual_0(void) {\n{\nAKA_test_case_name=\"Solution_findSubstringInWraproundString_string_manual_0\";\n\n// set up\n;\n\n\n\nstring p=\"\";\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findSubstringInWraproundString_string_manual_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findSubstringInWraproundString(p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\467.cpp\\\\Solution\\\\findSubstringInWraproundString(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nstring p=\"\";\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "467.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\467.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findSubstringInWraproundString(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "EXPECTED_p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "a",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[0]",
                                            "virtual_name": "p[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findSubstringInWraproundString_string_manual_1(void) {\n{\nAKA_test_case_name=\"Solution_findSubstringInWraproundString_string_manual_1\";\n\n// set up\n;\n\n\n\nchar* akaRandomName553386 = new char[2];akaRandomName553386[0] = 97;akaRandomName553386[1] = '\\0';string p=akaRandomName553386;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findSubstringInWraproundString_string_manual_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findSubstringInWraproundString(p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\467.cpp\\\\Solution\\\\findSubstringInWraproundString(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nchar* akaRandomName233384 = new char[2];akaRandomName233384[0] = 97;akaRandomName233384[1] = '\\0';string p=akaRandomName233384;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "467.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\467.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findSubstringInWraproundString(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "EXPECTED_p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "zabcdefgxyza",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[0]",
                                            "virtual_name": "p[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[0]",
                                            "correspondingType": "char",
                                            "value": "122"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[1]",
                                            "virtual_name": "p[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[1]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[2]",
                                            "virtual_name": "p[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[2]",
                                            "correspondingType": "char",
                                            "value": "98"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[3]",
                                            "virtual_name": "p[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[3]",
                                            "correspondingType": "char",
                                            "value": "99"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[4]",
                                            "virtual_name": "p[4]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[4]",
                                            "correspondingType": "char",
                                            "value": "100"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[5]",
                                            "virtual_name": "p[5]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[5]",
                                            "correspondingType": "char",
                                            "value": "101"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[6]",
                                            "virtual_name": "p[6]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[6]",
                                            "correspondingType": "char",
                                            "value": "102"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[7]",
                                            "virtual_name": "p[7]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[7]",
                                            "correspondingType": "char",
                                            "value": "103"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[8]",
                                            "virtual_name": "p[8]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[8]",
                                            "correspondingType": "char",
                                            "value": "120"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[9]",
                                            "virtual_name": "p[9]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[9]",
                                            "correspondingType": "char",
                                            "value": "121"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[10]",
                                            "virtual_name": "p[10]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[10]",
                                            "correspondingType": "char",
                                            "value": "122"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[11]",
                                            "virtual_name": "p[11]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[11]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findSubstringInWraproundString_string_manual_6(void) {\n{\nAKA_test_case_name=\"Solution_findSubstringInWraproundString_string_manual_6\";\n\n// set up\n;\n\n\n\nchar* akaRandomName543797 = new char[13];akaRandomName543797[0] = 122;akaRandomName543797[1] = 97;akaRandomName543797[2] = 98;akaRandomName543797[3] = 99;akaRandomName543797[4] = 100;akaRandomName543797[5] = 101;akaRandomName543797[6] = 102;akaRandomName543797[7] = 103;akaRandomName543797[8] = 120;akaRandomName543797[9] = 121;akaRandomName543797[10] = 122;akaRandomName543797[11] = 97;akaRandomName543797[12] = '\\0';string p=akaRandomName543797;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findSubstringInWraproundString_string_manual_6\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findSubstringInWraproundString(p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\467.cpp\\\\Solution\\\\findSubstringInWraproundString(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nchar* akaRandomName571777 = new char[13];akaRandomName571777[0] = 122;akaRandomName571777[1] = 97;akaRandomName571777[2] = 98;akaRandomName571777[3] = 99;akaRandomName571777[4] = 100;akaRandomName571777[5] = 101;akaRandomName571777[6] = 102;akaRandomName571777[7] = 103;akaRandomName571777[8] = 120;akaRandomName571777[9] = 121;akaRandomName571777[10] = 122;akaRandomName571777[11] = 97;akaRandomName571777[12] = '\\0';string p=akaRandomName571777;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "467.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\467.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findSubstringInWraproundString(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "EXPECTED_p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "zab",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[0]",
                                            "virtual_name": "p[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[0]",
                                            "correspondingType": "char",
                                            "value": "122"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[1]",
                                            "virtual_name": "p[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[1]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[2]",
                                            "virtual_name": "p[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[2]",
                                            "correspondingType": "char",
                                            "value": "98"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findSubstringInWraproundString_string_manual_4(void) {\n{\nAKA_test_case_name=\"Solution_findSubstringInWraproundString_string_manual_4\";\n\n// set up\n;\n\n\n\nchar* akaRandomName193301 = new char[4];akaRandomName193301[0] = 122;akaRandomName193301[1] = 97;akaRandomName193301[2] = 98;akaRandomName193301[3] = '\\0';string p=akaRandomName193301;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findSubstringInWraproundString_string_manual_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findSubstringInWraproundString(p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\467.cpp\\\\Solution\\\\findSubstringInWraproundString(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nchar* akaRandomName243831 = new char[4];akaRandomName243831[0] = 122;akaRandomName243831[1] = 97;akaRandomName243831[2] = 98;akaRandomName243831[3] = '\\0';string p=akaRandomName243831;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "467.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\467.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\467.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findSubstringInWraproundString(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "EXPECTED_p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "p",
                                    "virtual_name": "p",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p",
                                    "correspondingType": "string",
                                    "value": "acdf",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[0]",
                                            "virtual_name": "p[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[0]",
                                            "correspondingType": "char",
                                            "value": "97"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[1]",
                                            "virtual_name": "p[1]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[1]",
                                            "correspondingType": "char",
                                            "value": "99"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[2]",
                                            "virtual_name": "p[2]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[2]",
                                            "correspondingType": "char",
                                            "value": "100"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "p[3]",
                                            "virtual_name": "p[3]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\p\\p[3]",
                                            "correspondingType": "char",
                                            "value": "102"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findSubstringInWraproundString_string_manual_5(void) {\n{\nAKA_test_case_name=\"Solution_findSubstringInWraproundString_string_manual_5\";\n\n// set up\n;\n\n\n\nchar* akaRandomName972439 = new char[5];akaRandomName972439[0] = 97;akaRandomName972439[1] = 99;akaRandomName972439[2] = 100;akaRandomName972439[3] = 102;akaRandomName972439[4] = '\\0';string p=akaRandomName972439;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findSubstringInWraproundString_string_manual_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findSubstringInWraproundString(p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\467.cpp\\\\Solution\\\\findSubstringInWraproundString(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nchar* akaRandomName313963 = new char[5];akaRandomName313963[0] = 97;akaRandomName313963[1] = 99;akaRandomName313963[2] = 100;akaRandomName313963[3] = 102;akaRandomName313963[4] = '\\0';string p=akaRandomName313963;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int findSubstringInWraproundString(string p) {\r         int n = p.size();\r         if (n == 0)\r             return 0;\r         vector<int> con(26, 0);\r         con[p[0] - 'a'] = 1;\r         int sum = 0, len = 1;\r         for (int i = 1; i < n; ++i) {\r             if ((p[i] == p[i - 1] + 1))\r                 con[p[i] - 'a'] = max(++len, con[p[i] - 'a']);\r             else if (p[i] == p[i - 1] - 25)\r                 con[0] = max(++len, con[0]);\r             else {\r                 con[p[i] - 'a'] = max(con[p[i] - 'a'], 1);\r                 len = 1;\r             }\r         }\r         for (int i = 0; i < 26; ++i)\r             sum += con[i];\r         return sum;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "E:\\OneDrive - vnu.edu.vn\\test\\folder_44\\467.cpp\\Solution\\findSubstringInWraproundString(string)"
    },
    {
        "f": [
            "vector<int> visited;"
        ],
        "fm": "vector<vector<int>> permuteUnique(vector<int> &nums) {\r         int n = nums.size();\r         vector<vector<int>> ret;\r         if (n == 0)\r             return ret;\r         sort(nums.begin(), nums.end());\r         visited = vector<int>(n, 0);\r         vector<int> temp;\r         BackTracking(nums, 0, n, ret, temp);\r         return ret;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "47.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\47.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\47.cpp\\Solution\\permuteUnique(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\47.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\47.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\folder_44\\47.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                    "name": "visited",
                                                    "virtual_name": "AKA_INSTANCE___Solution->visited",
                                                    "dataType": "vector<int>",
                                                    "realType": "vector<int>",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\visited",
                                                    "correspondingType": "STLListBaseType",
                                                    "templateArg": "int"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "permuteUnique(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": ".\\folder_44\\47.cpp\\Solution\\permuteUnique(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\permuteUnique(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\47.cpp\\Solution\\permuteUnique(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\permuteUnique(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\permuteUnique(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "100177098"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\permuteUnique(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "558970815"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\permuteUnique(vector<int>&)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_permuteUnique_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_permuteUnique_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\47.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* VectorDataNode visited */\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=100177098;\nnums.push_back(nums_element0);\nint nums_element1=558970815;\nnums.push_back(nums_element1);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_permuteUnique_vector_int_random_3\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->permuteUnique(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\47.cpp\\\\Solution\\\\permuteUnique(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\47.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* VectorDataNode visited */\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=100177098;\nnums.push_back(nums_element0);\nint nums_element1=558970815;\nnums.push_back(nums_element1);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<vector<int>> permuteUnique(vector<int> &nums) {\r         int n = nums.size();\r         vector<vector<int>> ret;\r         if (n == 0)\r             return ret;\r         sort(nums.begin(), nums.end());\r         visited = vector<int>(n, 0);\r         vector<int> temp;\r         BackTracking(nums, 0, n, ret, temp);\r         return ret;\r     }\r \r     void BackTracking(vector<int> &nums, int i, int &n, vector<vector<int>> &ret, vector<int> temp) {\r         if (temp.size() == n) {\r             ret.push_back(temp);\r             return;\r         }\r         for (int j = 0; j < n; ++j) {\r             if (j > 0 && nums[j] == nums[j - 1] && visited[j - 1] == 0)\r                 continue;\r             if (visited[j] == 0) {\r                 temp.push_back(nums[j]);\r                 visited[j] = 1;\r                 BackTracking(nums, j + 1, n, ret, temp);\r                 visited[j] = 0;\r                 temp.pop_back();\r             }\r         }\r     }\r \r private:\r     vector<int> visited;\r };",
        "c": [
            ""
        ],
        "path_fm": "E:\\OneDrive - vnu.edu.vn\\test\\folder_44\\47.cpp\\Solution\\permuteUnique(vector<int>&)"
    },
    {
        "f": [
            "vector<int> visited;"
        ],
        "fm": "void BackTracking(vector<int> &nums, int i, int &n, vector<vector<int>> &ret, vector<int> temp) {\r         if (temp.size() == n) {\r             ret.push_back(temp);\r             return;\r         }\r         for (int j = 0; j < n; ++j) {\r             if (j > 0 && nums[j] == nums[j - 1] && visited[j - 1] == 0)\r                 continue;\r             if (visited[j] == 0) {\r                 temp.push_back(nums[j]);\r                 visited[j] = 1;\r                 BackTracking(nums, j + 1, n, ret, temp);\r                 visited[j] = 0;\r                 temp.pop_back();\r             }\r         }\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "47.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\47.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\47.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\47.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\folder_44\\47.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                    "name": "visited",
                                                    "virtual_name": "AKA_INSTANCE___Solution->visited",
                                                    "dataType": "vector<int>",
                                                    "realType": "vector<int>",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\visited",
                                                    "correspondingType": "STLListBaseType",
                                                    "templateArg": "int"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "i",
                                    "virtual_name": "EXPECTED_i",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\i",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "temp",
                                    "virtual_name": "EXPECTED_temp",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\temp",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int&",
                                    "realType": "int&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\n",
                                    "correspondingType": "int&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "ret",
                                    "virtual_name": "EXPECTED_ret",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\ret",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "1944244806"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "1349210274"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "-1527465087"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "i",
                                    "virtual_name": "i",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\i",
                                    "correspondingType": "int",
                                    "value": "627463422"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int&",
                                    "realType": "int&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\n",
                                    "correspondingType": "int&",
                                    "value": "8"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "ret",
                                    "virtual_name": "ret",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\ret",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "ret_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\ret\\element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "ret_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\ret\\element #0\\element #0",
                                                    "correspondingType": "int",
                                                    "value": "-1779304814"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "temp",
                                    "virtual_name": "temp",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\temp",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "temp_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\\temp\\element #0",
                                            "correspondingType": "int",
                                            "value": "-774197333"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_BackTracking_vector_int_int_int_vector_vector_int_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_BackTracking_vector_int_int_int_vector_vector_int_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\47.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* VectorDataNode visited */\n\n\nvector<int> nums;\n\n\nint i=627463422;\n\n\nint n=8;\nvector<vector<int>> ret;\nvector<int> temp;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1944244806;\nnums.push_back(nums_element0);\nint nums_element1=1349210274;\nnums.push_back(nums_element1);\nint nums_element2=-1527465087;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode i */\n/* NormalNumberDataNode n */\n/* VectorDataNode ret */\nvector<int> ret_element0;\nint ret_element0_element0=-1779304814;\nret_element0.push_back(ret_element0_element0);\nret.push_back(ret_element0);\n/* VectorDataNode temp */\nint temp_element0=-774197333;\ntemp.push_back(temp_element0);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_BackTracking_vector_int_int_int_vector_vector_int_vector_int_random_4\");AKA_INSTANCE___Solution->BackTracking(nums,i,n,ret,temp);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\47.cpp\\\\Solution\\\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)\");\n\n/* error assertion */\nvector<int> EXPECTED_nums;\n\nvector<vector<int>> EXPECTED_ret;\n\nvector<int> EXPECTED_temp;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\47.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* VectorDataNode visited */\n\n\nvector<int> nums;\n\n\nint i=627463422;\n\n\nint n=8;\nvector<vector<int>> ret;\nvector<int> temp;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1944244806;\nnums.push_back(nums_element0);\nint nums_element1=1349210274;\nnums.push_back(nums_element1);\nint nums_element2=-1527465087;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode i */\n/* NormalNumberDataNode n */\n/* VectorDataNode ret */\nvector<int> ret_element0;\nint ret_element0_element0=-1779304814;\nret_element0.push_back(ret_element0_element0);\nret.push_back(ret_element0);\n/* VectorDataNode temp */\nint temp_element0=-774197333;\ntemp.push_back(temp_element0);\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<vector<int>> permuteUnique(vector<int> &nums) {\r         int n = nums.size();\r         vector<vector<int>> ret;\r         if (n == 0)\r             return ret;\r         sort(nums.begin(), nums.end());\r         visited = vector<int>(n, 0);\r         vector<int> temp;\r         BackTracking(nums, 0, n, ret, temp);\r         return ret;\r     }\r \r     void BackTracking(vector<int> &nums, int i, int &n, vector<vector<int>> &ret, vector<int> temp) {\r         if (temp.size() == n) {\r             ret.push_back(temp);\r             return;\r         }\r         for (int j = 0; j < n; ++j) {\r             if (j > 0 && nums[j] == nums[j - 1] && visited[j - 1] == 0)\r                 continue;\r             if (visited[j] == 0) {\r                 temp.push_back(nums[j]);\r                 visited[j] = 1;\r                 BackTracking(nums, j + 1, n, ret, temp);\r                 visited[j] = 0;\r                 temp.pop_back();\r             }\r         }\r     }\r \r private:\r     vector<int> visited;\r };",
        "c": [
            ""
        ],
        "path_fm": "E:\\OneDrive - vnu.edu.vn\\test\\folder_44\\47.cpp\\Solution\\BackTracking(vector<int>&,int,int&,vector<vector<int>>&,vector<int>)"
    },
    {
        "f": [],
        "fm": "bool makesquare(vector<int> &nums) {\r         int n = nums.size();\r         int len = 0, s = 4;\r         sort(nums.begin(), nums.end(), greater<int>()); // !\r         for (int i = 0; i < n; ++i)\r             len += nums[i];\r         if (n < 4 || len % 4 != 0 || nums[0] > len)\r             return false;\r         len /= 4;\r         vector<int> side(4, 0);\r         return DFS(0, nums, side, len);\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "473.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\473.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\473.cpp\\Solution\\makesquare(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\473.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\473.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\folder_44\\473.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "makesquare(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\folder_44\\473.cpp\\Solution\\makesquare(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\makesquare(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\473.cpp\\Solution\\makesquare(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\makesquare(vector<int>&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\makesquare(vector<int>&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "2019113824"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\makesquare(vector<int>&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "-1213805319"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\makesquare(vector<int>&)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_makesquare_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_makesquare_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\473.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=2019113824;\nnums.push_back(nums_element0);\nint nums_element1=-1213805319;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_makesquare_vector_int_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->makesquare(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\473.cpp\\\\Solution\\\\makesquare(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\473.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=2019113824;\nnums.push_back(nums_element0);\nint nums_element1=-1213805319;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool makesquare(vector<int> &nums) {\r         int n = nums.size();\r         int len = 0, s = 4;\r         sort(nums.begin(), nums.end(), greater<int>()); // !\r         for (int i = 0; i < n; ++i)\r             len += nums[i];\r         if (n < 4 || len % 4 != 0 || nums[0] > len)\r             return false;\r         len /= 4;\r         vector<int> side(4, 0);\r         return DFS(0, nums, side, len);\r     }\r \r     bool DFS(int m, vector<int> &nums, vector<int> &side, int &len) {\r         if (m == nums.size()) {\r             for (int i = 1; i < 4; ++i)\r                 if (side[i - 1] != side[i])\r                     return false;\r             return true;\r         }\r         for (int i = 0; i < 4; ++i) {\r             side[i] += nums[m];\r             if (side[i] <= len)\r                 if (DFS(m + 1, nums, side, len))\r                     return true;\r             side[i] -= nums[m];\r             if (side[i] == 0) // !\r                 return false;\r         }\r         return false;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "E:\\OneDrive - vnu.edu.vn\\test\\folder_44\\473.cpp\\Solution\\makesquare(vector<int>&)"
    },
    {
        "f": [],
        "fm": "bool DFS(int m, vector<int> &nums, vector<int> &side, int &len) {\r         if (m == nums.size()) {\r             for (int i = 1; i < 4; ++i)\r                 if (side[i - 1] != side[i])\r                     return false;\r             return true;\r         }\r         for (int i = 0; i < 4; ++i) {\r             side[i] += nums[m];\r             if (side[i] <= len)\r                 if (DFS(m + 1, nums, side, len))\r                     return true;\r             side[i] -= nums[m];\r             if (side[i] == 0) // !\r                 return false;\r         }\r         return false;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "473.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\473.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\473.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\473.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\folder_44\\473.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "DFS(int,vector<int>&,vector<int>&,int&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "EXPECTED_m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\m",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "EXPECTED_len",
                                    "dataType": "int&",
                                    "realType": "int&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\len",
                                    "correspondingType": "int&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "side",
                                    "virtual_name": "EXPECTED_side",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\side",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\m",
                                    "correspondingType": "int",
                                    "value": "1867999887"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\nums\\element #0",
                                            "correspondingType": "int",
                                            "value": "106663557"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\nums\\element #1",
                                            "correspondingType": "int",
                                            "value": "277299548"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\nums\\element #2",
                                            "correspondingType": "int",
                                            "value": "-1899516536"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "side",
                                    "virtual_name": "side",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\side",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "side_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\side\\element #0",
                                            "correspondingType": "int",
                                            "value": "27040593"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "side_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\side\\element #1",
                                            "correspondingType": "int",
                                            "value": "103448837"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "len",
                                    "virtual_name": "len",
                                    "dataType": "int&",
                                    "realType": "int&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\len",
                                    "correspondingType": "int&",
                                    "value": "-1610187112"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_DFS_int_vector_int_vector_int_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_DFS_int_vector_int_vector_int_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\473.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint m=1867999887;\nvector<int> nums;\nvector<int> side;\n\n\nint len=-1610187112;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode m */\n/* VectorDataNode nums */\nint nums_element0=106663557;\nnums.push_back(nums_element0);\nint nums_element1=277299548;\nnums.push_back(nums_element1);\nint nums_element2=-1899516536;\nnums.push_back(nums_element2);\n/* VectorDataNode side */\nint side_element0=27040593;\nside.push_back(side_element0);\nint side_element1=103448837;\nside.push_back(side_element1);\n/* NormalNumberDataNode len */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_DFS_int_vector_int_vector_int_int_random_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->DFS(m,nums,side,len);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\473.cpp\\\\Solution\\\\DFS(int,vector<int>&,vector<int>&,int&)\");\n\n\nvector<int> EXPECTED_nums;\n\nvector<int> EXPECTED_side;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\473.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint m=1867999887;\nvector<int> nums;\nvector<int> side;\n\n\nint len=-1610187112;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode m */\n/* VectorDataNode nums */\nint nums_element0=106663557;\nnums.push_back(nums_element0);\nint nums_element1=277299548;\nnums.push_back(nums_element1);\nint nums_element2=-1899516536;\nnums.push_back(nums_element2);\n/* VectorDataNode side */\nint side_element0=27040593;\nside.push_back(side_element0);\nint side_element1=103448837;\nside.push_back(side_element1);\n/* NormalNumberDataNode len */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool makesquare(vector<int> &nums) {\r         int n = nums.size();\r         int len = 0, s = 4;\r         sort(nums.begin(), nums.end(), greater<int>()); // !\r         for (int i = 0; i < n; ++i)\r             len += nums[i];\r         if (n < 4 || len % 4 != 0 || nums[0] > len)\r             return false;\r         len /= 4;\r         vector<int> side(4, 0);\r         return DFS(0, nums, side, len);\r     }\r \r     bool DFS(int m, vector<int> &nums, vector<int> &side, int &len) {\r         if (m == nums.size()) {\r             for (int i = 1; i < 4; ++i)\r                 if (side[i - 1] != side[i])\r                     return false;\r             return true;\r         }\r         for (int i = 0; i < 4; ++i) {\r             side[i] += nums[m];\r             if (side[i] <= len)\r                 if (DFS(m + 1, nums, side, len))\r                     return true;\r             side[i] -= nums[m];\r             if (side[i] == 0) // !\r                 return false;\r         }\r         return false;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "E:\\OneDrive - vnu.edu.vn\\test\\folder_44\\473.cpp\\Solution\\DFS(int,vector<int>&,vector<int>&,int&)"
    },
    {
        "f": [],
        "fm": "int findMaxForm(vector<string> &strs, int m, int n) {\r         int size = strs.size();\r         if (size == 0) return 0;\r         vector<vector<int>> dp(m + 1, vector<int>(n + 1, 0));\r         for (int k = 0; k < strs.size(); ++k) {\r             int num0 = 0, num1 = 0;\r             for (int j = 0; j < strs[k].size(); ++j) {\r                 if (strs[k][j] == '0')\r                     ++num0;\r                 else\r                     ++num1;\r             }\r \r             for(int i = m; i >= num0; --i)\r                 for(int j = n; j >= num1; --j)\r                     dp[i][j] = max(dp[i][j], dp[i - num0][j-num1] + 1);\r         }\r \r         return dp[m][n];\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "474.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\474.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMaxForm(vector<string>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "EXPECTED_strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "EXPECTED_m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 0
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "5"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMaxForm_vector_string_int_int_manual_0(void) {\n{\nAKA_test_case_name=\"Solution_findMaxForm_vector_string_int_int_manual_0\";\n\n// set up\n;\n\n\n\nvector<string> strs;\n\n\nint m=5;\n\n\nint n=3;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMaxForm_vector_string_int_int_manual_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMaxForm(strs,m,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\474.cpp\\\\Solution\\\\findMaxForm(vector<string>&,int,int)\");\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nvector<string> strs;\n\n\nint m=5;\n\n\nint n=3;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "474.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\474.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\folder_44\\474.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMaxForm(vector<string>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "EXPECTED_strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "EXPECTED_m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "strs_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "strs_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "29"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "strs_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1",
                                            "correspondingType": "string",
                                            "value": "2",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "strs_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "0"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "1"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMaxForm_vector_string_int_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_findMaxForm_vector_string_int_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\474.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\n\n\nint m=1;\n\n\nint n=3;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName726648 = new char[2];akaRandomName726648[0] = 29;akaRandomName726648[1] = '\\0';string strs_element0=akaRandomName726648;\nstrs.push_back(strs_element0);\nchar* akaRandomName385895 = new char[2];akaRandomName385895[0] = 0;akaRandomName385895[1] = '\\0';string strs_element1=akaRandomName385895;\nstrs.push_back(strs_element1);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMaxForm_vector_string_int_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMaxForm(strs,m,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\474.cpp\\\\Solution\\\\findMaxForm(vector<string>&,int,int)\");\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\474.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\n\n\nint m=1;\n\n\nint n=3;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName326974 = new char[2];akaRandomName326974[0] = 29;akaRandomName326974[1] = '\\0';string strs_element0=akaRandomName326974;\nstrs.push_back(strs_element0);\nchar* akaRandomName137072 = new char[2];akaRandomName137072[0] = 0;akaRandomName137072[1] = '\\0';string strs_element1=akaRandomName137072;\nstrs.push_back(strs_element1);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "474.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\474.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMaxForm(vector<string>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "EXPECTED_m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "EXPECTED_strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "strs_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0",
                                            "correspondingType": "string",
                                            "value": "111111",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "strs_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[1]",
                                                    "virtual_name": "strs_element0[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[1]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[2]",
                                                    "virtual_name": "strs_element0[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[2]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[3]",
                                                    "virtual_name": "strs_element0[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[3]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[4]",
                                                    "virtual_name": "strs_element0[4]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[4]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[5]",
                                                    "virtual_name": "strs_element0[5]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[5]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "strs_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1",
                                            "correspondingType": "string",
                                            "value": "000000",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "strs_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[1]",
                                                    "virtual_name": "strs_element1[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[1]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[2]",
                                                    "virtual_name": "strs_element1[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[2]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[3]",
                                                    "virtual_name": "strs_element1[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[3]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[4]",
                                                    "virtual_name": "strs_element1[4]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[4]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[5]",
                                                    "virtual_name": "strs_element1[5]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[5]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMaxForm_vector_string_int_int_manual_6(void) {\n{\nAKA_test_case_name=\"Solution_findMaxForm_vector_string_int_int_manual_6\";\n\n// set up\n;\n\n\n\nvector<string> strs;\n\n\nint m=3;\n\n\nint n=3;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName163510 = new char[7];akaRandomName163510[0] = 49;akaRandomName163510[1] = 49;akaRandomName163510[2] = 49;akaRandomName163510[3] = 49;akaRandomName163510[4] = 49;akaRandomName163510[5] = 49;akaRandomName163510[6] = '\\0';string strs_element0=akaRandomName163510;\nstrs.push_back(strs_element0);\nchar* akaRandomName950464 = new char[7];akaRandomName950464[0] = 48;akaRandomName950464[1] = 48;akaRandomName950464[2] = 48;akaRandomName950464[3] = 48;akaRandomName950464[4] = 48;akaRandomName950464[5] = 48;akaRandomName950464[6] = '\\0';string strs_element1=akaRandomName950464;\nstrs.push_back(strs_element1);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMaxForm_vector_string_int_int_manual_6\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMaxForm(strs,m,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\474.cpp\\\\Solution\\\\findMaxForm(vector<string>&,int,int)\");\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nvector<string> strs;\n\n\nint m=3;\n\n\nint n=3;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName418918 = new char[7];akaRandomName418918[0] = 49;akaRandomName418918[1] = 49;akaRandomName418918[2] = 49;akaRandomName418918[3] = 49;akaRandomName418918[4] = 49;akaRandomName418918[5] = 49;akaRandomName418918[6] = '\\0';string strs_element0=akaRandomName418918;\nstrs.push_back(strs_element0);\nchar* akaRandomName964538 = new char[7];akaRandomName964538[0] = 48;akaRandomName964538[1] = 48;akaRandomName964538[2] = 48;akaRandomName964538[3] = 48;akaRandomName964538[4] = 48;akaRandomName964538[5] = 48;akaRandomName964538[6] = '\\0';string strs_element1=akaRandomName964538;\nstrs.push_back(strs_element1);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "474.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\474.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMaxForm(vector<string>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "EXPECTED_strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "EXPECTED_m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 5,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "strs_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0",
                                            "correspondingType": "string",
                                            "value": "10",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "strs_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[1]",
                                                    "virtual_name": "strs_element0[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[1]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "strs_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1",
                                            "correspondingType": "string",
                                            "value": "0001",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "strs_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[1]",
                                                    "virtual_name": "strs_element1[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[1]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[2]",
                                                    "virtual_name": "strs_element1[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[2]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[3]",
                                                    "virtual_name": "strs_element1[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[3]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #2",
                                            "virtual_name": "strs_element2",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2",
                                            "correspondingType": "string",
                                            "value": "11001",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[0]",
                                                    "virtual_name": "strs_element2[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[0]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[1]",
                                                    "virtual_name": "strs_element2[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[1]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[2]",
                                                    "virtual_name": "strs_element2[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[2]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[3]",
                                                    "virtual_name": "strs_element2[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[3]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[4]",
                                                    "virtual_name": "strs_element2[4]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[4]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #3",
                                            "virtual_name": "strs_element3",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #3",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #3[0]",
                                                    "virtual_name": "strs_element3[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #3\\element #3[0]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #4",
                                            "virtual_name": "strs_element4",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #4",
                                            "correspondingType": "string",
                                            "value": "0",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #4[0]",
                                                    "virtual_name": "strs_element4[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #4\\element #4[0]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "5"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMaxForm_vector_string_int_int_manual_5(void) {\n{\nAKA_test_case_name=\"Solution_findMaxForm_vector_string_int_int_manual_5\";\n\n// set up\n;\n\n\n\nvector<string> strs;\n\n\nint m=5;\n\n\nint n;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName179889 = new char[3];akaRandomName179889[0] = 49;akaRandomName179889[1] = 48;akaRandomName179889[2] = '\\0';string strs_element0=akaRandomName179889;\nstrs.push_back(strs_element0);\nchar* akaRandomName866119 = new char[5];akaRandomName866119[0] = 48;akaRandomName866119[1] = 48;akaRandomName866119[2] = 48;akaRandomName866119[3] = 49;akaRandomName866119[4] = '\\0';string strs_element1=akaRandomName866119;\nstrs.push_back(strs_element1);\nchar* akaRandomName647169 = new char[6];akaRandomName647169[0] = 49;akaRandomName647169[1] = 49;akaRandomName647169[2] = 48;akaRandomName647169[3] = 48;akaRandomName647169[4] = 49;akaRandomName647169[5] = '\\0';string strs_element2=akaRandomName647169;\nstrs.push_back(strs_element2);\nchar* akaRandomName785807 = new char[2];akaRandomName785807[0] = 49;akaRandomName785807[1] = '\\0';string strs_element3=akaRandomName785807;\nstrs.push_back(strs_element3);\nchar* akaRandomName729954 = new char[2];akaRandomName729954[0] = 48;akaRandomName729954[1] = '\\0';string strs_element4=akaRandomName729954;\nstrs.push_back(strs_element4);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMaxForm_vector_string_int_int_manual_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMaxForm(strs,m,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\474.cpp\\\\Solution\\\\findMaxForm(vector<string>&,int,int)\");\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nvector<string> strs;\n\n\nint m=5;\n\n\nint n;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName725916 = new char[3];akaRandomName725916[0] = 49;akaRandomName725916[1] = 48;akaRandomName725916[2] = '\\0';string strs_element0=akaRandomName725916;\nstrs.push_back(strs_element0);\nchar* akaRandomName607453 = new char[5];akaRandomName607453[0] = 48;akaRandomName607453[1] = 48;akaRandomName607453[2] = 48;akaRandomName607453[3] = 49;akaRandomName607453[4] = '\\0';string strs_element1=akaRandomName607453;\nstrs.push_back(strs_element1);\nchar* akaRandomName697440 = new char[6];akaRandomName697440[0] = 49;akaRandomName697440[1] = 49;akaRandomName697440[2] = 48;akaRandomName697440[3] = 48;akaRandomName697440[4] = 49;akaRandomName697440[5] = '\\0';string strs_element2=akaRandomName697440;\nstrs.push_back(strs_element2);\nchar* akaRandomName341708 = new char[2];akaRandomName341708[0] = 49;akaRandomName341708[1] = '\\0';string strs_element3=akaRandomName341708;\nstrs.push_back(strs_element3);\nchar* akaRandomName922385 = new char[2];akaRandomName922385[0] = 48;akaRandomName922385[1] = '\\0';string strs_element4=akaRandomName922385;\nstrs.push_back(strs_element4);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "474.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\474.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMaxForm(vector<string>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "EXPECTED_strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "EXPECTED_m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "strs_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0",
                                            "correspondingType": "string",
                                            "value": "0",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "strs_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "strs_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1",
                                            "correspondingType": "string",
                                            "value": "00",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "strs_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[1]",
                                                    "virtual_name": "strs_element1[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[1]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #2",
                                            "virtual_name": "strs_element2",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2",
                                            "correspondingType": "string",
                                            "value": "000",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[0]",
                                                    "virtual_name": "strs_element2[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[0]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[1]",
                                                    "virtual_name": "strs_element2[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[1]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[2]",
                                                    "virtual_name": "strs_element2[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[2]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMaxForm_vector_string_int_int_manual_2(void) {\n{\nAKA_test_case_name=\"Solution_findMaxForm_vector_string_int_int_manual_2\";\n\n// set up\n;\n\n\n\nvector<string> strs;\n\n\nint m=3;\n\n\nint n=0;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName905901 = new char[2];akaRandomName905901[0] = 48;akaRandomName905901[1] = '\\0';string strs_element0=akaRandomName905901;\nstrs.push_back(strs_element0);\nchar* akaRandomName127354 = new char[3];akaRandomName127354[0] = 48;akaRandomName127354[1] = 48;akaRandomName127354[2] = '\\0';string strs_element1=akaRandomName127354;\nstrs.push_back(strs_element1);\nchar* akaRandomName371714 = new char[4];akaRandomName371714[0] = 48;akaRandomName371714[1] = 48;akaRandomName371714[2] = 48;akaRandomName371714[3] = '\\0';string strs_element2=akaRandomName371714;\nstrs.push_back(strs_element2);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMaxForm_vector_string_int_int_manual_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMaxForm(strs,m,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\474.cpp\\\\Solution\\\\findMaxForm(vector<string>&,int,int)\");\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nvector<string> strs;\n\n\nint m=3;\n\n\nint n=0;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName163104 = new char[2];akaRandomName163104[0] = 48;akaRandomName163104[1] = '\\0';string strs_element0=akaRandomName163104;\nstrs.push_back(strs_element0);\nchar* akaRandomName606687 = new char[3];akaRandomName606687[0] = 48;akaRandomName606687[1] = 48;akaRandomName606687[2] = '\\0';string strs_element1=akaRandomName606687;\nstrs.push_back(strs_element1);\nchar* akaRandomName610293 = new char[4];akaRandomName610293[0] = 48;akaRandomName610293[1] = 48;akaRandomName610293[2] = 48;akaRandomName610293[3] = '\\0';string strs_element2=akaRandomName610293;\nstrs.push_back(strs_element2);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "474.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\474.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMaxForm(vector<string>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "EXPECTED_strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "EXPECTED_m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 5,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "strs_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0",
                                            "correspondingType": "string",
                                            "value": "10",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "strs_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[1]",
                                                    "virtual_name": "strs_element0[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[1]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "strs_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1",
                                            "correspondingType": "string",
                                            "value": "0001",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "strs_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[1]",
                                                    "virtual_name": "strs_element1[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[1]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[2]",
                                                    "virtual_name": "strs_element1[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[2]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[3]",
                                                    "virtual_name": "strs_element1[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[3]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #2",
                                            "virtual_name": "strs_element2",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2",
                                            "correspondingType": "string",
                                            "value": "111001",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[0]",
                                                    "virtual_name": "strs_element2[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[0]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[1]",
                                                    "virtual_name": "strs_element2[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[1]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[2]",
                                                    "virtual_name": "strs_element2[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[2]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[3]",
                                                    "virtual_name": "strs_element2[3]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[3]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[4]",
                                                    "virtual_name": "strs_element2[4]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[4]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[5]",
                                                    "virtual_name": "strs_element2[5]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[5]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #3",
                                            "virtual_name": "strs_element3",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #3",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #3[0]",
                                                    "virtual_name": "strs_element3[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #3\\element #3[0]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #4",
                                            "virtual_name": "strs_element4",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #4",
                                            "correspondingType": "string",
                                            "value": "0",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #4[0]",
                                                    "virtual_name": "strs_element4[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #4\\element #4[0]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMaxForm_vector_string_int_int_manual_1(void) {\n{\nAKA_test_case_name=\"Solution_findMaxForm_vector_string_int_int_manual_1\";\n\n// set up\n;\n\n\n\nvector<string> strs;\n\n\nint m=0;\n\n\nint n=0;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName55959 = new char[3];akaRandomName55959[0] = 49;akaRandomName55959[1] = 48;akaRandomName55959[2] = '\\0';string strs_element0=akaRandomName55959;\nstrs.push_back(strs_element0);\nchar* akaRandomName795128 = new char[5];akaRandomName795128[0] = 48;akaRandomName795128[1] = 48;akaRandomName795128[2] = 48;akaRandomName795128[3] = 49;akaRandomName795128[4] = '\\0';string strs_element1=akaRandomName795128;\nstrs.push_back(strs_element1);\nchar* akaRandomName705442 = new char[7];akaRandomName705442[0] = 49;akaRandomName705442[1] = 49;akaRandomName705442[2] = 49;akaRandomName705442[3] = 48;akaRandomName705442[4] = 48;akaRandomName705442[5] = 49;akaRandomName705442[6] = '\\0';string strs_element2=akaRandomName705442;\nstrs.push_back(strs_element2);\nchar* akaRandomName394804 = new char[2];akaRandomName394804[0] = 49;akaRandomName394804[1] = '\\0';string strs_element3=akaRandomName394804;\nstrs.push_back(strs_element3);\nchar* akaRandomName650558 = new char[2];akaRandomName650558[0] = 48;akaRandomName650558[1] = '\\0';string strs_element4=akaRandomName650558;\nstrs.push_back(strs_element4);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMaxForm_vector_string_int_int_manual_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMaxForm(strs,m,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\474.cpp\\\\Solution\\\\findMaxForm(vector<string>&,int,int)\");\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nvector<string> strs;\n\n\nint m=0;\n\n\nint n=0;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName704515 = new char[3];akaRandomName704515[0] = 49;akaRandomName704515[1] = 48;akaRandomName704515[2] = '\\0';string strs_element0=akaRandomName704515;\nstrs.push_back(strs_element0);\nchar* akaRandomName948703 = new char[5];akaRandomName948703[0] = 48;akaRandomName948703[1] = 48;akaRandomName948703[2] = 48;akaRandomName948703[3] = 49;akaRandomName948703[4] = '\\0';string strs_element1=akaRandomName948703;\nstrs.push_back(strs_element1);\nchar* akaRandomName2360 = new char[7];akaRandomName2360[0] = 49;akaRandomName2360[1] = 49;akaRandomName2360[2] = 49;akaRandomName2360[3] = 48;akaRandomName2360[4] = 48;akaRandomName2360[5] = 49;akaRandomName2360[6] = '\\0';string strs_element2=akaRandomName2360;\nstrs.push_back(strs_element2);\nchar* akaRandomName487841 = new char[2];akaRandomName487841[0] = 49;akaRandomName487841[1] = '\\0';string strs_element3=akaRandomName487841;\nstrs.push_back(strs_element3);\nchar* akaRandomName789567 = new char[2];akaRandomName789567[0] = 48;akaRandomName789567[1] = '\\0';string strs_element4=akaRandomName789567;\nstrs.push_back(strs_element4);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 6,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "474.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\474.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMaxForm(vector<string>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "EXPECTED_strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "EXPECTED_m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "strs_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0",
                                            "correspondingType": "string",
                                            "value": "10",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "strs_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[1]",
                                                    "virtual_name": "strs_element0[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[1]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "strs_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1",
                                            "correspondingType": "string",
                                            "value": "01",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "strs_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[1]",
                                                    "virtual_name": "strs_element1[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[1]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #2",
                                            "virtual_name": "strs_element2",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2",
                                            "correspondingType": "string",
                                            "value": "10",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[0]",
                                                    "virtual_name": "strs_element2[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[0]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[1]",
                                                    "virtual_name": "strs_element2[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[1]",
                                                    "correspondingType": "char",
                                                    "value": "48"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMaxForm_vector_string_int_int_manual_4(void) {\n{\nAKA_test_case_name=\"Solution_findMaxForm_vector_string_int_int_manual_4\";\n\n// set up\n;\n\n\n\nvector<string> strs;\n\n\nint m=3;\n\n\nint n;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName684064 = new char[3];akaRandomName684064[0] = 49;akaRandomName684064[1] = 48;akaRandomName684064[2] = '\\0';string strs_element0=akaRandomName684064;\nstrs.push_back(strs_element0);\nchar* akaRandomName727944 = new char[3];akaRandomName727944[0] = 48;akaRandomName727944[1] = 49;akaRandomName727944[2] = '\\0';string strs_element1=akaRandomName727944;\nstrs.push_back(strs_element1);\nchar* akaRandomName371362 = new char[3];akaRandomName371362[0] = 49;akaRandomName371362[1] = 48;akaRandomName371362[2] = '\\0';string strs_element2=akaRandomName371362;\nstrs.push_back(strs_element2);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMaxForm_vector_string_int_int_manual_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMaxForm(strs,m,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\474.cpp\\\\Solution\\\\findMaxForm(vector<string>&,int,int)\");\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nvector<string> strs;\n\n\nint m=3;\n\n\nint n;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName275897 = new char[3];akaRandomName275897[0] = 49;akaRandomName275897[1] = 48;akaRandomName275897[2] = '\\0';string strs_element0=akaRandomName275897;\nstrs.push_back(strs_element0);\nchar* akaRandomName542684 = new char[3];akaRandomName542684[0] = 48;akaRandomName542684[1] = 49;akaRandomName542684[2] = '\\0';string strs_element1=akaRandomName542684;\nstrs.push_back(strs_element1);\nchar* akaRandomName816521 = new char[3];akaRandomName816521[0] = 49;akaRandomName816521[1] = 48;akaRandomName816521[2] = '\\0';string strs_element2=akaRandomName816521;\nstrs.push_back(strs_element2);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 7,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "474.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\474.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\474.cpp\\Solution"
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMaxForm(vector<string>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "EXPECTED_m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "EXPECTED_strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "strs",
                                    "virtual_name": "strs",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "strs_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "strs_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "strs_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1",
                                            "correspondingType": "string",
                                            "value": "11",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "strs_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[1]",
                                                    "virtual_name": "strs_element1[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #1\\element #1[1]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #2",
                                            "virtual_name": "strs_element2",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2",
                                            "correspondingType": "string",
                                            "value": "111",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[0]",
                                                    "virtual_name": "strs_element2[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[0]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[1]",
                                                    "virtual_name": "strs_element2[1]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[1]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #2[2]",
                                                    "virtual_name": "strs_element2[2]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\strs\\element #2\\element #2[2]",
                                                    "correspondingType": "char",
                                                    "value": "49"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "m",
                                    "virtual_name": "m",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\m",
                                    "correspondingType": "int",
                                    "value": "0"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\n",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMaxForm_vector_string_int_int_manual_3(void) {\n{\nAKA_test_case_name=\"Solution_findMaxForm_vector_string_int_int_manual_3\";\n\n// set up\n;\n\n\n\nvector<string> strs;\n\n\nint m=0;\n\n\nint n=3;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName195965 = new char[2];akaRandomName195965[0] = 49;akaRandomName195965[1] = '\\0';string strs_element0=akaRandomName195965;\nstrs.push_back(strs_element0);\nchar* akaRandomName348398 = new char[3];akaRandomName348398[0] = 49;akaRandomName348398[1] = 49;akaRandomName348398[2] = '\\0';string strs_element1=akaRandomName348398;\nstrs.push_back(strs_element1);\nchar* akaRandomName680076 = new char[4];akaRandomName680076[0] = 49;akaRandomName680076[1] = 49;akaRandomName680076[2] = 49;akaRandomName680076[3] = '\\0';string strs_element2=akaRandomName680076;\nstrs.push_back(strs_element2);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMaxForm_vector_string_int_int_manual_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMaxForm(strs,m,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\474.cpp\\\\Solution\\\\findMaxForm(vector<string>&,int,int)\");\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nvector<string> strs;\n\n\nint m=0;\n\n\nint n=3;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName19498 = new char[2];akaRandomName19498[0] = 49;akaRandomName19498[1] = '\\0';string strs_element0=akaRandomName19498;\nstrs.push_back(strs_element0);\nchar* akaRandomName486558 = new char[3];akaRandomName486558[0] = 49;akaRandomName486558[1] = 49;akaRandomName486558[2] = '\\0';string strs_element1=akaRandomName486558;\nstrs.push_back(strs_element1);\nchar* akaRandomName609983 = new char[4];akaRandomName609983[0] = 49;akaRandomName609983[1] = 49;akaRandomName609983[2] = 49;akaRandomName609983[3] = '\\0';string strs_element2=akaRandomName609983;\nstrs.push_back(strs_element2);\n/* NormalNumberDataNode m */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int findMaxForm(vector<string> &strs, int m, int n) {\r         int size = strs.size();\r         if (size == 0) return 0;\r         vector<vector<int>> dp(m + 1, vector<int>(n + 1, 0));\r         for (int k = 0; k < strs.size(); ++k) {\r             int num0 = 0, num1 = 0;\r             for (int j = 0; j < strs[k].size(); ++j) {\r                 if (strs[k][j] == '0')\r                     ++num0;\r                 else\r                     ++num1;\r             }\r \r             for(int i = m; i >= num0; --i)\r                 for(int j = n; j >= num1; --j)\r                     dp[i][j] = max(dp[i][j], dp[i - num0][j-num1] + 1);\r         }\r \r         return dp[m][n];\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "E:\\OneDrive - vnu.edu.vn\\test\\folder_44\\474.cpp\\Solution\\findMaxForm(vector<string>&,int,int)"
    },
    {
        "f": [],
        "fm": "int findRadius(vector<int> &H, vector<int> &T) {\r         int size = H.size(), size_heaters = T.size();\r         if (size == 0 || size_heaters == 0)\r             return 0;\r         sort(H.begin(), H.end());\r         sort(T.begin(), T.end());\r         vector<int> radius(size, -1);\r         for (int h = 0, t = 0; h < size && t < size_heaters;) {\r             if (T[t] < H[h])\r                 ++t;\r             else {\r                 radius[h] = T[t] - H[h];\r                 ++h;\r             }\r         }\r         for (int h = size - 1, t = size_heaters - 1; h >= 0 && t >= 0;) {\r             if (T[t] > H[h])\r                 --t;\r             else {\r                 radius[h] = radius[h] == -1 ? H[h] - T[t] : min(radius[h], H[h] - T[t]);\r                 --h;\r             }\r         }\r         return *max_element(radius.begin(), radius.end());\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "475.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\folder_44\\475.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\475.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\folder_44\\475.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\folder_44\\475.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findRadius(vector<int>&,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "T",
                                    "virtual_name": "EXPECTED_T",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)\\T",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "H",
                                    "virtual_name": "EXPECTED_H",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)\\H",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "H",
                                    "virtual_name": "H",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)\\H",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "H_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)\\H\\element #0",
                                            "correspondingType": "int",
                                            "value": "-1005072724"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "H_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)\\H\\element #1",
                                            "correspondingType": "int",
                                            "value": "1117990842"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "H_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)\\H\\element #2",
                                            "correspondingType": "int",
                                            "value": "-1481913985"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "T",
                                    "virtual_name": "T",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)\\T",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "T_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)\\T\\element #0",
                                            "correspondingType": "int",
                                            "value": "143106613"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "T_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)\\T\\element #1",
                                            "correspondingType": "int",
                                            "value": "1668750107"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "T_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)\\T\\element #2",
                                            "correspondingType": "int",
                                            "value": "1585031212"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findRadius_vector_int_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_findRadius_vector_int_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\475.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> H;\nvector<int> T;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode H */\nint H_element0=-1005072724;\nH.push_back(H_element0);\nint H_element1=1117990842;\nH.push_back(H_element1);\nint H_element2=-1481913985;\nH.push_back(H_element2);\n/* VectorDataNode T */\nint T_element0=143106613;\nT.push_back(T_element0);\nint T_element1=1668750107;\nT.push_back(T_element1);\nint T_element2=1585031212;\nT.push_back(T_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findRadius_vector_int_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findRadius(H,T);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_44\\\\475.cpp\\\\Solution\\\\findRadius(vector<int>&,vector<int>&)\");\n\n\nvector<int> EXPECTED_H;\n\nvector<int> EXPECTED_T;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\475.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> H;\nvector<int> T;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode H */\nint H_element0=-1005072724;\nH.push_back(H_element0);\nint H_element1=1117990842;\nH.push_back(H_element1);\nint H_element2=-1481913985;\nH.push_back(H_element2);\n/* VectorDataNode T */\nint T_element0=143106613;\nT.push_back(T_element0);\nint T_element1=1668750107;\nT.push_back(T_element1);\nint T_element2=1585031212;\nT.push_back(T_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int findRadius(vector<int> &H, vector<int> &T) {\r         int size = H.size(), size_heaters = T.size();\r         if (size == 0 || size_heaters == 0)\r             return 0;\r         sort(H.begin(), H.end());\r         sort(T.begin(), T.end());\r         vector<int> radius(size, -1);\r         for (int h = 0, t = 0; h < size && t < size_heaters;) {\r             if (T[t] < H[h])\r                 ++t;\r             else {\r                 radius[h] = T[t] - H[h];\r                 ++h;\r             }\r         }\r         for (int h = size - 1, t = size_heaters - 1; h >= 0 && t >= 0;) {\r             if (T[t] > H[h])\r                 --t;\r             else {\r                 radius[h] = radius[h] == -1 ? H[h] - T[t] : min(radius[h], H[h] - T[t]);\r                 --h;\r             }\r         }\r         return *max_element(radius.begin(), radius.end());\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "E:\\OneDrive - vnu.edu.vn\\test\\folder_44\\475.cpp\\Solution\\findRadius(vector<int>&,vector<int>&)"
    }
]
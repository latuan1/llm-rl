[
    {
        "f": [],
        "fm": "void reverseWords(string &s) {         stack<string> sstack;         int flag = 0;         string temp = \"\";         for(int i = 0; i < s.length(); i++) {             if(s[i] != ' ' && flag == 0) {                 temp = \"\";                 temp += s[i];                 flag = 1;             } else if(s[i] != ' ') {                 temp += s[i];             } else if(s[i] == ' ' && flag == 1){                 sstack.push(temp);                 flag = 0;             }             if(i == s.length() - 1 && flag == 1)                 sstack.push(temp);         }         s = \"\";         while(!sstack.empty()) {             string temp = sstack.top();             s += temp;             sstack.pop();             if(!sstack.empty())                 s += \" \";         }     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "151. Reverse Words in a String.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./2/151. Reverse Words in a String.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./2/151. Reverse Words in a String.cpp/Solution/reverseWords(string&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./2/151. Reverse Words in a String.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/151. Reverse Words in a String.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./2/151. Reverse Words in a String.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/151. Reverse Words in a String.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./2/151. Reverse Words in a String.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./2/151. Reverse Words in a String.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "reverseWords(string&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": "./2/151. Reverse Words in a String.cpp/Solution/reverseWords(string&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": "./2/151. Reverse Words in a String.cpp/Solution/reverseWords(string&)/s",
                                    "correspondingType": "string&",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./2/151. Reverse Words in a String.cpp/Solution/reverseWords(string&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": "./2/151. Reverse Words in a String.cpp/Solution/reverseWords(string&)/s",
                                    "correspondingType": "string&",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./2/151. Reverse Words in a String.cpp/Solution/reverseWords(string&)/s/s[0]",
                                            "correspondingType": "char",
                                            "value": "24"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_reverseWords_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_reverseWords_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/151. Reverse Words in a String.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName89896 = new char[2];akaRandomName89896[0] = 24;akaRandomName89896[1] = '\\0';string s=akaRandomName89896;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reverseWords_string_random_4\");AKA_INSTANCE___Solution->reverseWords(s);\nAKA_fCall++;AKA_mark(\"Return from: ./2/151. Reverse Words in a String.cpp/Solution/reverseWords(string&)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/151. Reverse Words in a String.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName57677 = new char[2];akaRandomName57677[0] = 24;akaRandomName57677[1] = '\\0';string s=akaRandomName57677;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     void reverseWords(string &s) {         stack<string> sstack;         int flag = 0;         string temp = \"\";         for(int i = 0; i < s.length(); i++) {             if(s[i] != ' ' && flag == 0) {                 temp = \"\";                 temp += s[i];                 flag = 1;             } else if(s[i] != ' ') {                 temp += s[i];             } else if(s[i] == ' ' && flag == 1){                 sstack.push(temp);                 flag = 0;             }             if(i == s.length() - 1 && flag == 1)                 sstack.push(temp);         }         s = \"\";         while(!sstack.empty()) {             string temp = sstack.top();             s += temp;             sstack.pop();             if(!sstack.empty())                 s += \" \";         }     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.01/2/151. Reverse Words in a String.cpp/Solution/reverseWords(string&)"
    },
    {
        "f": [],
        "fm": "int maxProduct(vector<int>& nums) {         if (nums.size() == 0) return 0;         int result = nums[0], maxValue = nums[0], minValue = nums[0];         for (int i = 1; i < nums.size(); i++) {             int tempMax = max(nums[i], maxValue * nums[i]);             int tempMin = min(nums[i], maxValue * nums[i]);             maxValue = max(tempMax, minValue * nums[i]);             minValue = min(tempMin, minValue * nums[i]);             result = max(maxValue, result);         }         return result;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "152. Maximum Product Subarray.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./2/152. Maximum Product Subarray.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./2/152. Maximum Product Subarray.cpp/Solution/maxProduct(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./2/152. Maximum Product Subarray.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/152. Maximum Product Subarray.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./2/152. Maximum Product Subarray.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/152. Maximum Product Subarray.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./2/152. Maximum Product Subarray.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./2/152. Maximum Product Subarray.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "maxProduct(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./2/152. Maximum Product Subarray.cpp/Solution/maxProduct(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/152. Maximum Product Subarray.cpp/Solution/maxProduct(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./2/152. Maximum Product Subarray.cpp/Solution/maxProduct(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/152. Maximum Product Subarray.cpp/Solution/maxProduct(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/152. Maximum Product Subarray.cpp/Solution/maxProduct(vector<int>&)/nums/element #0",
                                            "correspondingType": "int",
                                            "value": "-184298477"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/152. Maximum Product Subarray.cpp/Solution/maxProduct(vector<int>&)/nums/element #1",
                                            "correspondingType": "int",
                                            "value": "-738550749"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/152. Maximum Product Subarray.cpp/Solution/maxProduct(vector<int>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_maxProduct_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_maxProduct_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/152. Maximum Product Subarray.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-184298477;\nnums.push_back(nums_element0);\nint nums_element1=-738550749;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxProduct_vector_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxProduct(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./2/152. Maximum Product Subarray.cpp/Solution/maxProduct(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/152. Maximum Product Subarray.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-184298477;\nnums.push_back(nums_element0);\nint nums_element1=-738550749;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int maxProduct(vector<int>& nums) {         if (nums.size() == 0) return 0;         int result = nums[0], maxValue = nums[0], minValue = nums[0];         for (int i = 1; i < nums.size(); i++) {             int tempMax = max(nums[i], maxValue * nums[i]);             int tempMin = min(nums[i], maxValue * nums[i]);             maxValue = max(tempMax, minValue * nums[i]);             minValue = min(tempMin, minValue * nums[i]);             result = max(maxValue, result);         }         return result;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.01/2/152. Maximum Product Subarray.cpp/Solution/maxProduct(vector<int>&)"
    },
    {
        "f": [],
        "fm": "int findMin(vector<int>& nums) {         int low = 0, high = nums.size() - 1;         while(low < high) {             int mid = (low + high) / 2;             if(nums[mid] < nums[high])                 high = mid;             else                 low = mid + 1;         }         return nums[low];     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "153. Find Minimum in Rotated Sorted Array.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./2/153. Find Minimum in Rotated Sorted Array.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/findMin(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMin(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/findMin(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/findMin(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/findMin(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/findMin(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/findMin(vector<int>&)/nums/element #0",
                                            "correspondingType": "int",
                                            "value": "824864136"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/findMin(vector<int>&)/nums/element #1",
                                            "correspondingType": "int",
                                            "value": "-1379845541"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/findMin(vector<int>&)/nums/element #2",
                                            "correspondingType": "int",
                                            "value": "-1073202454"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/findMin(vector<int>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMin_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_findMin_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/153. Find Minimum in Rotated Sorted Array.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=824864136;\nnums.push_back(nums_element0);\nint nums_element1=-1379845541;\nnums.push_back(nums_element1);\nint nums_element2=-1073202454;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMin_vector_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMin(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/findMin(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/153. Find Minimum in Rotated Sorted Array.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=824864136;\nnums.push_back(nums_element0);\nint nums_element1=-1379845541;\nnums.push_back(nums_element1);\nint nums_element2=-1073202454;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int findMin(vector<int>& nums) {         int low = 0, high = nums.size() - 1;         while(low < high) {             int mid = (low + high) / 2;             if(nums[mid] < nums[high])                 high = mid;             else                 low = mid + 1;         }         return nums[low];     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.01/2/153. Find Minimum in Rotated Sorted Array.cpp/Solution/findMin(vector<int>&)"
    },
    {
        "f": [],
        "fm": "int getlength(ListNode *A) {         int len = 0;         while(A != NULL) {             len++;             A = A->next;         }         return len;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "160. Intersection of Two Linked Lists.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./2/160. Intersection of Two Linked Lists.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./2/160. Intersection of Two Linked Lists.cpp/Solution/getlength(ListNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/160. Intersection of Two Linked Lists.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/160. Intersection of Two Linked Lists.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./2/160. Intersection of Two Linked Lists.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "getlength(ListNode*)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./2/160. Intersection of Two Linked Lists.cpp/Solution/getlength(ListNode*)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "A",
                                    "virtual_name": "EXPECTED_A",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/Solution/getlength(ListNode*)/A",
                                    "correspondingType": "./2/160. Intersection of Two Linked Lists.cpp/ListNode",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./2/160. Intersection of Two Linked Lists.cpp/Solution/getlength(ListNode*)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "A",
                                    "virtual_name": "A",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/Solution/getlength(ListNode*)/A",
                                    "correspondingType": "./2/160. Intersection of Two Linked Lists.cpp/ListNode",
                                    "level": 1,
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "A[0]",
                                            "virtual_name": "A[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/Solution/getlength(ListNode*)/A/A[0]",
                                            "correspondingType": "./2/160. Intersection of Two Linked Lists.cpp/ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "A",
                                                    "virtual_name": "A[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/Solution/getlength(ListNode*)/A/A",
                                                    "correspondingType": "./2/160. Intersection of Two Linked Lists.cpp/ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "A[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": "./2/160. Intersection of Two Linked Lists.cpp/ListNode/ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "A0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/ListNode/ListNode(int)/x",
                                                                    "correspondingType": "int",
                                                                    "value": "1011843981"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "A[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/ListNode/val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "A[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/ListNode/next",
                                                            "correspondingType": "./2/160. Intersection of Two Linked Lists.cpp/ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "A[1]",
                                            "virtual_name": "A[1]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/Solution/getlength(ListNode*)/A/A[1]",
                                            "correspondingType": "./2/160. Intersection of Two Linked Lists.cpp/ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "A",
                                                    "virtual_name": "A[1]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/Solution/getlength(ListNode*)/A/A",
                                                    "correspondingType": "./2/160. Intersection of Two Linked Lists.cpp/ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "A[1]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": "./2/160. Intersection of Two Linked Lists.cpp/ListNode/ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "A1_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/ListNode/ListNode(int)/x",
                                                                    "correspondingType": "int",
                                                                    "value": "1807401372"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "A[1].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/ListNode/val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "A[1].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/ListNode/next",
                                                            "correspondingType": "./2/160. Intersection of Two Linked Lists.cpp/ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/160. Intersection of Two Linked Lists.cpp/Solution/getlength(ListNode*)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_getlength_ListNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_getlength_ListNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/160. Intersection of Two Linked Lists.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_A;\n\n\n/* SubStructDataNode A */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint A0_x=1011843981;\nAKA_mark(\"Calling: ./2/160. Intersection of Two Linked Lists.cpp/ListNode/ListNode(int)|ROOT/160. Intersection of Two Linked Lists.cpp/getlength(ListNode*)/A/AKA_VECTOR_INIT_A_0/A/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_A_0 = new ::ListNode(A0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_A_0).next;\n\nAKA_VECTOR_INIT_A.push_back(AKA_VECTOR_INIT_A_0);\n\n\n/* SubStructDataNode A */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint A1_x=1807401372;\nAKA_mark(\"Calling: ./2/160. Intersection of Two Linked Lists.cpp/ListNode/ListNode(int)|ROOT/160. Intersection of Two Linked Lists.cpp/getlength(ListNode*)/A/AKA_VECTOR_INIT_A_1/A/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_A_1 = new ::ListNode(A1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_A_1).next;\n\nAKA_VECTOR_INIT_A.push_back(AKA_VECTOR_INIT_A_1);\n\nListNode* A = AKA_VECTOR_INIT_A[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode A */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_getlength_ListNodemul_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->getlength(A);\nAKA_fCall++;AKA_mark(\"Return from: ./2/160. Intersection of Two Linked Lists.cpp/Solution/getlength(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/160. Intersection of Two Linked Lists.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_A;\n\n\n/* SubStructDataNode A */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint A0_x=1011843981;\nAKA_mark(\"Calling: ./2/160. Intersection of Two Linked Lists.cpp/ListNode/ListNode(int)|ROOT/160. Intersection of Two Linked Lists.cpp/getlength(ListNode*)/A/AKA_VECTOR_INIT_A_0/A/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_A_0 = new ::ListNode(A0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_A_0).next;\n\nAKA_VECTOR_INIT_A.push_back(AKA_VECTOR_INIT_A_0);\n\n\n/* SubStructDataNode A */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint A1_x=1807401372;\nAKA_mark(\"Calling: ./2/160. Intersection of Two Linked Lists.cpp/ListNode/ListNode(int)|ROOT/160. Intersection of Two Linked Lists.cpp/getlength(ListNode*)/A/AKA_VECTOR_INIT_A_1/A/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_A_1 = new ::ListNode(A1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_A_1).next;\n\nAKA_VECTOR_INIT_A.push_back(AKA_VECTOR_INIT_A_1);\n\nListNode* A = AKA_VECTOR_INIT_A[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode A */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int getlength(ListNode *A) {         int len = 0;         while(A != NULL) {             len++;             A = A->next;         }         return len;     }          ListNode* func(ListNode *B, int movelen) {         while(movelen--) {             B = B->next;         }         return B;     }          ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {         if(headA == NULL || headB == NULL) {             return NULL;         }         int lenA = getlength(headA);         int lenB = getlength(headB);         ListNode *p, *q;         p = headA;         q = headB;         if(lenA > lenB) {             p = func(headA, lenA - lenB);         }         if(lenA < lenB) {             q = func(headB, lenB - lenA);         }         while(p != q && p != NULL && q != NULL) {             p = p->next;             q = q->next;         }         return p;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.01/2/160. Intersection of Two Linked Lists.cpp/Solution/getlength(ListNode*)"
    },
    {
        "f": [],
        "fm": "int findPeakElement(vector<int>& nums) {         if(nums.size() == 1 || (nums[0] > nums[1]))             return 0;         if(nums[nums.size() - 1] > nums[nums.size() - 2]) {             return nums.size() - 1;         }         for(int i = 1; i < nums.size() - 1; i++) {             if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {                 return i;             }         }     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "162. Find Peak Element .cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./2/162. Find Peak Element .cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/162. Find Peak Element .cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/162. Find Peak Element .cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./2/162. Find Peak Element .cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findPeakElement(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/nums/element #0",
                                            "correspondingType": "int",
                                            "value": "1052700598"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findPeakElement_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_findPeakElement_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/162. Find Peak Element .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1052700598;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findPeakElement_vector_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findPeakElement(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/162. Find Peak Element .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1052700598;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "162. Find Peak Element .cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./2/162. Find Peak Element .cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/162. Find Peak Element .cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/162. Find Peak Element .cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./2/162. Find Peak Element .cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findPeakElement(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/nums/element #0",
                                            "correspondingType": "int",
                                            "value": "782755614"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/nums/element #1",
                                            "correspondingType": "int",
                                            "value": "-917055838"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #2",
                                            "virtual_name": "nums_element2",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/nums/element #2",
                                            "correspondingType": "int",
                                            "value": "1492834566"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findPeakElement_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_findPeakElement_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/162. Find Peak Element .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=782755614;\nnums.push_back(nums_element0);\nint nums_element1=-917055838;\nnums.push_back(nums_element1);\nint nums_element2=1492834566;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findPeakElement_vector_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findPeakElement(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/162. Find Peak Element .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=782755614;\nnums.push_back(nums_element0);\nint nums_element1=-917055838;\nnums.push_back(nums_element1);\nint nums_element2=1492834566;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "162. Find Peak Element .cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./2/162. Find Peak Element .cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/162. Find Peak Element .cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/162. Find Peak Element .cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./2/162. Find Peak Element .cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findPeakElement(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/nums/element #0",
                                            "correspondingType": "int",
                                            "value": "-489875641"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/nums/element #1",
                                            "correspondingType": "int",
                                            "value": "-439823195"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findPeakElement_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_findPeakElement_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/162. Find Peak Element .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-489875641;\nnums.push_back(nums_element0);\nint nums_element1=-439823195;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findPeakElement_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findPeakElement(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/162. Find Peak Element .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-489875641;\nnums.push_back(nums_element0);\nint nums_element1=-439823195;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int findPeakElement(vector<int>& nums) {         if(nums.size() == 1 || (nums[0] > nums[1]))             return 0;         if(nums[nums.size() - 1] > nums[nums.size() - 2]) {             return nums.size() - 1;         }         for(int i = 1; i < nums.size() - 1; i++) {             if(nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {                 return i;             }         }     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.01/2/162. Find Peak Element .cpp/Solution/findPeakElement(vector<int>&)"
    },
    {
        "f": [],
        "fm": "int compareVersion(string version1, string version2) {         while(!version1.empty() || !version2.empty()) {             int ver1 = version1.empty() ? 0 : stoi(version1);             int ver2 = version2.empty() ? 0 : stoi(version2);             if(ver1 > ver2) {                 return 1;             } else if(ver1 < ver2) {                 return -1;             } else {                 int pos1 = version1.find('.');                 int pos2 = version2.find('.');                 version1 = (pos1 == string::npos) ? \"\" : version1.substr(pos1 + 1);                 version2 = (pos2 == string::npos) ? \"\" : version2.substr(pos2 + 1);             }         }         return 0;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "165. Compare Version Numbers.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./2/165. Compare Version Numbers.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./2/165. Compare Version Numbers.cpp/Solution/compareVersion(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./2/165. Compare Version Numbers.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/165. Compare Version Numbers.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./2/165. Compare Version Numbers.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/165. Compare Version Numbers.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./2/165. Compare Version Numbers.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./2/165. Compare Version Numbers.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "compareVersion(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./2/165. Compare Version Numbers.cpp/Solution/compareVersion(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "version2",
                                    "virtual_name": "EXPECTED_version2",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./2/165. Compare Version Numbers.cpp/Solution/compareVersion(string,string)/version2",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "version1",
                                    "virtual_name": "EXPECTED_version1",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./2/165. Compare Version Numbers.cpp/Solution/compareVersion(string,string)/version1",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./2/165. Compare Version Numbers.cpp/Solution/compareVersion(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "version1",
                                    "virtual_name": "version1",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./2/165. Compare Version Numbers.cpp/Solution/compareVersion(string,string)/version1",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "version1[0]",
                                            "virtual_name": "version1[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./2/165. Compare Version Numbers.cpp/Solution/compareVersion(string,string)/version1/version1[0]",
                                            "correspondingType": "char",
                                            "value": "49"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "version2",
                                    "virtual_name": "version2",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./2/165. Compare Version Numbers.cpp/Solution/compareVersion(string,string)/version2",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "version2[0]",
                                            "virtual_name": "version2[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./2/165. Compare Version Numbers.cpp/Solution/compareVersion(string,string)/version2/version2[0]",
                                            "correspondingType": "char",
                                            "value": "-7"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/165. Compare Version Numbers.cpp/Solution/compareVersion(string,string)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_compareVersion_string_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_compareVersion_string_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/165. Compare Version Numbers.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName937611 = new char[2];akaRandomName937611[0] = 49;akaRandomName937611[1] = '\\0';string version1=akaRandomName937611;\nchar* akaRandomName747708 = new char[2];akaRandomName747708[0] = -7;akaRandomName747708[1] = '\\0';string version2=akaRandomName747708;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode version1 */\n/* NormalStringDataNode version2 */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_compareVersion_string_string_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->compareVersion(version1,version2);\nAKA_fCall++;AKA_mark(\"Return from: ./2/165. Compare Version Numbers.cpp/Solution/compareVersion(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/165. Compare Version Numbers.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName957113 = new char[2];akaRandomName957113[0] = 49;akaRandomName957113[1] = '\\0';string version1=akaRandomName957113;\nchar* akaRandomName930917 = new char[2];akaRandomName930917[0] = -7;akaRandomName930917[1] = '\\0';string version2=akaRandomName930917;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode version1 */\n/* NormalStringDataNode version2 */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int compareVersion(string version1, string version2) {         while(!version1.empty() || !version2.empty()) {             int ver1 = version1.empty() ? 0 : stoi(version1);             int ver2 = version2.empty() ? 0 : stoi(version2);             if(ver1 > ver2) {                 return 1;             } else if(ver1 < ver2) {                 return -1;             } else {                 int pos1 = version1.find('.');                 int pos2 = version2.find('.');                 version1 = (pos1 == string::npos) ? \"\" : version1.substr(pos1 + 1);                 version2 = (pos2 == string::npos) ? \"\" : version2.substr(pos2 + 1);             }         }         return 0;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.01/2/165. Compare Version Numbers.cpp/Solution/compareVersion(string,string)"
    },
    {
        "f": [],
        "fm": "vector<int> twoSum(vector<int>& numbers, int target) {         vector<int> result(2);         for(int i = 0; i < numbers.size(); i++) {             for(int j = i + 1; j < numbers.size(); j++) {                 if(numbers[i] + numbers[j] == target) {                     result[0] = i + 1;                     result[1] = j + 1;                     break;                 } else if(numbers[i] + numbers[j] > target) {                     break;                 }             }             if(result[0] != 0)                 break;         }         return result;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "167. Two Sum II - Input array is sorted.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./2/167. Two Sum II - Input array is sorted.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/167. Two Sum II - Input array is sorted.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/167. Two Sum II - Input array is sorted.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./2/167. Two Sum II - Input array is sorted.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "twoSum(vector<int>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "numbers",
                                    "virtual_name": "EXPECTED_numbers",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/numbers",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "EXPECTED_target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/target",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "numbers",
                                    "virtual_name": "numbers",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/numbers",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "numbers_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/numbers/element #0",
                                            "correspondingType": "int",
                                            "value": "-1922400781"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "numbers_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/numbers/element #1",
                                            "correspondingType": "int",
                                            "value": "1784603282"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/target",
                                    "correspondingType": "int",
                                    "value": "1234579594"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_twoSum_vector_int_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_twoSum_vector_int_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/167. Two Sum II - Input array is sorted.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> numbers;\n\n\nint target=1234579594;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode numbers */\nint numbers_element0=-1922400781;\nnumbers.push_back(numbers_element0);\nint numbers_element1=1784603282;\nnumbers.push_back(numbers_element1);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_twoSum_vector_int_int_random_3\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->twoSum(numbers,target);\nAKA_fCall++;AKA_mark(\"Return from: ./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_numbers;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/167. Two Sum II - Input array is sorted.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> numbers;\n\n\nint target=1234579594;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode numbers */\nint numbers_element0=-1922400781;\nnumbers.push_back(numbers_element0);\nint numbers_element1=1784603282;\nnumbers.push_back(numbers_element1);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "167. Two Sum II - Input array is sorted.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./2/167. Two Sum II - Input array is sorted.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/167. Two Sum II - Input array is sorted.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/167. Two Sum II - Input array is sorted.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./2/167. Two Sum II - Input array is sorted.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "twoSum(vector<int>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "numbers",
                                    "virtual_name": "EXPECTED_numbers",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/numbers",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "EXPECTED_target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/target",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "numbers",
                                    "virtual_name": "numbers",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/numbers",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "numbers_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/numbers/element #0",
                                            "correspondingType": "int",
                                            "value": "-117247797"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "numbers_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/numbers/element #1",
                                            "correspondingType": "int",
                                            "value": "685258895"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "target",
                                    "virtual_name": "target",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/target",
                                    "correspondingType": "int",
                                    "value": "222212621"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": "./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)/RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_twoSum_vector_int_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_twoSum_vector_int_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/167. Two Sum II - Input array is sorted.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> numbers;\n\n\nint target=222212621;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode numbers */\nint numbers_element0=-117247797;\nnumbers.push_back(numbers_element0);\nint numbers_element1=685258895;\nnumbers.push_back(numbers_element1);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_twoSum_vector_int_int_random_1\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->twoSum(numbers,target);\nAKA_fCall++;AKA_mark(\"Return from: ./2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_numbers;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/167. Two Sum II - Input array is sorted.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> numbers;\n\n\nint target=222212621;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode numbers */\nint numbers_element0=-117247797;\nnumbers.push_back(numbers_element0);\nint numbers_element1=685258895;\nnumbers.push_back(numbers_element1);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     vector<int> twoSum(vector<int>& numbers, int target) {         vector<int> result(2);         for(int i = 0; i < numbers.size(); i++) {             for(int j = i + 1; j < numbers.size(); j++) {                 if(numbers[i] + numbers[j] == target) {                     result[0] = i + 1;                     result[1] = j + 1;                     break;                 } else if(numbers[i] + numbers[j] > target) {                     break;                 }             }             if(result[0] != 0)                 break;         }         return result;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.01/2/167. Two Sum II - Input array is sorted.cpp/Solution/twoSum(vector<int>&,int)"
    },
    {
        "f": [],
        "fm": "string convertToTitle(int n) {         string s;         while(n) {             s = (char)((n - 1) % 26 + 'A') + s;             n = (n - 1) / 26;         }         return s;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "168. Excel Sheet Column Title.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./2/168. Excel Sheet Column Title.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./2/168. Excel Sheet Column Title.cpp/Solution/convertToTitle(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./2/168. Excel Sheet Column Title.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/168. Excel Sheet Column Title.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./2/168. Excel Sheet Column Title.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./2/168. Excel Sheet Column Title.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./2/168. Excel Sheet Column Title.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./2/168. Excel Sheet Column Title.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "convertToTitle(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": "./2/168. Excel Sheet Column Title.cpp/Solution/convertToTitle(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/168. Excel Sheet Column Title.cpp/Solution/convertToTitle(int)/n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./2/168. Excel Sheet Column Title.cpp/Solution/convertToTitle(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./2/168. Excel Sheet Column Title.cpp/Solution/convertToTitle(int)/n",
                                    "correspondingType": "int",
                                    "value": "-867741214"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./2/168. Excel Sheet Column Title.cpp/Solution/convertToTitle(int)/RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_convertToTitle_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_convertToTitle_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/168. Excel Sheet Column Title.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=-867741214;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_convertToTitle_int_random_2\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->convertToTitle(n);\nAKA_fCall++;AKA_mark(\"Return from: ./2/168. Excel Sheet Column Title.cpp/Solution/convertToTitle(int)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/168. Excel Sheet Column Title.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=-867741214;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     string convertToTitle(int n) {         string s;         while(n) {             s = (char)((n - 1) % 26 + 'A') + s;             n = (n - 1) / 26;         }         return s;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.01/2/168. Excel Sheet Column Title.cpp/Solution/convertToTitle(int)"
    }
]
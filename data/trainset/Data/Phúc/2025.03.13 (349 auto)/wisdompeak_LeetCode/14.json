[
    {
        "f": [],
        "fm": "vector<vector<int>> removeInterval(vector<vector<int>>& intervals, vector<int>& toBeRemoved)      {         vector<vector<int>>rets;         for (auto v: intervals)         {             if (v[1]<=toBeRemoved[0] || v[0]>=toBeRemoved[1])                 rets.push_back(v);             else             {                 if (v[0] < toBeRemoved[0])                     rets.push_back({v[0], min(v[1], toBeRemoved[0])});                 if (v[1] > toBeRemoved[1])                     rets.push_back({max(v[0], toBeRemoved[1]), v[1]});             }         }         return rets;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1272.Remove-Interval.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1272.Remove-Interval.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1272.Remove-Interval.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1272.Remove-Interval.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1272.Remove-Interval.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "removeInterval(vector<vector<int>>&,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "toBeRemoved",
                                    "virtual_name": "EXPECTED_toBeRemoved",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/toBeRemoved",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "intervals",
                                    "virtual_name": "EXPECTED_intervals",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "intervals",
                                    "virtual_name": "intervals",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "intervals_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "intervals_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-1097969664"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "intervals_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "intervals_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #1/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-1097781767"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "intervals_element1_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #1/element #1",
                                                    "correspondingType": "int",
                                                    "value": "-1398301536"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "toBeRemoved",
                                    "virtual_name": "toBeRemoved",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/toBeRemoved",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "toBeRemoved_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/toBeRemoved/element #0",
                                            "correspondingType": "int",
                                            "value": "-1018501160"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_removeInterval_vector_vector_int_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_removeInterval_vector_vector_int_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1272.Remove-Interval.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> intervals;\nvector<int> toBeRemoved;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode intervals */\nvector<int> intervals_element0;\nint intervals_element0_element0=-1097969664;\nintervals_element0.push_back(intervals_element0_element0);\nintervals.push_back(intervals_element0);\nvector<int> intervals_element1;\nint intervals_element1_element0=-1097781767;\nintervals_element1.push_back(intervals_element1_element0);\nint intervals_element1_element1=-1398301536;\nintervals_element1.push_back(intervals_element1_element1);\nintervals.push_back(intervals_element1);\n/* VectorDataNode toBeRemoved */\nint toBeRemoved_element0=-1018501160;\ntoBeRemoved.push_back(toBeRemoved_element0);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeInterval_vector_vector_int_vector_int_random_3\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeInterval(intervals,toBeRemoved);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)\");\n\n\nvector<vector<int>> EXPECTED_intervals;\n\nvector<int> EXPECTED_toBeRemoved;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1272.Remove-Interval.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> intervals;\nvector<int> toBeRemoved;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode intervals */\nvector<int> intervals_element0;\nint intervals_element0_element0=-1097969664;\nintervals_element0.push_back(intervals_element0_element0);\nintervals.push_back(intervals_element0);\nvector<int> intervals_element1;\nint intervals_element1_element0=-1097781767;\nintervals_element1.push_back(intervals_element1_element0);\nint intervals_element1_element1=-1398301536;\nintervals_element1.push_back(intervals_element1_element1);\nintervals.push_back(intervals_element1);\n/* VectorDataNode toBeRemoved */\nint toBeRemoved_element0=-1018501160;\ntoBeRemoved.push_back(toBeRemoved_element0);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1272.Remove-Interval.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1272.Remove-Interval.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1272.Remove-Interval.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1272.Remove-Interval.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1272.Remove-Interval.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "removeInterval(vector<vector<int>>&,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "toBeRemoved",
                                    "virtual_name": "EXPECTED_toBeRemoved",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/toBeRemoved",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "intervals",
                                    "virtual_name": "EXPECTED_intervals",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "intervals",
                                    "virtual_name": "intervals",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "intervals_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "intervals_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "1783139659"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "intervals_element0_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #0/element #1",
                                                    "correspondingType": "int",
                                                    "value": "1168277679"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "intervals_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "intervals_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #1/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-1965624732"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "intervals_element1_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #1/element #1",
                                                    "correspondingType": "int",
                                                    "value": "-334323675"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "toBeRemoved",
                                    "virtual_name": "toBeRemoved",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/toBeRemoved",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "toBeRemoved_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/toBeRemoved/element #0",
                                            "correspondingType": "int",
                                            "value": "-542858741"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_removeInterval_vector_vector_int_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_removeInterval_vector_vector_int_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1272.Remove-Interval.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> intervals;\nvector<int> toBeRemoved;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode intervals */\nvector<int> intervals_element0;\nint intervals_element0_element0=1783139659;\nintervals_element0.push_back(intervals_element0_element0);\nint intervals_element0_element1=1168277679;\nintervals_element0.push_back(intervals_element0_element1);\nintervals.push_back(intervals_element0);\nvector<int> intervals_element1;\nint intervals_element1_element0=-1965624732;\nintervals_element1.push_back(intervals_element1_element0);\nint intervals_element1_element1=-334323675;\nintervals_element1.push_back(intervals_element1_element1);\nintervals.push_back(intervals_element1);\n/* VectorDataNode toBeRemoved */\nint toBeRemoved_element0=-542858741;\ntoBeRemoved.push_back(toBeRemoved_element0);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeInterval_vector_vector_int_vector_int_random_0\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeInterval(intervals,toBeRemoved);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)\");\n\n\nvector<vector<int>> EXPECTED_intervals;\n\nvector<int> EXPECTED_toBeRemoved;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1272.Remove-Interval.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> intervals;\nvector<int> toBeRemoved;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode intervals */\nvector<int> intervals_element0;\nint intervals_element0_element0=1783139659;\nintervals_element0.push_back(intervals_element0_element0);\nint intervals_element0_element1=1168277679;\nintervals_element0.push_back(intervals_element0_element1);\nintervals.push_back(intervals_element0);\nvector<int> intervals_element1;\nint intervals_element1_element0=-1965624732;\nintervals_element1.push_back(intervals_element1_element0);\nint intervals_element1_element1=-334323675;\nintervals_element1.push_back(intervals_element1_element1);\nintervals.push_back(intervals_element1);\n/* VectorDataNode toBeRemoved */\nint toBeRemoved_element0=-542858741;\ntoBeRemoved.push_back(toBeRemoved_element0);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1272.Remove-Interval.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1272.Remove-Interval.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1272.Remove-Interval.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1272.Remove-Interval.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1272.Remove-Interval.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "removeInterval(vector<vector<int>>&,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "toBeRemoved",
                                    "virtual_name": "EXPECTED_toBeRemoved",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/toBeRemoved",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "intervals",
                                    "virtual_name": "EXPECTED_intervals",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "intervals",
                                    "virtual_name": "intervals",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "intervals_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "intervals_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-186876961"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "intervals_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "intervals_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #1/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-879370496"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "intervals_element1_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/intervals/element #1/element #1",
                                                    "correspondingType": "int",
                                                    "value": "-1661744021"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "toBeRemoved",
                                    "virtual_name": "toBeRemoved",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/toBeRemoved",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "toBeRemoved_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/toBeRemoved/element #0",
                                            "correspondingType": "int",
                                            "value": "-811452178"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": "./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)/RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_removeInterval_vector_vector_int_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_removeInterval_vector_vector_int_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1272.Remove-Interval.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> intervals;\nvector<int> toBeRemoved;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode intervals */\nvector<int> intervals_element0;\nint intervals_element0_element0=-186876961;\nintervals_element0.push_back(intervals_element0_element0);\nintervals.push_back(intervals_element0);\nvector<int> intervals_element1;\nint intervals_element1_element0=-879370496;\nintervals_element1.push_back(intervals_element1_element0);\nint intervals_element1_element1=-1661744021;\nintervals_element1.push_back(intervals_element1_element1);\nintervals.push_back(intervals_element1);\n/* VectorDataNode toBeRemoved */\nint toBeRemoved_element0=-811452178;\ntoBeRemoved.push_back(toBeRemoved_element0);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeInterval_vector_vector_int_vector_int_random_4\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeInterval(intervals,toBeRemoved);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)\");\n\n\nvector<vector<int>> EXPECTED_intervals;\n\nvector<int> EXPECTED_toBeRemoved;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1272.Remove-Interval.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> intervals;\nvector<int> toBeRemoved;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode intervals */\nvector<int> intervals_element0;\nint intervals_element0_element0=-186876961;\nintervals_element0.push_back(intervals_element0_element0);\nintervals.push_back(intervals_element0);\nvector<int> intervals_element1;\nint intervals_element1_element0=-879370496;\nintervals_element1.push_back(intervals_element1_element0);\nint intervals_element1_element1=-1661744021;\nintervals_element1.push_back(intervals_element1_element1);\nintervals.push_back(intervals_element1);\n/* VectorDataNode toBeRemoved */\nint toBeRemoved_element0=-811452178;\ntoBeRemoved.push_back(toBeRemoved_element0);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     vector<vector<int>> removeInterval(vector<vector<int>>& intervals, vector<int>& toBeRemoved)      {         vector<vector<int>>rets;         for (auto v: intervals)         {             if (v[1]<=toBeRemoved[0] || v[0]>=toBeRemoved[1])                 rets.push_back(v);             else             {                 if (v[0] < toBeRemoved[0])                     rets.push_back({v[0], min(v[1], toBeRemoved[0])});                 if (v[1] > toBeRemoved[1])                     rets.push_back({max(v[0], toBeRemoved[1]), v[1]});             }         }         return rets;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/14/1272.Remove-Interval.cpp/Solution/removeInterval(vector<vector<int>>&,vector<int>&)"
    },
    {
        "f": [],
        "fm": "static bool cmp(vector<int>&a, vector<int>&b)     {         if (a[0]!=b[0])             return a[0]<b[0];         else             return a[1]>b[1];     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1288.Remove-Covered-Intervals.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1288.Remove-Covered-Intervals.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1288.Remove-Covered-Intervals.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1288.Remove-Covered-Intervals.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1288.Remove-Covered-Intervals.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "cmp(vector<int>&,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": "./14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "a",
                                    "virtual_name": "EXPECTED_a",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)/a",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "b",
                                    "virtual_name": "EXPECTED_b",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)/b",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "a",
                                    "virtual_name": "a",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)/a",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "a_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)/a/element #0",
                                            "correspondingType": "int",
                                            "value": "-1112567572"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "a_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)/a/element #1",
                                            "correspondingType": "int",
                                            "value": "-1920526773"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "b",
                                    "virtual_name": "b",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)/b",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "b_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)/b/element #0",
                                            "correspondingType": "int",
                                            "value": "-853879961"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)/RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_cmp_vector_int_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_cmp_vector_int_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1288.Remove-Covered-Intervals.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\nvector<int> b;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-1112567572;\na.push_back(a_element0);\nint a_element1=-1920526773;\na.push_back(a_element1);\n/* VectorDataNode b */\nint b_element0=-853879961;\nb.push_back(b_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_cmp_vector_int_vector_int_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->cmp(a,b);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)\");\n\n\nvector<int> EXPECTED_a;\n\nvector<int> EXPECTED_b;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1288.Remove-Covered-Intervals.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\nvector<int> b;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-1112567572;\na.push_back(a_element0);\nint a_element1=-1920526773;\na.push_back(a_element1);\n/* VectorDataNode b */\nint b_element0=-853879961;\nb.push_back(b_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {     static bool cmp(vector<int>&a, vector<int>&b)     {         if (a[0]!=b[0])             return a[0]<b[0];         else             return a[1]>b[1];     } public:     int removeCoveredIntervals(vector<vector<int>>& intervals)      {         sort(intervals.begin(), intervals.end(), cmp);         int i = 0;         int count = 0;         while (i<intervals.size())         {             count++;             int j=i+1;             while (j<intervals.size() && intervals[j][1]<=intervals[i][1])                 j++;             i = j;         }         return count;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/14/1288.Remove-Covered-Intervals.cpp/Solution/cmp(vector<int>&,vector<int>&)"
    },
    {
        "f": [],
        "fm": "int removeCoveredIntervals(vector<vector<int>>& intervals)      {         sort(intervals.begin(), intervals.end(), cmp);         int i = 0;         int count = 0;         while (i<intervals.size())         {             count++;             int j=i+1;             while (j<intervals.size() && intervals[j][1]<=intervals[i][1])                 j++;             i = j;         }         return count;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1288.Remove-Covered-Intervals.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1288.Remove-Covered-Intervals.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1288.Remove-Covered-Intervals.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1288.Remove-Covered-Intervals.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1288.Remove-Covered-Intervals.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "removeCoveredIntervals(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "intervals",
                                    "virtual_name": "EXPECTED_intervals",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "intervals",
                                    "virtual_name": "intervals",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "intervals_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "intervals_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-1196372552"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "intervals_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals/element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "intervals_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals/element #1/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-1277979931"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_removeCoveredIntervals_vector_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_removeCoveredIntervals_vector_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1288.Remove-Covered-Intervals.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> intervals;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode intervals */\nvector<int> intervals_element0;\nint intervals_element0_element0=-1196372552;\nintervals_element0.push_back(intervals_element0_element0);\nintervals.push_back(intervals_element0);\nvector<int> intervals_element1;\nint intervals_element1_element0=-1277979931;\nintervals_element1.push_back(intervals_element1_element0);\nintervals.push_back(intervals_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeCoveredIntervals_vector_vector_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeCoveredIntervals(intervals);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_intervals;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1288.Remove-Covered-Intervals.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> intervals;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode intervals */\nvector<int> intervals_element0;\nint intervals_element0_element0=-1196372552;\nintervals_element0.push_back(intervals_element0_element0);\nintervals.push_back(intervals_element0);\nvector<int> intervals_element1;\nint intervals_element1_element0=-1277979931;\nintervals_element1.push_back(intervals_element1_element0);\nintervals.push_back(intervals_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1288.Remove-Covered-Intervals.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1288.Remove-Covered-Intervals.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1288.Remove-Covered-Intervals.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1288.Remove-Covered-Intervals.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1288.Remove-Covered-Intervals.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "removeCoveredIntervals(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "intervals",
                                    "virtual_name": "EXPECTED_intervals",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "intervals",
                                    "virtual_name": "intervals",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "intervals_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "intervals_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "195646202"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "intervals_element0_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals/element #0/element #1",
                                                    "correspondingType": "int",
                                                    "value": "1041711723"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "intervals_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals/element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "intervals_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals/element #1/element #0",
                                                    "correspondingType": "int",
                                                    "value": "543121372"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "intervals_element1_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/intervals/element #1/element #1",
                                                    "correspondingType": "int",
                                                    "value": "-1678519118"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_removeCoveredIntervals_vector_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_removeCoveredIntervals_vector_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1288.Remove-Covered-Intervals.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> intervals;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode intervals */\nvector<int> intervals_element0;\nint intervals_element0_element0=195646202;\nintervals_element0.push_back(intervals_element0_element0);\nint intervals_element0_element1=1041711723;\nintervals_element0.push_back(intervals_element0_element1);\nintervals.push_back(intervals_element0);\nvector<int> intervals_element1;\nint intervals_element1_element0=543121372;\nintervals_element1.push_back(intervals_element1_element0);\nint intervals_element1_element1=-1678519118;\nintervals_element1.push_back(intervals_element1_element1);\nintervals.push_back(intervals_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeCoveredIntervals_vector_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeCoveredIntervals(intervals);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_intervals;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1288.Remove-Covered-Intervals.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> intervals;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode intervals */\nvector<int> intervals_element0;\nint intervals_element0_element0=195646202;\nintervals_element0.push_back(intervals_element0_element0);\nint intervals_element0_element1=1041711723;\nintervals_element0.push_back(intervals_element0_element1);\nintervals.push_back(intervals_element0);\nvector<int> intervals_element1;\nint intervals_element1_element0=543121372;\nintervals_element1.push_back(intervals_element1_element0);\nint intervals_element1_element1=-1678519118;\nintervals_element1.push_back(intervals_element1_element1);\nintervals.push_back(intervals_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {     static bool cmp(vector<int>&a, vector<int>&b)     {         if (a[0]!=b[0])             return a[0]<b[0];         else             return a[1]>b[1];     } public:     int removeCoveredIntervals(vector<vector<int>>& intervals)      {         sort(intervals.begin(), intervals.end(), cmp);         int i = 0;         int count = 0;         while (i<intervals.size())         {             count++;             int j=i+1;             while (j<intervals.size() && intervals[j][1]<=intervals[i][1])                 j++;             i = j;         }         return count;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/14/1288.Remove-Covered-Intervals.cpp/Solution/removeCoveredIntervals(vector<vector<int>>&)"
    },
    {
        "f": [],
        "fm": "static bool cmp(array<int,2>&a, array<int,2>&b)     {         if (a[0]!=b[0])             return a[0] < b[0];         else             return a[1] > b[1];     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "cmp(array<int,2>&,array<int,2>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.STLArrayDataNode",
                                    "name": "b",
                                    "virtual_name": "EXPECTED_b",
                                    "dataType": "array<int, 2>",
                                    "realType": "array<int,2>&",
                                    "external": false,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/b",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "b[0]",
                                            "virtual_name": "EXPECTED_b[0]",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/b/b[0]",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "b[1]",
                                            "virtual_name": "EXPECTED_b[1]",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/b/b[1]",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.STLArrayDataNode",
                                    "name": "a",
                                    "virtual_name": "EXPECTED_a",
                                    "dataType": "array<int, 2>",
                                    "realType": "array<int,2>&",
                                    "external": false,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/a",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "a[0]",
                                            "virtual_name": "EXPECTED_a[0]",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/a/a[0]",
                                            "correspondingType": "int",
                                            "value": "null"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "a[1]",
                                            "virtual_name": "EXPECTED_a[1]",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/a/a[1]",
                                            "correspondingType": "int",
                                            "value": "null"
                                        }
                                    ]
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.STLArrayDataNode",
                                    "name": "a",
                                    "virtual_name": "a",
                                    "dataType": "array<int, 2>",
                                    "realType": "array<int,2>&",
                                    "external": false,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/a",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "a[0]",
                                            "virtual_name": "a[0]",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/a/a[0]",
                                            "correspondingType": "int",
                                            "value": "2027398887"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "a[1]",
                                            "virtual_name": "a[1]",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/a/a[1]",
                                            "correspondingType": "int",
                                            "value": "29587042"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.STLArrayDataNode",
                                    "name": "b",
                                    "virtual_name": "b",
                                    "dataType": "array<int, 2>",
                                    "realType": "array<int,2>&",
                                    "external": false,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/b",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "b[0]",
                                            "virtual_name": "b[0]",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/b/b[0]",
                                            "correspondingType": "int",
                                            "value": "394225015"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "b[1]",
                                            "virtual_name": "b[1]",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/b/b[1]",
                                            "correspondingType": "int",
                                            "value": "2130777055"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)/RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_cmp_array_int_2_array_int_2_random_2(void) {\n{\nAKA_test_case_name=\"Solution_cmp_array_int_2_array_int_2_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::array<int, 2> a;\n\n\na[0]=2027398887;\n\n\n\na[1]=29587042;\n\nstd::array<int, 2> b;\n\n\nb[0]=394225015;\n\n\n\nb[1]=2130777055;\n\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* STLArrayDataNode a */\n/* STLArrayDataNode b */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_cmp_array_int_2_array_int_2_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->cmp(a,b);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)\");\n\n\nstd::array<int, 2> EXPECTED_a;\n\n\n/* a[0] : null value -> no code */\n\n\n\n/* a[1] : null value -> no code */\n\n\nstd::array<int, 2> EXPECTED_b;\n\n\n/* b[0] : null value -> no code */\n\n\n\n/* b[1] : null value -> no code */\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::array<int, 2> a;\n\n\na[0]=2027398887;\n\n\n\na[1]=29587042;\n\nstd::array<int, 2> b;\n\n\nb[0]=394225015;\n\n\n\nb[1]=2130777055;\n\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* STLArrayDataNode a */\n/* STLArrayDataNode b */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {     static bool cmp(array<int,2>&a, array<int,2>&b)     {         if (a[0]!=b[0])             return a[0] < b[0];         else             return a[1] > b[1];     } public:     int minTaps(int n, vector<int>& ranges)      {         vector<array<int,2>>intervals(n+1);         for (int i=0; i<=n; i++)             intervals[i] = {i-ranges[i], i+ranges[i]};         sort(intervals.begin(), intervals.end(), cmp);          if (intervals[0][0]>0) return -1;          int i = 0;         int far = 0;         int count = 0;         while (i<intervals.size())         {                                     count+=1;             int nextFar = far;             while (i<intervals.size() && intervals[i][0]<=far)             {                 nextFar = max(nextFar, intervals[i][1]);                 i++;             }                         if (nextFar >= n)                 return count;             if (nextFar == far)                 return -1;             far = nextFar;         }          return -1;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/cmp(array<int,2>&,array<int,2>&)"
    },
    {
        "f": [],
        "fm": "int minTaps(int n, vector<int>& ranges)      {         vector<array<int,2>>intervals(n+1);         for (int i=0; i<=n; i++)             intervals[i] = {i-ranges[i], i+ranges[i]};         sort(intervals.begin(), intervals.end(), cmp);          if (intervals[0][0]>0) return -1;          int i = 0;         int far = 0;         int count = 0;         while (i<intervals.size())         {                                     count+=1;             int nextFar = far;             while (i<intervals.size() && intervals[i][0]<=far)             {                 nextFar = max(nextFar, intervals[i][1]);                 i++;             }                         if (nextFar >= n)                 return count;             if (nextFar == far)                 return -1;             far = nextFar;         }          return -1;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/minTaps(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minTaps(int,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/minTaps(int,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/minTaps(int,vector<int>&)/n",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "ranges",
                                    "virtual_name": "EXPECTED_ranges",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/minTaps(int,vector<int>&)/ranges",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/minTaps(int,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/minTaps(int,vector<int>&)/n",
                                    "correspondingType": "int",
                                    "value": "4"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "ranges",
                                    "virtual_name": "ranges",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/minTaps(int,vector<int>&)/ranges",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "ranges_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/minTaps(int,vector<int>&)/ranges/element #0",
                                            "correspondingType": "int",
                                            "value": "411110508"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "ranges_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/minTaps(int,vector<int>&)/ranges/element #1",
                                            "correspondingType": "int",
                                            "value": "-319858275"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/minTaps(int,vector<int>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minTaps_int_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_minTaps_int_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=4;\nvector<int> ranges;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode ranges */\nint ranges_element0=411110508;\nranges.push_back(ranges_element0);\nint ranges_element1=-319858275;\nranges.push_back(ranges_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minTaps_int_vector_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minTaps(n,ranges);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/minTaps(int,vector<int>&)\");\n\n\nvector<int> EXPECTED_ranges;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=4;\nvector<int> ranges;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode ranges */\nint ranges_element0=411110508;\nranges.push_back(ranges_element0);\nint ranges_element1=-319858275;\nranges.push_back(ranges_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {     static bool cmp(array<int,2>&a, array<int,2>&b)     {         if (a[0]!=b[0])             return a[0] < b[0];         else             return a[1] > b[1];     } public:     int minTaps(int n, vector<int>& ranges)      {         vector<array<int,2>>intervals(n+1);         for (int i=0; i<=n; i++)             intervals[i] = {i-ranges[i], i+ranges[i]};         sort(intervals.begin(), intervals.end(), cmp);          if (intervals[0][0]>0) return -1;          int i = 0;         int far = 0;         int count = 0;         while (i<intervals.size())         {                                     count+=1;             int nextFar = far;             while (i<intervals.size() && intervals[i][0]<=far)             {                 nextFar = max(nextFar, intervals[i][1]);                 i++;             }                         if (nextFar >= n)                 return count;             if (nextFar == far)                 return -1;             far = nextFar;         }          return -1;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/14/1326.Minimum-Number-of-Taps-to-Open-to-Water-a-Garden.cpp/Solution/minTaps(int,vector<int>&)"
    },
    {
        "f": [],
        "fm": "int maxSatisfaction(vector<int>& satisfaction)      {         int n = satisfaction.size();         sort(satisfaction.begin(),satisfaction.end());         reverse(satisfaction.begin(),satisfaction.end());                  int total = 0, presum = 0;         int ret = INT_MIN;         for (int i=0; i<n; i++)         {             presum += satisfaction[i];             total += presum;             ret = max(ret, total);         }         return max(0,ret);              }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1402.Reducing-Dishes.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1402.Reducing-Dishes.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1402.Reducing-Dishes.cpp/Solution/maxSatisfaction(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1402.Reducing-Dishes.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1402.Reducing-Dishes.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1402.Reducing-Dishes.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1402.Reducing-Dishes.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1402.Reducing-Dishes.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1402.Reducing-Dishes.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "maxSatisfaction(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./14/1402.Reducing-Dishes.cpp/Solution/maxSatisfaction(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "satisfaction",
                                    "virtual_name": "EXPECTED_satisfaction",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1402.Reducing-Dishes.cpp/Solution/maxSatisfaction(vector<int>&)/satisfaction",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1402.Reducing-Dishes.cpp/Solution/maxSatisfaction(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "satisfaction",
                                    "virtual_name": "satisfaction",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1402.Reducing-Dishes.cpp/Solution/maxSatisfaction(vector<int>&)/satisfaction",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "satisfaction_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1402.Reducing-Dishes.cpp/Solution/maxSatisfaction(vector<int>&)/satisfaction/element #0",
                                            "correspondingType": "int",
                                            "value": "-1302520007"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./14/1402.Reducing-Dishes.cpp/Solution/maxSatisfaction(vector<int>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_maxSatisfaction_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_maxSatisfaction_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1402.Reducing-Dishes.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> satisfaction;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode satisfaction */\nint satisfaction_element0=-1302520007;\nsatisfaction.push_back(satisfaction_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxSatisfaction_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxSatisfaction(satisfaction);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1402.Reducing-Dishes.cpp/Solution/maxSatisfaction(vector<int>&)\");\n\n\nvector<int> EXPECTED_satisfaction;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1402.Reducing-Dishes.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> satisfaction;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode satisfaction */\nint satisfaction_element0=-1302520007;\nsatisfaction.push_back(satisfaction_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int maxSatisfaction(vector<int>& satisfaction)      {         int n = satisfaction.size();         sort(satisfaction.begin(),satisfaction.end());         reverse(satisfaction.begin(),satisfaction.end());                  int total = 0, presum = 0;         int ret = INT_MIN;         for (int i=0; i<n; i++)         {             presum += satisfaction[i];             total += presum;             ret = max(ret, total);         }         return max(0,ret);              } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/14/1402.Reducing-Dishes.cpp/Solution/maxSatisfaction(vector<int>&)"
    },
    {
        "f": [],
        "fm": "int findMinFibonacciNumbers(int k)      {         vector<ll>a = {1,1};         while (a.back() < k)         {             int n = a.size();             a.push_back(a[n-1]+a[n-2]);         }         int ret = 0;         while (k>0)         {             auto iter = upper_bound(a.begin(), a.end(), k) - 1;             ret++;             k-=*iter;         }         return ret;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution/findMinFibonacciNumbers(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMinFibonacciNumbers(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution/findMinFibonacciNumbers(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "EXPECTED_k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution/findMinFibonacciNumbers(int)/k",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution/findMinFibonacciNumbers(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution/findMinFibonacciNumbers(int)/k",
                                    "correspondingType": "int",
                                    "value": "9"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution/findMinFibonacciNumbers(int)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMinFibonacciNumbers_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_findMinFibonacciNumbers_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint k=9;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMinFibonacciNumbers_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMinFibonacciNumbers(k);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution/findMinFibonacciNumbers(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint k=9;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int findMinFibonacciNumbers(int k)      {         vector<ll>a = {1,1};         while (a.back() < k)         {             int n = a.size();             a.push_back(a[n-1]+a[n-2]);         }         int ret = 0;         while (k>0)         {             auto iter = upper_bound(a.begin(), a.end(), k) - 1;             ret++;             k-=*iter;         }         return ret;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/14/1414.Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K.cpp/Solution/findMinFibonacciNumbers(int)"
    },
    {
        "f": [],
        "fm": "static bool cmp(vector<int>&a, vector<int>&b)     {         return a[1]-a[0] < b[1]-b[0];     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/cmp(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "cmp(vector<int>&,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/cmp(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "a",
                                    "virtual_name": "EXPECTED_a",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/cmp(vector<int>&,vector<int>&)/a",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "b",
                                    "virtual_name": "EXPECTED_b",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/cmp(vector<int>&,vector<int>&)/b",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/cmp(vector<int>&,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "a",
                                    "virtual_name": "a",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/cmp(vector<int>&,vector<int>&)/a",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "a_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/cmp(vector<int>&,vector<int>&)/a/element #0",
                                            "correspondingType": "int",
                                            "value": "578791440"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "b",
                                    "virtual_name": "b",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/cmp(vector<int>&,vector<int>&)/b",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "b_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/cmp(vector<int>&,vector<int>&)/b/element #0",
                                            "correspondingType": "int",
                                            "value": "-1865143443"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/cmp(vector<int>&,vector<int>&)/RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_cmp_vector_int_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_cmp_vector_int_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\nvector<int> b;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=578791440;\na.push_back(a_element0);\n/* VectorDataNode b */\nint b_element0=-1865143443;\nb.push_back(b_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_cmp_vector_int_vector_int_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->cmp(a,b);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/cmp(vector<int>&,vector<int>&)\");\n\n\nvector<int> EXPECTED_a;\n\nvector<int> EXPECTED_b;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\nvector<int> b;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=578791440;\na.push_back(a_element0);\n/* VectorDataNode b */\nint b_element0=-1865143443;\nb.push_back(b_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {     static bool cmp(vector<int>&a, vector<int>&b)     {         return a[1]-a[0] < b[1]-b[0];     } public:     vector<string> maxNumOfSubstrings(string s)      {         vector<int>start(26,-1);         vector<int>end(26,-1);         for (int i=0; i<s.size(); i++)              if (start[s[i]-'a']==-1) start[s[i]-'a'] = i;         for (int i=s.size()-1; i>=0; i--)              if (end[s[i]-'a']==-1) end[s[i]-'a'] = i;                  vector<vector<int>>intervals;         for (int i=0; i<26; i++)         {             if (start[i]==-1) continue;             int left = start[i], right = end[i];             bool valid = true;             for (int k=left; k<=right; k++)             {                 if (start[s[k]-'a']==-1) continue;                 if (start[s[k]-'a'] < left)                 {                     valid = false;                     break;                 }                 right = max(right, end[s[k]-'a']);             }             if (valid) intervals.push_back({left, right});         }                  sort(intervals.begin(), intervals.end(), cmp);          vector<int>flags(intervals.size(),1);          for (int i=0; i<intervals.size(); i++)         {             if (flags[i]==0) continue;             for (int j=i+1; j<intervals.size(); j++)             {                                 if (flags[j]!=0 && intervals[i][0]>intervals[j][0] && intervals[i][1]<intervals[j][1])                                     flags[j] = 0;                             }         }          vector<string> ret ;         for (int i=0; i<intervals.size(); i++)             if (flags[i]) ret.push_back(s.substr(intervals[i][0], intervals[i][1]-intervals[i][0]+1));          return ret;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/cmp(vector<int>&,vector<int>&)"
    },
    {
        "f": [],
        "fm": "vector<string> maxNumOfSubstrings(string s)      {         vector<int>start(26,-1);         vector<int>end(26,-1);         for (int i=0; i<s.size(); i++)              if (start[s[i]-'a']==-1) start[s[i]-'a'] = i;         for (int i=s.size()-1; i>=0; i--)              if (end[s[i]-'a']==-1) end[s[i]-'a'] = i;                  vector<vector<int>>intervals;         for (int i=0; i<26; i++)         {             if (start[i]==-1) continue;             int left = start[i], right = end[i];             bool valid = true;             for (int k=left; k<=right; k++)             {                 if (start[s[k]-'a']==-1) continue;                 if (start[s[k]-'a'] < left)                 {                     valid = false;                     break;                 }                 right = max(right, end[s[k]-'a']);             }             if (valid) intervals.push_back({left, right});         }                  sort(intervals.begin(), intervals.end(), cmp);          vector<int>flags(intervals.size(),1);          for (int i=0; i<intervals.size(); i++)         {             if (flags[i]==0) continue;             for (int j=i+1; j<intervals.size(); j++)             {                                 if (flags[j]!=0 && intervals[i][0]>intervals[j][0] && intervals[i][1]<intervals[j][1])                                     flags[j] = 0;                             }         }          vector<string> ret ;         for (int i=0; i<intervals.size(); i++)             if (flags[i]) ret.push_back(s.substr(intervals[i][0], intervals[i][1]-intervals[i][0]+1));          return ret;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "maxNumOfSubstrings(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)/s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)/s",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)/s/s[0]",
                                            "correspondingType": "char",
                                            "value": "-54"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)/RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_maxNumOfSubstrings_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_maxNumOfSubstrings_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName505007 = new char[2];akaRandomName505007[0] = -54;akaRandomName505007[1] = '\\0';string s=akaRandomName505007;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxNumOfSubstrings_string_random_0\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxNumOfSubstrings(s);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName466323 = new char[2];akaRandomName466323[0] = -54;akaRandomName466323[1] = '\\0';string s=akaRandomName466323;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "maxNumOfSubstrings(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<string>",
                            "realType": "vector<string>",
                            "functionNode": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)/s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)/s",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)/s/s[0]",
                                            "correspondingType": "char",
                                            "value": "99"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>",
                                    "external": false,
                                    "correspondingVar": "./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)/RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_maxNumOfSubstrings_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_maxNumOfSubstrings_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName130944 = new char[2];akaRandomName130944[0] = 99;akaRandomName130944[1] = '\\0';string s=akaRandomName130944;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxNumOfSubstrings_string_random_1\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxNumOfSubstrings(s);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName11817 = new char[2];akaRandomName11817[0] = 99;akaRandomName11817[1] = '\\0';string s=akaRandomName11817;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {     static bool cmp(vector<int>&a, vector<int>&b)     {         return a[1]-a[0] < b[1]-b[0];     } public:     vector<string> maxNumOfSubstrings(string s)      {         vector<int>start(26,-1);         vector<int>end(26,-1);         for (int i=0; i<s.size(); i++)              if (start[s[i]-'a']==-1) start[s[i]-'a'] = i;         for (int i=s.size()-1; i>=0; i--)              if (end[s[i]-'a']==-1) end[s[i]-'a'] = i;                  vector<vector<int>>intervals;         for (int i=0; i<26; i++)         {             if (start[i]==-1) continue;             int left = start[i], right = end[i];             bool valid = true;             for (int k=left; k<=right; k++)             {                 if (start[s[k]-'a']==-1) continue;                 if (start[s[k]-'a'] < left)                 {                     valid = false;                     break;                 }                 right = max(right, end[s[k]-'a']);             }             if (valid) intervals.push_back({left, right});         }                  sort(intervals.begin(), intervals.end(), cmp);          vector<int>flags(intervals.size(),1);          for (int i=0; i<intervals.size(); i++)         {             if (flags[i]==0) continue;             for (int j=i+1; j<intervals.size(); j++)             {                                 if (flags[j]!=0 && intervals[i][0]>intervals[j][0] && intervals[i][1]<intervals[j][1])                                     flags[j] = 0;                             }         }          vector<string> ret ;         for (int i=0; i<intervals.size(); i++)             if (flags[i]) ret.push_back(s.substr(intervals[i][0], intervals[i][1]-intervals[i][0]+1));          return ret;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/14/1520.Maximum-Number-of-Non-Overlapping-Substrings.cpp/Solution/maxNumOfSubstrings(string)"
    },
    {
        "f": [],
        "fm": "int numSplits(string s)      {         int n = s.size();         vector<int>left(n,0);         vector<int>right(n,0);                  vector<int>count(26,0);         int sum = 0;         for (int i=0; i<s.size(); i++)         {             count[s[i]-'a']+=1;             if (count[s[i]-'a']==1)                 sum+=1;             left[i] = sum;         }                  count.assign(26,0);         sum = 0;         for (int i=s.size()-1; i>=0; i--)         {             count[s[i]-'a']+=1;             if (count[s[i]-'a']==1)                 sum+=1;             right[i] = sum;         }                  int ret = 0;         for (int i=0; i<s.size()-1; i++)         {             if (left[i]==right[i+1])                 ret+=1;         }         return ret;               }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1525.Number-of-Good-Ways-to-Split-a-String.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "numSplits(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)/s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)/s",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)/s/s[0]",
                                            "correspondingType": "char",
                                            "value": "106"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_numSplits_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_numSplits_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1525.Number-of-Good-Ways-to-Split-a-String.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName738143 = new char[2];akaRandomName738143[0] = 106;akaRandomName738143[1] = '\\0';string s=akaRandomName738143;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_numSplits_string_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->numSplits(s);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1525.Number-of-Good-Ways-to-Split-a-String.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName688523 = new char[2];akaRandomName688523[0] = 106;akaRandomName688523[1] = '\\0';string s=akaRandomName688523;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1525.Number-of-Good-Ways-to-Split-a-String.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "numSplits(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)/s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)/s",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)/s/s[0]",
                                            "correspondingType": "char",
                                            "value": "-46"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_numSplits_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_numSplits_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1525.Number-of-Good-Ways-to-Split-a-String.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName28847 = new char[2];akaRandomName28847[0] = -46;akaRandomName28847[1] = '\\0';string s=akaRandomName28847;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_numSplits_string_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->numSplits(s);\nAKA_fCall++;AKA_mark(\"Return from: ./14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1525.Number-of-Good-Ways-to-Split-a-String.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName53618 = new char[2];akaRandomName53618[0] = -46;akaRandomName53618[1] = '\\0';string s=akaRandomName53618;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int numSplits(string s)      {         int n = s.size();         vector<int>left(n,0);         vector<int>right(n,0);                  vector<int>count(26,0);         int sum = 0;         for (int i=0; i<s.size(); i++)         {             count[s[i]-'a']+=1;             if (count[s[i]-'a']==1)                 sum+=1;             left[i] = sum;         }                  count.assign(26,0);         sum = 0;         for (int i=s.size()-1; i>=0; i--)         {             count[s[i]-'a']+=1;             if (count[s[i]-'a']==1)                 sum+=1;             right[i] = sum;         }                  int ret = 0;         for (int i=0; i<s.size()-1; i++)         {             if (left[i]==right[i+1])                 ret+=1;         }         return ret;               } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/14/1525.Number-of-Good-Ways-to-Split-a-String.cpp/Solution/numSplits(string)"
    }
]
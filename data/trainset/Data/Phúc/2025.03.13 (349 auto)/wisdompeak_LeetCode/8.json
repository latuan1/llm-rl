[
    {
        "f": [],
        "fm": "vector<int> findDuplicates(vector<int>& nums)      {         int n = nums.size();         nums.insert(nums.begin(),0);         for (int i=1; i<=n; i++)         {             while (nums[i]!=i && nums[i]<=n && nums[i]!=nums[nums[i]])                 swap(nums[i], nums[nums[i]]);         }         vector<int>rets;         for (int i=1; i<=n; i++)         {             if (nums[i]!=i)                 rets.push_back(nums[i]);         }         return rets;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "442.Find-All-Duplicates-in-an-Array_v1.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution/findDuplicates(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findDuplicates(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution/findDuplicates(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution/findDuplicates(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution/findDuplicates(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution/findDuplicates(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution/findDuplicates(vector<int>&)/nums/element #0",
                                            "correspondingType": "int",
                                            "value": "675789687"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": "./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution/findDuplicates(vector<int>&)/RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findDuplicates_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_findDuplicates_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/442.Find-All-Duplicates-in-an-Array_v1.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=675789687;\nnums.push_back(nums_element0);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDuplicates_vector_int_random_4\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDuplicates(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution/findDuplicates(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/442.Find-All-Duplicates-in-an-Array_v1.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=675789687;\nnums.push_back(nums_element0);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     vector<int> findDuplicates(vector<int>& nums)      {         int n = nums.size();         nums.insert(nums.begin(),0);         for (int i=1; i<=n; i++)         {             while (nums[i]!=i && nums[i]<=n && nums[i]!=nums[nums[i]])                 swap(nums[i], nums[nums[i]]);         }         vector<int>rets;         for (int i=1; i<=n; i++)         {             if (nums[i]!=i)                 rets.push_back(nums[i]);         }         return rets;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/8/442.Find-All-Duplicates-in-an-Array_v1.cpp/Solution/findDuplicates(vector<int>&)"
    },
    {
        "f": [],
        "fm": "vector<int> findDisappearedNumbers(vector<int>& nums) {         int n = nums.size();         nums.insert(nums.begin(),0);         for (int i=1; i<=n; i++)         {             while (nums[i]!=i && nums[i]<=n && nums[i]!=nums[nums[i]])                 swap(nums[i], nums[nums[i]]);         }         vector<int>rets;         for (int i=1; i<=n; i++)         {             if (nums[i]!=i)                 rets.push_back(i);         }         return rets;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "448.Find-All-Numbers-Disappeared-in-an-Array.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution/findDisappearedNumbers(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findDisappearedNumbers(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution/findDisappearedNumbers(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution/findDisappearedNumbers(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution/findDisappearedNumbers(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution/findDisappearedNumbers(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution/findDisappearedNumbers(vector<int>&)/nums/element #0",
                                            "correspondingType": "int",
                                            "value": "803073063"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": "./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution/findDisappearedNumbers(vector<int>&)/RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findDisappearedNumbers_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_findDisappearedNumbers_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=803073063;\nnums.push_back(nums_element0);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDisappearedNumbers_vector_int_random_0\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDisappearedNumbers(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution/findDisappearedNumbers(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=803073063;\nnums.push_back(nums_element0);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     vector<int> findDisappearedNumbers(vector<int>& nums) {         int n = nums.size();         nums.insert(nums.begin(),0);         for (int i=1; i<=n; i++)         {             while (nums[i]!=i && nums[i]<=n && nums[i]!=nums[nums[i]])                 swap(nums[i], nums[nums[i]]);         }         vector<int>rets;         for (int i=1; i<=n; i++)         {             if (nums[i]!=i)                 rets.push_back(i);         }         return rets;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/8/448.Find-All-Numbers-Disappeared-in-an-Array.cpp/Solution/findDisappearedNumbers(vector<int>&)"
    },
    {
        "f": [],
        "fm": "static bool cmp(vector<int>&a, vector<int>&b)     {         return a[1] < b[1];     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "cmp(vector<int>&,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "b",
                                    "virtual_name": "EXPECTED_b",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)/b",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "a",
                                    "virtual_name": "EXPECTED_a",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)/a",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "a",
                                    "virtual_name": "a",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)/a",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "a_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)/a/element #0",
                                            "correspondingType": "int",
                                            "value": "-574578345"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "a_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)/a/element #1",
                                            "correspondingType": "int",
                                            "value": "268785513"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "b",
                                    "virtual_name": "b",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)/b",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "b_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)/b/element #0",
                                            "correspondingType": "int",
                                            "value": "1749111634"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)/RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_cmp_vector_int_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_cmp_vector_int_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\nvector<int> b;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-574578345;\na.push_back(a_element0);\nint a_element1=268785513;\na.push_back(a_element1);\n/* VectorDataNode b */\nint b_element0=1749111634;\nb.push_back(b_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_cmp_vector_int_vector_int_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->cmp(a,b);\nAKA_fCall++;AKA_mark(\"Return from: ./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)\");\n\n\nvector<int> EXPECTED_a;\n\nvector<int> EXPECTED_b;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\nvector<int> b;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-574578345;\na.push_back(a_element0);\nint a_element1=268785513;\na.push_back(a_element1);\n/* VectorDataNode b */\nint b_element0=1749111634;\nb.push_back(b_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {     static bool cmp(vector<int>&a, vector<int>&b)     {         return a[1] < b[1];     }      public:     int findMinArrowShots(vector<vector<int>>& points)      {         sort(points.begin(), points.end(), cmp);         int i = 0;         int count = 0;         while (i<points.size())         {             count++;             int j = i+1;             while (j<points.size() && points[j][0]<=points[i][1])                 j++;             i = j;         }         return count;             } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/cmp(vector<int>&,vector<int>&)"
    },
    {
        "f": [],
        "fm": "int findMinArrowShots(vector<vector<int>>& points)      {         sort(points.begin(), points.end(), cmp);         int i = 0;         int count = 0;         while (i<points.size())         {             count++;             int j = i+1;             while (j<points.size() && points[j][0]<=points[i][1])                 j++;             i = j;         }         return count;             }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findMinArrowShots(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "points",
                                    "virtual_name": "EXPECTED_points",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)/points",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "points",
                                    "virtual_name": "points",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)/points",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "points_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)/points/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "points_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)/points/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "453973187"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "points_element0_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)/points/element #0/element #1",
                                                    "correspondingType": "int",
                                                    "value": "-383379633"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "points_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)/points/element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "points_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)/points/element #1/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-1354448575"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "points_element1_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)/points/element #1/element #1",
                                                    "correspondingType": "int",
                                                    "value": "1900155998"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findMinArrowShots_vector_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_findMinArrowShots_vector_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> points;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode points */\nvector<int> points_element0;\nint points_element0_element0=453973187;\npoints_element0.push_back(points_element0_element0);\nint points_element0_element1=-383379633;\npoints_element0.push_back(points_element0_element1);\npoints.push_back(points_element0);\nvector<int> points_element1;\nint points_element1_element0=-1354448575;\npoints_element1.push_back(points_element1_element0);\nint points_element1_element1=1900155998;\npoints_element1.push_back(points_element1_element1);\npoints.push_back(points_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMinArrowShots_vector_vector_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMinArrowShots(points);\nAKA_fCall++;AKA_mark(\"Return from: ./8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_points;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> points;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode points */\nvector<int> points_element0;\nint points_element0_element0=453973187;\npoints_element0.push_back(points_element0_element0);\nint points_element0_element1=-383379633;\npoints_element0.push_back(points_element0_element1);\npoints.push_back(points_element0);\nvector<int> points_element1;\nint points_element1_element0=-1354448575;\npoints_element1.push_back(points_element1_element0);\nint points_element1_element1=1900155998;\npoints_element1.push_back(points_element1_element1);\npoints.push_back(points_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {     static bool cmp(vector<int>&a, vector<int>&b)     {         return a[1] < b[1];     }      public:     int findMinArrowShots(vector<vector<int>>& points)      {         sort(points.begin(), points.end(), cmp);         int i = 0;         int count = 0;         while (i<points.size())         {             count++;             int j = i+1;             while (j<points.size() && points[j][0]<=points[i][1])                 j++;             i = j;         }         return count;             } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/8/452.Minimum-Number-of-Arrows-to-Burst-Balloons.cpp/Solution/findMinArrowShots(vector<vector<int>>&)"
    },
    {
        "f": [],
        "fm": "vector<int> findPermutation(string pattern)      {         pattern = \"I\" + pattern;         int n = pattern.size();                  int mx = 0;         vector<int>arr;                  for (int i=0; i<n; i++)         {             int j = i+1;             while (j<n && pattern[j]=='D')                 j++;             int count = j-i;                         for (int k= mx+count; k>=mx+1; k--)                 arr.push_back(k);                         mx = mx+count;                         i = j-1;                     }                  return arr;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "484.Find-Permutation.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./8/484.Find-Permutation.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./8/484.Find-Permutation.cpp/Solution/findPermutation(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./8/484.Find-Permutation.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/484.Find-Permutation.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./8/484.Find-Permutation.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/484.Find-Permutation.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./8/484.Find-Permutation.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./8/484.Find-Permutation.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findPermutation(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": "./8/484.Find-Permutation.cpp/Solution/findPermutation(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "EXPECTED_pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./8/484.Find-Permutation.cpp/Solution/findPermutation(string)/pattern",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./8/484.Find-Permutation.cpp/Solution/findPermutation(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "pattern",
                                    "virtual_name": "pattern",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./8/484.Find-Permutation.cpp/Solution/findPermutation(string)/pattern",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "pattern[0]",
                                            "virtual_name": "pattern[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./8/484.Find-Permutation.cpp/Solution/findPermutation(string)/pattern/pattern[0]",
                                            "correspondingType": "char",
                                            "value": "-8"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": "./8/484.Find-Permutation.cpp/Solution/findPermutation(string)/RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findPermutation_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_findPermutation_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/484.Find-Permutation.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName779831 = new char[2];akaRandomName779831[0] = -8;akaRandomName779831[1] = '\\0';string pattern=akaRandomName779831;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findPermutation_string_random_3\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findPermutation(pattern);\nAKA_fCall++;AKA_mark(\"Return from: ./8/484.Find-Permutation.cpp/Solution/findPermutation(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/484.Find-Permutation.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName191681 = new char[2];akaRandomName191681[0] = -8;akaRandomName191681[1] = '\\0';string pattern=akaRandomName191681;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode pattern */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     vector<int> findPermutation(string pattern)      {         pattern = \"I\" + pattern;         int n = pattern.size();                  int mx = 0;         vector<int>arr;                  for (int i=0; i<n; i++)         {             int j = i+1;             while (j<n && pattern[j]=='D')                 j++;             int count = j-i;                         for (int k= mx+count; k>=mx+1; k--)                 arr.push_back(k);                         mx = mx+count;                         i = j-1;                     }                  return arr;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/8/484.Find-Permutation.cpp/Solution/findPermutation(string)"
    },
    {
        "f": [],
        "fm": "string findLongestWord(string S, vector<string>& dictionary)      {         int m = S.size();         S = \"#\"+S;         int next[m+1][26];                  for (int k=0; k<26; k++)             next[m][k] = -1;         for (int i=m; i>=1; i--)         {             for (int k=0; k<26; k++)                 next[i-1][k] = next[i][k];             next[i-1][S[i]-'a'] = i;         }                  string ret = \"\";         for (auto word: dictionary)         {             int flag = 1;             int i = 0;             for (auto ch: word)             {                 i = next[i][ch-'a'];                 if (i==-1)                 {                     flag = 0;                     break;                 }                             }             if (flag)             {                 if (word.size() > ret.size() || (word.size() == ret.size() && word < ret))                     ret = word;             }         }         return ret;             }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "524.Longest-Word-in-Dictionary-through-Deleting.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findLongestWord(string,vector<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "S",
                                    "virtual_name": "EXPECTED_S",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/S",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "dictionary",
                                    "virtual_name": "EXPECTED_dictionary",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/dictionary",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "S",
                                    "virtual_name": "S",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/S",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "S[0]",
                                            "virtual_name": "S[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/S/S[0]",
                                            "correspondingType": "char",
                                            "value": "-13"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "dictionary",
                                    "virtual_name": "dictionary",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/dictionary",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "dictionary_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/dictionary/element #0",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "dictionary_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/dictionary/element #0/element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "10"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "dictionary_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/dictionary/element #1",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "dictionary_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/dictionary/element #1/element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "-90"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findLongestWord_string_vector_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_findLongestWord_string_vector_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/524.Longest-Word-in-Dictionary-through-Deleting.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName918672 = new char[2];akaRandomName918672[0] = -13;akaRandomName918672[1] = '\\0';string S=akaRandomName918672;\nvector<string> dictionary;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode S */\n/* VectorDataNode dictionary */\nchar* akaRandomName844229 = new char[2];akaRandomName844229[0] = 10;akaRandomName844229[1] = '\\0';string dictionary_element0=akaRandomName844229;\ndictionary.push_back(dictionary_element0);\nchar* akaRandomName847428 = new char[2];akaRandomName847428[0] = -90;akaRandomName847428[1] = '\\0';string dictionary_element1=akaRandomName847428;\ndictionary.push_back(dictionary_element1);\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findLongestWord_string_vector_string_random_0\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findLongestWord(S,dictionary);\nAKA_fCall++;AKA_mark(\"Return from: ./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)\");\n\n\n\nvector<string> EXPECTED_dictionary;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/524.Longest-Word-in-Dictionary-through-Deleting.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName558196 = new char[2];akaRandomName558196[0] = -13;akaRandomName558196[1] = '\\0';string S=akaRandomName558196;\nvector<string> dictionary;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode S */\n/* VectorDataNode dictionary */\nchar* akaRandomName302202 = new char[2];akaRandomName302202[0] = 10;akaRandomName302202[1] = '\\0';string dictionary_element0=akaRandomName302202;\ndictionary.push_back(dictionary_element0);\nchar* akaRandomName748019 = new char[2];akaRandomName748019[0] = -90;akaRandomName748019[1] = '\\0';string dictionary_element1=akaRandomName748019;\ndictionary.push_back(dictionary_element1);\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "524.Longest-Word-in-Dictionary-through-Deleting.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findLongestWord(string,vector<string>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "dictionary",
                                    "virtual_name": "EXPECTED_dictionary",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/dictionary",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "S",
                                    "virtual_name": "EXPECTED_S",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/S",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "S",
                                    "virtual_name": "S",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/S",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "S[0]",
                                            "virtual_name": "S[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/S/S[0]",
                                            "correspondingType": "char",
                                            "value": "-98"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "dictionary",
                                    "virtual_name": "dictionary",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/dictionary",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "dictionary_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/dictionary/element #0",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "dictionary_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/dictionary/element #0/element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "-64"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #1",
                                            "virtual_name": "dictionary_element1",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/dictionary/element #1",
                                            "correspondingType": "string",
                                            "value": "2",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #1[0]",
                                                    "virtual_name": "dictionary_element1[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/dictionary/element #1/element #1[0]",
                                                    "correspondingType": "char",
                                                    "value": "-96"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)/RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findLongestWord_string_vector_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_findLongestWord_string_vector_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/524.Longest-Word-in-Dictionary-through-Deleting.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName51524 = new char[2];akaRandomName51524[0] = -98;akaRandomName51524[1] = '\\0';string S=akaRandomName51524;\nvector<string> dictionary;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode S */\n/* VectorDataNode dictionary */\nchar* akaRandomName421378 = new char[2];akaRandomName421378[0] = -64;akaRandomName421378[1] = '\\0';string dictionary_element0=akaRandomName421378;\ndictionary.push_back(dictionary_element0);\nchar* akaRandomName194694 = new char[2];akaRandomName194694[0] = -96;akaRandomName194694[1] = '\\0';string dictionary_element1=akaRandomName194694;\ndictionary.push_back(dictionary_element1);\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findLongestWord_string_vector_string_random_3\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findLongestWord(S,dictionary);\nAKA_fCall++;AKA_mark(\"Return from: ./8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)\");\n\n\n\nvector<string> EXPECTED_dictionary;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/524.Longest-Word-in-Dictionary-through-Deleting.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName674252 = new char[2];akaRandomName674252[0] = -98;akaRandomName674252[1] = '\\0';string S=akaRandomName674252;\nvector<string> dictionary;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode S */\n/* VectorDataNode dictionary */\nchar* akaRandomName986877 = new char[2];akaRandomName986877[0] = -64;akaRandomName986877[1] = '\\0';string dictionary_element0=akaRandomName986877;\ndictionary.push_back(dictionary_element0);\nchar* akaRandomName206180 = new char[2];akaRandomName206180[0] = -96;akaRandomName206180[1] = '\\0';string dictionary_element1=akaRandomName206180;\ndictionary.push_back(dictionary_element1);\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     string findLongestWord(string S, vector<string>& dictionary)      {         int m = S.size();         S = \"#\"+S;         int next[m+1][26];                  for (int k=0; k<26; k++)             next[m][k] = -1;         for (int i=m; i>=1; i--)         {             for (int k=0; k<26; k++)                 next[i-1][k] = next[i][k];             next[i-1][S[i]-'a'] = i;         }                  string ret = \"\";         for (auto word: dictionary)         {             int flag = 1;             int i = 0;             for (auto ch: word)             {                 i = next[i][ch-'a'];                 if (i==-1)                 {                     flag = 0;                     break;                 }                             }             if (flag)             {                 if (word.size() > ret.size() || (word.size() == ret.size() && word < ret))                     ret = word;             }         }         return ret;             } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/8/524.Longest-Word-in-Dictionary-through-Deleting.cpp/Solution/findLongestWord(string,vector<string>&)"
    },
    {
        "f": [],
        "fm": "int nextGreaterElement(int n)      {         vector<int>digits;                 while(n>0)         {             digits.push_back(n%10);             n=n/10;         }         int m = digits.size();          reverse(digits.begin(), digits.end());          int i = m-1;         while (i>=1 && digits[i-1] >= digits[i])             i--;         if (i==0) return -1;          i--;         int j = m-1;         while (digits[j] <= digits[i])             j--;         swap(digits[i], digits[j]);         sort(digits.begin()+i+1, digits.end());                  long long ret=0;         for (int i=0; i<m; i++)             ret = ret*10+digits[i];                  if (ret>INT_MAX) return -1;         else return ret;             }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "556.Next-Greater-Element-III.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./8/556.Next-Greater-Element-III.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./8/556.Next-Greater-Element-III.cpp/Solution/nextGreaterElement(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./8/556.Next-Greater-Element-III.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/556.Next-Greater-Element-III.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./8/556.Next-Greater-Element-III.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/556.Next-Greater-Element-III.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./8/556.Next-Greater-Element-III.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./8/556.Next-Greater-Element-III.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "nextGreaterElement(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./8/556.Next-Greater-Element-III.cpp/Solution/nextGreaterElement(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./8/556.Next-Greater-Element-III.cpp/Solution/nextGreaterElement(int)/n",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./8/556.Next-Greater-Element-III.cpp/Solution/nextGreaterElement(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./8/556.Next-Greater-Element-III.cpp/Solution/nextGreaterElement(int)/n",
                                    "correspondingType": "int",
                                    "value": "4"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./8/556.Next-Greater-Element-III.cpp/Solution/nextGreaterElement(int)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_nextGreaterElement_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_nextGreaterElement_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/556.Next-Greater-Element-III.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=4;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_nextGreaterElement_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->nextGreaterElement(n);\nAKA_fCall++;AKA_mark(\"Return from: ./8/556.Next-Greater-Element-III.cpp/Solution/nextGreaterElement(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/556.Next-Greater-Element-III.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=4;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int nextGreaterElement(int n)      {         vector<int>digits;                 while(n>0)         {             digits.push_back(n%10);             n=n/10;         }         int m = digits.size();          reverse(digits.begin(), digits.end());          int i = m-1;         while (i>=1 && digits[i-1] >= digits[i])             i--;         if (i==0) return -1;          i--;         int j = m-1;         while (digits[j] <= digits[i])             j--;         swap(digits[i], digits[j]);         sort(digits.begin()+i+1, digits.end());                  long long ret=0;         for (int i=0; i<m; i++)             ret = ret*10+digits[i];                  if (ret>INT_MAX) return -1;         else return ret;             } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/8/556.Next-Greater-Element-III.cpp/Solution/nextGreaterElement(int)"
    },
    {
        "f": [],
        "fm": "int findUnsortedSubarray(vector<int>& nums)      {         int curMax=INT_MIN;         int right_bound=0;         for (int i=0; i<nums.size(); i++)         {             if (nums[i]<curMax)                 right_bound=i;             curMax=max(curMax,nums[i]);         }                  int curMin=INT_MAX;         int left_bound=nums.size()-1;         for (int i=nums.size()-1; i>=0; i--)         {             if (nums[i]>curMin)                 left_bound=i;             curMin=min(curMin,nums[i]);         }                          cout<<left_bound<<\" \"<<right_bound<<endl;                  return left_bound>=right_bound?0:right_bound-left_bound+1;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "581.shortest-unsorted-continuous-subarray.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./8/581.shortest-unsorted-continuous-subarray.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution/findUnsortedSubarray(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findUnsortedSubarray(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution/findUnsortedSubarray(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution/findUnsortedSubarray(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution/findUnsortedSubarray(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution/findUnsortedSubarray(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution/findUnsortedSubarray(vector<int>&)/nums/element #0",
                                            "correspondingType": "int",
                                            "value": "-79027960"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution/findUnsortedSubarray(vector<int>&)/nums/element #1",
                                            "correspondingType": "int",
                                            "value": "-517077235"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./8/581.shortest-unsorted-continuous-subarray.cpp/Solution/findUnsortedSubarray(vector<int>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findUnsortedSubarray_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_findUnsortedSubarray_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/581.shortest-unsorted-continuous-subarray.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-79027960;\nnums.push_back(nums_element0);\nint nums_element1=-517077235;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findUnsortedSubarray_vector_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findUnsortedSubarray(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./8/581.shortest-unsorted-continuous-subarray.cpp/Solution/findUnsortedSubarray(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/581.shortest-unsorted-continuous-subarray.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-79027960;\nnums.push_back(nums_element0);\nint nums_element1=-517077235;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int findUnsortedSubarray(vector<int>& nums)      {         int curMax=INT_MIN;         int right_bound=0;         for (int i=0; i<nums.size(); i++)         {             if (nums[i]<curMax)                 right_bound=i;             curMax=max(curMax,nums[i]);         }                  int curMin=INT_MAX;         int left_bound=nums.size()-1;         for (int i=nums.size()-1; i>=0; i--)         {             if (nums[i]>curMin)                 left_bound=i;             curMin=min(curMin,nums[i]);         }                          cout<<left_bound<<\" \"<<right_bound<<endl;                  return left_bound>=right_bound?0:right_bound-left_bound+1;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/8/581.shortest-unsorted-continuous-subarray.cpp/Solution/findUnsortedSubarray(vector<int>&)"
    },
    {
        "f": [],
        "fm": "int maxDistance(vector<vector<int>>& arrays)      {         vector<int>Mins;         vector<int>Maxs;         for (int i=0; i<arrays.size(); i++)         {             Mins.push_back(arrays[i][0]);             Maxs.push_back(arrays[i].back());         }                  sort(Mins.begin(),Mins.end());         sort(Maxs.begin(),Maxs.end());                  int N=arrays.size();         int flag=0;         for (int i=0; i<arrays.size(); i++)         {             if (arrays[i][0]==Mins[0] && arrays[i].back()==Maxs.back() )             {                 flag=1;                 break;                                 }                     }                  if (flag==0)             return Maxs.back()-Mins[0];         else             return max(Maxs.back()-Mins[1],Maxs[N-2]-Mins[0]);     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "624.Maximum-Distance-in-Arrays.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./8/624.Maximum-Distance-in-Arrays.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "maxDistance(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "arrays",
                                    "virtual_name": "EXPECTED_arrays",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/arrays",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "arrays",
                                    "virtual_name": "arrays",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/arrays",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "arrays_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/arrays/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "arrays_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/arrays/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-1192157257"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "arrays_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/arrays/element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "arrays_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/arrays/element #1/element #0",
                                                    "correspondingType": "int",
                                                    "value": "1150713284"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_maxDistance_vector_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_maxDistance_vector_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/624.Maximum-Distance-in-Arrays.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> arrays;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode arrays */\nvector<int> arrays_element0;\nint arrays_element0_element0=-1192157257;\narrays_element0.push_back(arrays_element0_element0);\narrays.push_back(arrays_element0);\nvector<int> arrays_element1;\nint arrays_element1_element0=1150713284;\narrays_element1.push_back(arrays_element1_element0);\narrays.push_back(arrays_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxDistance_vector_vector_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxDistance(arrays);\nAKA_fCall++;AKA_mark(\"Return from: ./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_arrays;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/624.Maximum-Distance-in-Arrays.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> arrays;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode arrays */\nvector<int> arrays_element0;\nint arrays_element0_element0=-1192157257;\narrays_element0.push_back(arrays_element0_element0);\narrays.push_back(arrays_element0);\nvector<int> arrays_element1;\nint arrays_element1_element0=1150713284;\narrays_element1.push_back(arrays_element1_element0);\narrays.push_back(arrays_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "624.Maximum-Distance-in-Arrays.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./8/624.Maximum-Distance-in-Arrays.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "maxDistance(vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "arrays",
                                    "virtual_name": "EXPECTED_arrays",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/arrays",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "arrays",
                                    "virtual_name": "arrays",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/arrays",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "arrays_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/arrays/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "arrays_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/arrays/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "699150285"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "arrays_element0_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/arrays/element #0/element #1",
                                                    "correspondingType": "int",
                                                    "value": "986277783"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_maxDistance_vector_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_maxDistance_vector_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/624.Maximum-Distance-in-Arrays.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> arrays;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode arrays */\nvector<int> arrays_element0;\nint arrays_element0_element0=699150285;\narrays_element0.push_back(arrays_element0_element0);\nint arrays_element0_element1=986277783;\narrays_element0.push_back(arrays_element0_element1);\narrays.push_back(arrays_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxDistance_vector_vector_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxDistance(arrays);\nAKA_fCall++;AKA_mark(\"Return from: ./8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_arrays;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/624.Maximum-Distance-in-Arrays.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> arrays;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode arrays */\nvector<int> arrays_element0;\nint arrays_element0_element0=699150285;\narrays_element0.push_back(arrays_element0_element0);\nint arrays_element0_element1=986277783;\narrays_element0.push_back(arrays_element0_element1);\narrays.push_back(arrays_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int maxDistance(vector<vector<int>>& arrays)      {         vector<int>Mins;         vector<int>Maxs;         for (int i=0; i<arrays.size(); i++)         {             Mins.push_back(arrays[i][0]);             Maxs.push_back(arrays[i].back());         }                  sort(Mins.begin(),Mins.end());         sort(Maxs.begin(),Maxs.end());                  int N=arrays.size();         int flag=0;         for (int i=0; i<arrays.size(); i++)         {             if (arrays[i][0]==Mins[0] && arrays[i].back()==Maxs.back() )             {                 flag=1;                 break;                                 }                     }                  if (flag==0)             return Maxs.back()-Mins[0];         else             return max(Maxs.back()-Mins[1],Maxs[N-2]-Mins[0]);     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/8/624.Maximum-Distance-in-Arrays.cpp/Solution/maxDistance(vector<vector<int>>&)"
    }
]
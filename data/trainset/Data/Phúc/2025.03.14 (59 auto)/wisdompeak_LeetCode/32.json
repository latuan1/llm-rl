[
    {
        "f": [],
        "fm": "int numberOfRounds(string startTime, string finishTime) {         Time s(startTime), f(finishTime);         Time a(23, 59), b(0, 0);         if (!cmp(f, s)) {             return cnt(s, f);         } else {             f.h += 24;             return cnt(s, f);         }     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1904. The Number of Full Rounds You Have Played.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/1904. The Number of Full Rounds You Have Played.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "numberOfRounds(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "finishTime",
                                    "virtual_name": "EXPECTED_finishTime",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/finishTime",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "startTime",
                                    "virtual_name": "EXPECTED_startTime",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/startTime",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "startTime",
                                    "virtual_name": "startTime",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/startTime",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "startTime[0]",
                                            "virtual_name": "startTime[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/startTime/startTime[0]",
                                            "correspondingType": "char",
                                            "value": "82"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "finishTime",
                                    "virtual_name": "finishTime",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/finishTime",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "finishTime[0]",
                                            "virtual_name": "finishTime[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/finishTime/finishTime[0]",
                                            "correspondingType": "char",
                                            "value": "-83"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_numberOfRounds_string_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_numberOfRounds_string_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1904. The Number of Full Rounds You Have Played.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName360719 = new char[2];akaRandomName360719[0] = 82;akaRandomName360719[1] = '\\0';string startTime=akaRandomName360719;\nchar* akaRandomName310487 = new char[2];akaRandomName310487[0] = -83;akaRandomName310487[1] = '\\0';string finishTime=akaRandomName310487;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode startTime */\n/* NormalStringDataNode finishTime */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_numberOfRounds_string_string_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->numberOfRounds(startTime,finishTime);\nAKA_fCall++;AKA_mark(\"Return from: ./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1904. The Number of Full Rounds You Have Played.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName115343 = new char[2];akaRandomName115343[0] = 82;akaRandomName115343[1] = '\\0';string startTime=akaRandomName115343;\nchar* akaRandomName236623 = new char[2];akaRandomName236623[0] = -83;akaRandomName236623[1] = '\\0';string finishTime=akaRandomName236623;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode startTime */\n/* NormalStringDataNode finishTime */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1904. The Number of Full Rounds You Have Played.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/1904. The Number of Full Rounds You Have Played.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "numberOfRounds(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "finishTime",
                                    "virtual_name": "EXPECTED_finishTime",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/finishTime",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "startTime",
                                    "virtual_name": "EXPECTED_startTime",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/startTime",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "startTime",
                                    "virtual_name": "startTime",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/startTime",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "startTime[0]",
                                            "virtual_name": "startTime[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/startTime/startTime[0]",
                                            "correspondingType": "char",
                                            "value": "-61"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "finishTime",
                                    "virtual_name": "finishTime",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/finishTime",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "finishTime[0]",
                                            "virtual_name": "finishTime[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/finishTime/finishTime[0]",
                                            "correspondingType": "char",
                                            "value": "52"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_numberOfRounds_string_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_numberOfRounds_string_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1904. The Number of Full Rounds You Have Played.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName276377 = new char[2];akaRandomName276377[0] = -61;akaRandomName276377[1] = '\\0';string startTime=akaRandomName276377;\nchar* akaRandomName618622 = new char[2];akaRandomName618622[0] = 52;akaRandomName618622[1] = '\\0';string finishTime=akaRandomName618622;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode startTime */\n/* NormalStringDataNode finishTime */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_numberOfRounds_string_string_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->numberOfRounds(startTime,finishTime);\nAKA_fCall++;AKA_mark(\"Return from: ./32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1904. The Number of Full Rounds You Have Played.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName278936 = new char[2];akaRandomName278936[0] = -61;akaRandomName278936[1] = '\\0';string startTime=akaRandomName278936;\nchar* akaRandomName884967 = new char[2];akaRandomName884967[0] = 52;akaRandomName884967[1] = '\\0';string finishTime=akaRandomName884967;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode startTime */\n/* NormalStringDataNode finishTime */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {    public:     int numberOfRounds(string startTime, string finishTime) {         Time s(startTime), f(finishTime);         Time a(23, 59), b(0, 0);         if (!cmp(f, s)) {             return cnt(s, f);         } else {             f.h += 24;             return cnt(s, f);         }     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/1904. The Number of Full Rounds You Have Played.cpp/Solution/numberOfRounds(string,string)"
    },
    {
        "f": [
            "vector<vector<int>> g1;",
            "vector<vector<int>> g2;",
            "vector<vector<int>> c1;",
            "vector<vector<int>> c2;",
            "int m;",
            "int n;",
            "int ans = 0;",
            "int dx[4] = {0, 0, 1, -1};",
            "int dy[4] = {1, -1, 0, 0};"
        ],
        "fm": "bool valid(int i, int j) {         return i >= 0 && i < m && j >= 0 && j < n;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1905. Count Sub Islands.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/1905. Count Sub Islands.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/1905. Count Sub Islands.cpp/Solution/valid(int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1905. Count Sub Islands.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1905. Count Sub Islands.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/1905. Count Sub Islands.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                    "name": "g1",
                                                    "virtual_name": "AKA_INSTANCE___Solution->g1",
                                                    "dataType": "vector<vector<int>>",
                                                    "realType": "vector<vector<int>>",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/g1",
                                                    "correspondingType": "STLListBaseType",
                                                    "templateArg": "vector<int>"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                    "name": "g2",
                                                    "virtual_name": "AKA_INSTANCE___Solution->g2",
                                                    "dataType": "vector<vector<int>>",
                                                    "realType": "vector<vector<int>>",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/g2",
                                                    "correspondingType": "STLListBaseType",
                                                    "templateArg": "vector<int>"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                    "name": "c1",
                                                    "virtual_name": "AKA_INSTANCE___Solution->c1",
                                                    "dataType": "vector<vector<int>>",
                                                    "realType": "vector<vector<int>>",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/c1",
                                                    "correspondingType": "STLListBaseType",
                                                    "templateArg": "vector<int>"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                    "name": "c2",
                                                    "virtual_name": "AKA_INSTANCE___Solution->c2",
                                                    "dataType": "vector<vector<int>>",
                                                    "realType": "vector<vector<int>>",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/c2",
                                                    "correspondingType": "STLListBaseType",
                                                    "templateArg": "vector<int>"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "m",
                                                    "virtual_name": "AKA_INSTANCE___Solution->m",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/m",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "n",
                                                    "virtual_name": "AKA_INSTANCE___Solution->n",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/n",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "ans",
                                                    "virtual_name": "AKA_INSTANCE___Solution->ans",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/ans",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.OneDimensionNumberDataNode",
                                                    "name": "dx",
                                                    "virtual_name": "AKA_INSTANCE___Solution->dx",
                                                    "dataType": "int[4]",
                                                    "realType": "int[4]",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dx",
                                                    "correspondingType": "",
                                                    "fixedSize": true,
                                                    "size": 4,
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dx[0]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dx[0]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dx/dx[0]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dx[1]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dx[1]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dx/dx[1]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dx[2]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dx[2]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dx/dx[2]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dx[3]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dx[3]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dx/dx[3]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.OneDimensionNumberDataNode",
                                                    "name": "dy",
                                                    "virtual_name": "AKA_INSTANCE___Solution->dy",
                                                    "dataType": "int[4]",
                                                    "realType": "int[4]",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dy",
                                                    "correspondingType": "",
                                                    "fixedSize": true,
                                                    "size": 4,
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dy[0]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dy[0]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dy/dy[0]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dy[1]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dy[1]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dy/dy[1]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dy[2]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dy[2]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dy/dy[2]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dy[3]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dy[3]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dy/dy[3]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "valid(int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": "./32/1905. Count Sub Islands.cpp/Solution/valid(int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "j",
                                    "virtual_name": "EXPECTED_j",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/valid(int,int)/j",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "i",
                                    "virtual_name": "EXPECTED_i",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/valid(int,int)/i",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/1905. Count Sub Islands.cpp/Solution/valid(int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "i",
                                    "virtual_name": "i",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/valid(int,int)/i",
                                    "correspondingType": "int",
                                    "value": "-383810084"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "j",
                                    "virtual_name": "j",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/valid(int,int)/j",
                                    "correspondingType": "int",
                                    "value": "191696807"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/valid(int,int)/RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_valid_int_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_valid_int_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1905. Count Sub Islands.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* VectorDataNode g1 */\n/* VectorDataNode g2 */\n/* VectorDataNode c1 */\n/* VectorDataNode c2 */\n/* NormalNumberDataNode m */\n/* m : null value -> no code */\n/* NormalNumberDataNode n */\n/* n : null value -> no code */\n/* NormalNumberDataNode ans */\n/* ans : null value -> no code */\n/* OneDimensionNumberDataNode dx */\n;\n/* NormalNumberDataNode dx[0] */\n/* dx[0] : null value -> no code */\n/* NormalNumberDataNode dx[1] */\n/* dx[1] : null value -> no code */\n/* NormalNumberDataNode dx[2] */\n/* dx[2] : null value -> no code */\n/* NormalNumberDataNode dx[3] */\n/* dx[3] : null value -> no code */\n/* OneDimensionNumberDataNode dy */\n;\n/* NormalNumberDataNode dy[0] */\n/* dy[0] : null value -> no code */\n/* NormalNumberDataNode dy[1] */\n/* dy[1] : null value -> no code */\n/* NormalNumberDataNode dy[2] */\n/* dy[2] : null value -> no code */\n/* NormalNumberDataNode dy[3] */\n/* dy[3] : null value -> no code */\n\n\n\n\nint i=-383810084;\n\n\nint j=191696807;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode i */\n/* NormalNumberDataNode j */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_valid_int_int_random_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->valid(i,j);\nAKA_fCall++;AKA_mark(\"Return from: ./32/1905. Count Sub Islands.cpp/Solution/valid(int,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1905. Count Sub Islands.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* VectorDataNode g1 */\n/* VectorDataNode g2 */\n/* VectorDataNode c1 */\n/* VectorDataNode c2 */\n/* NormalNumberDataNode m */\n/* m : null value -> no code */\n/* NormalNumberDataNode n */\n/* n : null value -> no code */\n/* NormalNumberDataNode ans */\n/* ans : null value -> no code */\n/* OneDimensionNumberDataNode dx */\n;\n/* NormalNumberDataNode dx[0] */\n/* dx[0] : null value -> no code */\n/* NormalNumberDataNode dx[1] */\n/* dx[1] : null value -> no code */\n/* NormalNumberDataNode dx[2] */\n/* dx[2] : null value -> no code */\n/* NormalNumberDataNode dx[3] */\n/* dx[3] : null value -> no code */\n/* OneDimensionNumberDataNode dy */\n;\n/* NormalNumberDataNode dy[0] */\n/* dy[0] : null value -> no code */\n/* NormalNumberDataNode dy[1] */\n/* dy[1] : null value -> no code */\n/* NormalNumberDataNode dy[2] */\n/* dy[2] : null value -> no code */\n/* NormalNumberDataNode dy[3] */\n/* dy[3] : null value -> no code */\n\n\n\n\nint i=-383810084;\n\n\nint j=191696807;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode i */\n/* NormalNumberDataNode j */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {     vector<vector<int>> g1, g2;     vector<vector<int>> c1, c2;     int m, n, ans = 0;     int dx[4] = {0, 0, 1, -1};     int dy[4] = {1, -1, 0, 0};     bool valid(int i, int j) {         return i >= 0 && i < m && j >= 0 && j < n;     }     void dfs(int i, int j, int color) {         if (c1[i][j] != -1) return;         c1[i][j] = color;         for (int k = 0; k < 4; k++) {             int x = i + dx[k], y = j + dy[k];             // cout << i << \" \" << j << \" \" << x << \" \" << y << endl;             if (valid(x, y) && g1[x][y] == 1) {                 dfs(x, y, color);             }         }     }     bool dfs1(int i, int j, int color, int color1) {         if (c2[i][j] != -1) {             return 1;         }         if (c1[i][j] != color1) {             return 0;         }         c2[i][j] = color;         bool ok = 1;         for (int k = 0; k < 4; k++) {             int x = i + dx[k], y = j + dy[k];             if (valid(x, y) && g2[x][y] == 1) {                 if (!dfs1(x, y, color, color1)) ok = false;             }         }         return ok;     }     public:     int countSubIslands(vector<vector<int>>& grid1, vector<vector<int>>& grid2) {         g1 = grid1, g2 = grid2;         m = g1.size(), n = g1[0].size();         c1 = vector<vector<int>>(m, vector<int>(n, -1));         c2 = vector<vector<int>>(m, vector<int>(n, -1));         int color = 0;         for (int i = 0; i < m; i++) {             for (int j = 0; j < n; j++) {                 if (c1[i][j] == -1 && g1[i][j] == 1) {                     // cout << i << \" \" << j << \" \" << color << endl;                     dfs(i, j, color++);                 }             }         }         for (int i = 0; i < m; i++) {             for (int j = 0; j < n; j++) {                 if (c2[i][j] == -1 && c1[i][j] != -1 && g2[i][j] == 1) {                     ans += dfs1(i, j, color++, c1[i][j]);                 }             }         }         return ans;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/1905. Count Sub Islands.cpp/Solution/valid(int,int)"
    },
    {
        "f": [
            "vector<vector<int>> g1;",
            "vector<vector<int>> g2;",
            "vector<vector<int>> c1;",
            "vector<vector<int>> c2;",
            "int m;",
            "int n;",
            "int ans = 0;",
            "int dx[4] = {0, 0, 1, -1};",
            "int dy[4] = {1, -1, 0, 0};"
        ],
        "fm": "int countSubIslands(vector<vector<int>>& grid1, vector<vector<int>>& grid2) {         g1 = grid1, g2 = grid2;         m = g1.size(), n = g1[0].size();         c1 = vector<vector<int>>(m, vector<int>(n, -1));         c2 = vector<vector<int>>(m, vector<int>(n, -1));         int color = 0;         for (int i = 0; i < m; i++) {             for (int j = 0; j < n; j++) {                 if (c1[i][j] == -1 && g1[i][j] == 1) {                     // cout << i << \" \" << j << \" \" << color << endl;                     dfs(i, j, color++);                 }             }         }         for (int i = 0; i < m; i++) {             for (int j = 0; j < n; j++) {                 if (c2[i][j] == -1 && c1[i][j] != -1 && g2[i][j] == 1) {                     ans += dfs1(i, j, color++, c1[i][j]);                 }             }         }         return ans;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1905. Count Sub Islands.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/1905. Count Sub Islands.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1905. Count Sub Islands.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1905. Count Sub Islands.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/1905. Count Sub Islands.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                    "name": "g1",
                                                    "virtual_name": "AKA_INSTANCE___Solution->g1",
                                                    "dataType": "vector<vector<int>>",
                                                    "realType": "vector<vector<int>>",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/g1",
                                                    "correspondingType": "STLListBaseType",
                                                    "templateArg": "vector<int>"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                    "name": "g2",
                                                    "virtual_name": "AKA_INSTANCE___Solution->g2",
                                                    "dataType": "vector<vector<int>>",
                                                    "realType": "vector<vector<int>>",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/g2",
                                                    "correspondingType": "STLListBaseType",
                                                    "templateArg": "vector<int>"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                    "name": "c1",
                                                    "virtual_name": "AKA_INSTANCE___Solution->c1",
                                                    "dataType": "vector<vector<int>>",
                                                    "realType": "vector<vector<int>>",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/c1",
                                                    "correspondingType": "STLListBaseType",
                                                    "templateArg": "vector<int>"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                    "name": "c2",
                                                    "virtual_name": "AKA_INSTANCE___Solution->c2",
                                                    "dataType": "vector<vector<int>>",
                                                    "realType": "vector<vector<int>>",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/c2",
                                                    "correspondingType": "STLListBaseType",
                                                    "templateArg": "vector<int>"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "m",
                                                    "virtual_name": "AKA_INSTANCE___Solution->m",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/m",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "n",
                                                    "virtual_name": "AKA_INSTANCE___Solution->n",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/n",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "ans",
                                                    "virtual_name": "AKA_INSTANCE___Solution->ans",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/ans",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.OneDimensionNumberDataNode",
                                                    "name": "dx",
                                                    "virtual_name": "AKA_INSTANCE___Solution->dx",
                                                    "dataType": "int[4]",
                                                    "realType": "int[4]",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dx",
                                                    "correspondingType": "",
                                                    "fixedSize": true,
                                                    "size": 4,
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dx[0]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dx[0]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dx/dx[0]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dx[1]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dx[1]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dx/dx[1]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dx[2]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dx[2]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dx/dx[2]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dx[3]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dx[3]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dx/dx[3]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.OneDimensionNumberDataNode",
                                                    "name": "dy",
                                                    "virtual_name": "AKA_INSTANCE___Solution->dy",
                                                    "dataType": "int[4]",
                                                    "realType": "int[4]",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dy",
                                                    "correspondingType": "",
                                                    "fixedSize": true,
                                                    "size": 4,
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dy[0]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dy[0]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dy/dy[0]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dy[1]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dy[1]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dy/dy[1]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dy[2]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dy[2]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dy/dy[2]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "dy[3]",
                                                            "virtual_name": "AKA_INSTANCE___Solution->dy[3]",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/dy/dy[3]",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "countSubIslands(vector<vector<int>>&,vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "grid2",
                                    "virtual_name": "EXPECTED_grid2",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid2",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "grid1",
                                    "virtual_name": "EXPECTED_grid1",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid1",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "grid1",
                                    "virtual_name": "grid1",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid1",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "grid1_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid1/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 3,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "grid1_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid1/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "180289902"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "grid1_element0_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid1/element #0/element #1",
                                                    "correspondingType": "int",
                                                    "value": "2069479392"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #2",
                                                    "virtual_name": "grid1_element0_element2",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid1/element #0/element #2",
                                                    "correspondingType": "int",
                                                    "value": "-772649131"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "grid2",
                                    "virtual_name": "grid2",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid2",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "grid2_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid2/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 3,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "grid2_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid2/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "1988637282"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "grid2_element0_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid2/element #0/element #1",
                                                    "correspondingType": "int",
                                                    "value": "-909634024"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #2",
                                                    "virtual_name": "grid2_element0_element2",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid2/element #0/element #2",
                                                    "correspondingType": "int",
                                                    "value": "-973660758"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "grid2_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid2/element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "grid2_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid2/element #1/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-884017202"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #2",
                                            "virtual_name": "grid2_element2",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid2/element #2",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 3,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "grid2_element2_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid2/element #2/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-712073858"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "grid2_element2_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid2/element #2/element #1",
                                                    "correspondingType": "int",
                                                    "value": "-477521535"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #2",
                                                    "virtual_name": "grid2_element2_element2",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/grid2/element #2/element #2",
                                                    "correspondingType": "int",
                                                    "value": "929277583"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_countSubIslands_vector_vector_int_vector_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_countSubIslands_vector_vector_int_vector_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1905. Count Sub Islands.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* VectorDataNode g1 */\n/* VectorDataNode g2 */\n/* VectorDataNode c1 */\n/* VectorDataNode c2 */\n/* NormalNumberDataNode m */\n/* m : null value -> no code */\n/* NormalNumberDataNode n */\n/* n : null value -> no code */\n/* NormalNumberDataNode ans */\n/* ans : null value -> no code */\n/* OneDimensionNumberDataNode dx */\n;\n/* NormalNumberDataNode dx[0] */\n/* dx[0] : null value -> no code */\n/* NormalNumberDataNode dx[1] */\n/* dx[1] : null value -> no code */\n/* NormalNumberDataNode dx[2] */\n/* dx[2] : null value -> no code */\n/* NormalNumberDataNode dx[3] */\n/* dx[3] : null value -> no code */\n/* OneDimensionNumberDataNode dy */\n;\n/* NormalNumberDataNode dy[0] */\n/* dy[0] : null value -> no code */\n/* NormalNumberDataNode dy[1] */\n/* dy[1] : null value -> no code */\n/* NormalNumberDataNode dy[2] */\n/* dy[2] : null value -> no code */\n/* NormalNumberDataNode dy[3] */\n/* dy[3] : null value -> no code */\n\n\nvector<vector<int>> grid1;\nvector<vector<int>> grid2;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid1 */\nvector<int> grid1_element0;\nint grid1_element0_element0=180289902;\ngrid1_element0.push_back(grid1_element0_element0);\nint grid1_element0_element1=2069479392;\ngrid1_element0.push_back(grid1_element0_element1);\nint grid1_element0_element2=-772649131;\ngrid1_element0.push_back(grid1_element0_element2);\ngrid1.push_back(grid1_element0);\n/* VectorDataNode grid2 */\nvector<int> grid2_element0;\nint grid2_element0_element0=1988637282;\ngrid2_element0.push_back(grid2_element0_element0);\nint grid2_element0_element1=-909634024;\ngrid2_element0.push_back(grid2_element0_element1);\nint grid2_element0_element2=-973660758;\ngrid2_element0.push_back(grid2_element0_element2);\ngrid2.push_back(grid2_element0);\nvector<int> grid2_element1;\nint grid2_element1_element0=-884017202;\ngrid2_element1.push_back(grid2_element1_element0);\ngrid2.push_back(grid2_element1);\nvector<int> grid2_element2;\nint grid2_element2_element0=-712073858;\ngrid2_element2.push_back(grid2_element2_element0);\nint grid2_element2_element1=-477521535;\ngrid2_element2.push_back(grid2_element2_element1);\nint grid2_element2_element2=929277583;\ngrid2_element2.push_back(grid2_element2_element2);\ngrid2.push_back(grid2_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_countSubIslands_vector_vector_int_vector_vector_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->countSubIslands(grid1,grid2);\nAKA_fCall++;AKA_mark(\"Return from: ./32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_grid1;\n\nvector<vector<int>> EXPECTED_grid2;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1905. Count Sub Islands.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* VectorDataNode g1 */\n/* VectorDataNode g2 */\n/* VectorDataNode c1 */\n/* VectorDataNode c2 */\n/* NormalNumberDataNode m */\n/* m : null value -> no code */\n/* NormalNumberDataNode n */\n/* n : null value -> no code */\n/* NormalNumberDataNode ans */\n/* ans : null value -> no code */\n/* OneDimensionNumberDataNode dx */\n;\n/* NormalNumberDataNode dx[0] */\n/* dx[0] : null value -> no code */\n/* NormalNumberDataNode dx[1] */\n/* dx[1] : null value -> no code */\n/* NormalNumberDataNode dx[2] */\n/* dx[2] : null value -> no code */\n/* NormalNumberDataNode dx[3] */\n/* dx[3] : null value -> no code */\n/* OneDimensionNumberDataNode dy */\n;\n/* NormalNumberDataNode dy[0] */\n/* dy[0] : null value -> no code */\n/* NormalNumberDataNode dy[1] */\n/* dy[1] : null value -> no code */\n/* NormalNumberDataNode dy[2] */\n/* dy[2] : null value -> no code */\n/* NormalNumberDataNode dy[3] */\n/* dy[3] : null value -> no code */\n\n\nvector<vector<int>> grid1;\nvector<vector<int>> grid2;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid1 */\nvector<int> grid1_element0;\nint grid1_element0_element0=180289902;\ngrid1_element0.push_back(grid1_element0_element0);\nint grid1_element0_element1=2069479392;\ngrid1_element0.push_back(grid1_element0_element1);\nint grid1_element0_element2=-772649131;\ngrid1_element0.push_back(grid1_element0_element2);\ngrid1.push_back(grid1_element0);\n/* VectorDataNode grid2 */\nvector<int> grid2_element0;\nint grid2_element0_element0=1988637282;\ngrid2_element0.push_back(grid2_element0_element0);\nint grid2_element0_element1=-909634024;\ngrid2_element0.push_back(grid2_element0_element1);\nint grid2_element0_element2=-973660758;\ngrid2_element0.push_back(grid2_element0_element2);\ngrid2.push_back(grid2_element0);\nvector<int> grid2_element1;\nint grid2_element1_element0=-884017202;\ngrid2_element1.push_back(grid2_element1_element0);\ngrid2.push_back(grid2_element1);\nvector<int> grid2_element2;\nint grid2_element2_element0=-712073858;\ngrid2_element2.push_back(grid2_element2_element0);\nint grid2_element2_element1=-477521535;\ngrid2_element2.push_back(grid2_element2_element1);\nint grid2_element2_element2=929277583;\ngrid2_element2.push_back(grid2_element2_element2);\ngrid2.push_back(grid2_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {     vector<vector<int>> g1, g2;     vector<vector<int>> c1, c2;     int m, n, ans = 0;     int dx[4] = {0, 0, 1, -1};     int dy[4] = {1, -1, 0, 0};     bool valid(int i, int j) {         return i >= 0 && i < m && j >= 0 && j < n;     }     void dfs(int i, int j, int color) {         if (c1[i][j] != -1) return;         c1[i][j] = color;         for (int k = 0; k < 4; k++) {             int x = i + dx[k], y = j + dy[k];             // cout << i << \" \" << j << \" \" << x << \" \" << y << endl;             if (valid(x, y) && g1[x][y] == 1) {                 dfs(x, y, color);             }         }     }     bool dfs1(int i, int j, int color, int color1) {         if (c2[i][j] != -1) {             return 1;         }         if (c1[i][j] != color1) {             return 0;         }         c2[i][j] = color;         bool ok = 1;         for (int k = 0; k < 4; k++) {             int x = i + dx[k], y = j + dy[k];             if (valid(x, y) && g2[x][y] == 1) {                 if (!dfs1(x, y, color, color1)) ok = false;             }         }         return ok;     }     public:     int countSubIslands(vector<vector<int>>& grid1, vector<vector<int>>& grid2) {         g1 = grid1, g2 = grid2;         m = g1.size(), n = g1[0].size();         c1 = vector<vector<int>>(m, vector<int>(n, -1));         c2 = vector<vector<int>>(m, vector<int>(n, -1));         int color = 0;         for (int i = 0; i < m; i++) {             for (int j = 0; j < n; j++) {                 if (c1[i][j] == -1 && g1[i][j] == 1) {                     // cout << i << \" \" << j << \" \" << color << endl;                     dfs(i, j, color++);                 }             }         }         for (int i = 0; i < m; i++) {             for (int j = 0; j < n; j++) {                 if (c2[i][j] == -1 && c1[i][j] != -1 && g2[i][j] == 1) {                     ans += dfs1(i, j, color++, c1[i][j]);                 }             }         }         return ans;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/1905. Count Sub Islands.cpp/Solution/countSubIslands(vector<vector<int>>&,vector<vector<int>>&)"
    },
    {
        "f": [],
        "fm": "vector<vector<int>> rotateGrid(vector<vector<int>>& grid, int k) {         int m = grid.size(), n = grid[0].size();         for (int l = 0; l < min(m, n) / 2; l++) {             vector<vector<int>> tmp = grid;             int v = m - 2 * l, h = n - 2 * l;             int times = k % (2 * h + 2 * v - 4);             for (int g = 0; g < times; g++) {                 // 上面                 int i = l;                 for (int j = l; j < n - l; j++) {                     if (j == n - 1 - l) {                         tmp[i][j] = grid[i + 1][j];                     } else {                         tmp[i][j] = grid[i][j + 1];                     }                 }                 i = m - 1 - l;                 for (int j = l; j < n - l; j++) {                     if (j == l) {                         tmp[i][j] = grid[i - 1][j];                     } else {                         tmp[i][j] = grid[i][j - 1];                     }                 }                 // 左面                 int j = l;                 for (int i = l; i < m - l; i++) {                     if (i == l) {                         tmp[i][j] = grid[i][j + 1];                     } else {                         tmp[i][j] = grid[i - 1][j];                     }                 }                 j = n - 1 - l;                 for (int i = l; i < m - l; i++) {                     if (i == m - 1 - l) {                         tmp[i][j] = grid[i][j - 1];                     } else {                         tmp[i][j] = grid[i + 1][j];                     }                 }                 i = l;                 for (int j = l; j < n - l; j++) {                     grid[i][j] = tmp[i][j];                 }                 i = m - 1 - l;                 for (int j = l; j < n - l; j++) {                     grid[i][j] = tmp[i][j];                 }                 j = l;                 for (int i = l; i < m - l; i++) {                     grid[i][j] = tmp[i][j];                 }                 j = n - 1 - l;                 for (int i = l; i < m - l; i++) {                     grid[i][j] = tmp[i][j];                 }             }         }         return grid;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1914. Cyclically Rotating a Grid.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/1914. Cyclically Rotating a Grid.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1914. Cyclically Rotating a Grid.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1914. Cyclically Rotating a Grid.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/1914. Cyclically Rotating a Grid.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "rotateGrid(vector<vector<int>>&,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<int>>",
                            "realType": "vector<vector<int>>",
                            "functionNode": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "EXPECTED_k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)/k",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "grid",
                                    "virtual_name": "EXPECTED_grid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)/grid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "grid",
                                    "virtual_name": "grid",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)/grid",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "grid_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)/grid/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "grid_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)/grid/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "740972485"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "grid_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)/grid/element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "grid_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)/grid/element #1/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-1248325105"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "k",
                                    "virtual_name": "k",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)/k",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>",
                                    "external": false,
                                    "correspondingVar": "./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)/RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_rotateGrid_vector_vector_int_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_rotateGrid_vector_vector_int_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1914. Cyclically Rotating a Grid.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> grid;\n\n\nint k=3;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\nvector<int> grid_element0;\nint grid_element0_element0=740972485;\ngrid_element0.push_back(grid_element0_element0);\ngrid.push_back(grid_element0);\nvector<int> grid_element1;\nint grid_element1_element0=-1248325105;\ngrid_element1.push_back(grid_element1_element0);\ngrid.push_back(grid_element1);\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_rotateGrid_vector_vector_int_int_random_1\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->rotateGrid(grid,k);\nAKA_fCall++;AKA_mark(\"Return from: ./32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)\");\n\n\nvector<vector<int>> EXPECTED_grid;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1914. Cyclically Rotating a Grid.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> grid;\n\n\nint k=3;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\nvector<int> grid_element0;\nint grid_element0_element0=740972485;\ngrid_element0.push_back(grid_element0_element0);\ngrid.push_back(grid_element0);\nvector<int> grid_element1;\nint grid_element1_element0=-1248325105;\ngrid_element1.push_back(grid_element1_element0);\ngrid.push_back(grid_element1);\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {    public:     vector<vector<int>> rotateGrid(vector<vector<int>>& grid, int k) {         int m = grid.size(), n = grid[0].size();         for (int l = 0; l < min(m, n) / 2; l++) {             vector<vector<int>> tmp = grid;             int v = m - 2 * l, h = n - 2 * l;             int times = k % (2 * h + 2 * v - 4);             for (int g = 0; g < times; g++) {                 // 上面                 int i = l;                 for (int j = l; j < n - l; j++) {                     if (j == n - 1 - l) {                         tmp[i][j] = grid[i + 1][j];                     } else {                         tmp[i][j] = grid[i][j + 1];                     }                 }                 i = m - 1 - l;                 for (int j = l; j < n - l; j++) {                     if (j == l) {                         tmp[i][j] = grid[i - 1][j];                     } else {                         tmp[i][j] = grid[i][j - 1];                     }                 }                 // 左面                 int j = l;                 for (int i = l; i < m - l; i++) {                     if (i == l) {                         tmp[i][j] = grid[i][j + 1];                     } else {                         tmp[i][j] = grid[i - 1][j];                     }                 }                 j = n - 1 - l;                 for (int i = l; i < m - l; i++) {                     if (i == m - 1 - l) {                         tmp[i][j] = grid[i][j - 1];                     } else {                         tmp[i][j] = grid[i + 1][j];                     }                 }                 i = l;                 for (int j = l; j < n - l; j++) {                     grid[i][j] = tmp[i][j];                 }                 i = m - 1 - l;                 for (int j = l; j < n - l; j++) {                     grid[i][j] = tmp[i][j];                 }                 j = l;                 for (int i = l; i < m - l; i++) {                     grid[i][j] = tmp[i][j];                 }                 j = n - 1 - l;                 for (int i = l; i < m - l; i++) {                     grid[i][j] = tmp[i][j];                 }             }         }         return grid;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/1914. Cyclically Rotating a Grid.cpp/Solution/rotateGrid(vector<vector<int>>&,int)"
    },
    {
        "f": [],
        "fm": "int eliminateMaximum(vector<int>& dist, vector<int>& speed) {         int n = dist.size();         vector<double> t;         for (int i = 0; i < n; i++) {             t.push_back((double)dist[i] / speed[i]);         }         sort(t.begin(), t.end());         for (int i = 0; i < n; i++) {             if (t[i] <= i) return i;         }         return n;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1921. Eliminate Maximum Number of Monsters.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/1921. Eliminate Maximum Number of Monsters.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "eliminateMaximum(vector<int>&,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "dist",
                                    "virtual_name": "EXPECTED_dist",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/dist",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "speed",
                                    "virtual_name": "EXPECTED_speed",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/speed",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "dist",
                                    "virtual_name": "dist",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/dist",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "dist_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/dist/element #0",
                                            "correspondingType": "int",
                                            "value": "744749875"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "speed",
                                    "virtual_name": "speed",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/speed",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "speed_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/speed/element #0",
                                            "correspondingType": "int",
                                            "value": "-242462472"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_eliminateMaximum_vector_int_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_eliminateMaximum_vector_int_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1921. Eliminate Maximum Number of Monsters.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> dist;\nvector<int> speed;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode dist */\nint dist_element0=744749875;\ndist.push_back(dist_element0);\n/* VectorDataNode speed */\nint speed_element0=-242462472;\nspeed.push_back(speed_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_eliminateMaximum_vector_int_vector_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->eliminateMaximum(dist,speed);\nAKA_fCall++;AKA_mark(\"Return from: ./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)\");\n\n\nvector<int> EXPECTED_dist;\n\nvector<int> EXPECTED_speed;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1921. Eliminate Maximum Number of Monsters.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> dist;\nvector<int> speed;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode dist */\nint dist_element0=744749875;\ndist.push_back(dist_element0);\n/* VectorDataNode speed */\nint speed_element0=-242462472;\nspeed.push_back(speed_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1921. Eliminate Maximum Number of Monsters.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/1921. Eliminate Maximum Number of Monsters.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "eliminateMaximum(vector<int>&,vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "speed",
                                    "virtual_name": "EXPECTED_speed",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/speed",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "dist",
                                    "virtual_name": "EXPECTED_dist",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/dist",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "dist",
                                    "virtual_name": "dist",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/dist",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "dist_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/dist/element #0",
                                            "correspondingType": "int",
                                            "value": "134198802"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "speed",
                                    "virtual_name": "speed",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/speed",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "speed_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/speed/element #0",
                                            "correspondingType": "int",
                                            "value": "1257533282"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_eliminateMaximum_vector_int_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_eliminateMaximum_vector_int_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1921. Eliminate Maximum Number of Monsters.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> dist;\nvector<int> speed;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode dist */\nint dist_element0=134198802;\ndist.push_back(dist_element0);\n/* VectorDataNode speed */\nint speed_element0=1257533282;\nspeed.push_back(speed_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_eliminateMaximum_vector_int_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->eliminateMaximum(dist,speed);\nAKA_fCall++;AKA_mark(\"Return from: ./32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)\");\n\n\nvector<int> EXPECTED_dist;\n\nvector<int> EXPECTED_speed;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1921. Eliminate Maximum Number of Monsters.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> dist;\nvector<int> speed;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode dist */\nint dist_element0=134198802;\ndist.push_back(dist_element0);\n/* VectorDataNode speed */\nint speed_element0=1257533282;\nspeed.push_back(speed_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {    public:     int eliminateMaximum(vector<int>& dist, vector<int>& speed) {         int n = dist.size();         vector<double> t;         for (int i = 0; i < n; i++) {             t.push_back((double)dist[i] / speed[i]);         }         sort(t.begin(), t.end());         for (int i = 0; i < n; i++) {             if (t[i] <= i) return i;         }         return n;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/1921. Eliminate Maximum Number of Monsters.cpp/Solution/eliminateMaximum(vector<int>&,vector<int>&)"
    },
    {
        "f": [],
        "fm": "vector<int> canSeePersonsCount(vector<int>& heights) {         int n = heights.size();         heights.push_back(1e6);         vector<int> ans(n, 0), right(n, 0);          stack<int> s({n});         for (int i = n - 1; i >= 0; --i) {             while (heights[s.top()] < heights[i]) {                 s.pop();                 ans[i]++;             }             // 可以看到一个比他高的             if (s.top() != n) ans[i]++;             s.push(i);         }         return ans;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "1944. Number of Visible People in a Queue.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/1944. Number of Visible People in a Queue.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/1944. Number of Visible People in a Queue.cpp/Solution/canSeePersonsCount(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/1944. Number of Visible People in a Queue.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1944. Number of Visible People in a Queue.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/1944. Number of Visible People in a Queue.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/1944. Number of Visible People in a Queue.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/1944. Number of Visible People in a Queue.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/1944. Number of Visible People in a Queue.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "canSeePersonsCount(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": "./32/1944. Number of Visible People in a Queue.cpp/Solution/canSeePersonsCount(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "heights",
                                    "virtual_name": "EXPECTED_heights",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/1944. Number of Visible People in a Queue.cpp/Solution/canSeePersonsCount(vector<int>&)/heights",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/1944. Number of Visible People in a Queue.cpp/Solution/canSeePersonsCount(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "heights",
                                    "virtual_name": "heights",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/1944. Number of Visible People in a Queue.cpp/Solution/canSeePersonsCount(vector<int>&)/heights",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "heights_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./32/1944. Number of Visible People in a Queue.cpp/Solution/canSeePersonsCount(vector<int>&)/heights/element #0",
                                            "correspondingType": "int",
                                            "value": "-134325474"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "heights_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./32/1944. Number of Visible People in a Queue.cpp/Solution/canSeePersonsCount(vector<int>&)/heights/element #1",
                                            "correspondingType": "int",
                                            "value": "-142845134"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": "./32/1944. Number of Visible People in a Queue.cpp/Solution/canSeePersonsCount(vector<int>&)/RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_canSeePersonsCount_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_canSeePersonsCount_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1944. Number of Visible People in a Queue.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> heights;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode heights */\nint heights_element0=-134325474;\nheights.push_back(heights_element0);\nint heights_element1=-142845134;\nheights.push_back(heights_element1);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_canSeePersonsCount_vector_int_random_2\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->canSeePersonsCount(heights);\nAKA_fCall++;AKA_mark(\"Return from: ./32/1944. Number of Visible People in a Queue.cpp/Solution/canSeePersonsCount(vector<int>&)\");\n\n\nvector<int> EXPECTED_heights;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/1944. Number of Visible People in a Queue.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> heights;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode heights */\nint heights_element0=-134325474;\nheights.push_back(heights_element0);\nint heights_element1=-142845134;\nheights.push_back(heights_element1);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {    public:     vector<int> canSeePersonsCount(vector<int>& heights) {         int n = heights.size();         heights.push_back(1e6);         vector<int> ans(n, 0), right(n, 0);          stack<int> s({n});         for (int i = n - 1; i >= 0; --i) {             while (heights[s.top()] < heights[i]) {                 s.pop();                 ans[i]++;             }             // 可以看到一个比他高的             if (s.top() != n) ans[i]++;             s.push(i);         }         return ans;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/1944. Number of Visible People in a Queue.cpp/Solution/canSeePersonsCount(vector<int>&)"
    },
    {
        "f": [],
        "fm": "string mergeAlternately(string w1, string w2) {         int n = w1.length(), m = w2.length();         string ans;         for (int i = 0; i < min(m, n); i++) {             ans += w1[i];             ans += w2[i];         }         // cout << m << \" \" << n << endl;         if (m > n)             ans += w2.substr(n);         else {             ans += w1.substr(m);             // cout << w1.substr(m) << endl;         }         return ans;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "5685. 交替合并字符串.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/5685. 交替合并字符串.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/5685. 交替合并字符串.cpp/Solution/mergeAlternately(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/5685. 交替合并字符串.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5685. 交替合并字符串.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/5685. 交替合并字符串.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5685. 交替合并字符串.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/5685. 交替合并字符串.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/5685. 交替合并字符串.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "mergeAlternately(string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": "./32/5685. 交替合并字符串.cpp/Solution/mergeAlternately(string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "w1",
                                    "virtual_name": "EXPECTED_w1",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5685. 交替合并字符串.cpp/Solution/mergeAlternately(string,string)/w1",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "w2",
                                    "virtual_name": "EXPECTED_w2",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5685. 交替合并字符串.cpp/Solution/mergeAlternately(string,string)/w2",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/5685. 交替合并字符串.cpp/Solution/mergeAlternately(string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "w1",
                                    "virtual_name": "w1",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5685. 交替合并字符串.cpp/Solution/mergeAlternately(string,string)/w1",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "w1[0]",
                                            "virtual_name": "w1[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./32/5685. 交替合并字符串.cpp/Solution/mergeAlternately(string,string)/w1/w1[0]",
                                            "correspondingType": "char",
                                            "value": "-38"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "w2",
                                    "virtual_name": "w2",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5685. 交替合并字符串.cpp/Solution/mergeAlternately(string,string)/w2",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "w2[0]",
                                            "virtual_name": "w2[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./32/5685. 交替合并字符串.cpp/Solution/mergeAlternately(string,string)/w2/w2[0]",
                                            "correspondingType": "char",
                                            "value": "7"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5685. 交替合并字符串.cpp/Solution/mergeAlternately(string,string)/RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_mergeAlternately_string_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_mergeAlternately_string_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5685. 交替合并字符串.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName72230 = new char[2];akaRandomName72230[0] = -38;akaRandomName72230[1] = '\\0';string w1=akaRandomName72230;\nchar* akaRandomName897867 = new char[2];akaRandomName897867[0] = 7;akaRandomName897867[1] = '\\0';string w2=akaRandomName897867;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode w1 */\n/* NormalStringDataNode w2 */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_mergeAlternately_string_string_random_1\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->mergeAlternately(w1,w2);\nAKA_fCall++;AKA_mark(\"Return from: ./32/5685. 交替合并字符串.cpp/Solution/mergeAlternately(string,string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5685. 交替合并字符串.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName608940 = new char[2];akaRandomName608940[0] = -38;akaRandomName608940[1] = '\\0';string w1=akaRandomName608940;\nchar* akaRandomName242171 = new char[2];akaRandomName242171[0] = 7;akaRandomName242171[1] = '\\0';string w2=akaRandomName242171;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode w1 */\n/* NormalStringDataNode w2 */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {    public:     string mergeAlternately(string w1, string w2) {         int n = w1.length(), m = w2.length();         string ans;         for (int i = 0; i < min(m, n); i++) {             ans += w1[i];             ans += w2[i];         }         // cout << m << \" \" << n << endl;         if (m > n)             ans += w2.substr(n);         else {             ans += w1.substr(m);             // cout << w1.substr(m) << endl;         }         return ans;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/5685. 交替合并字符串.cpp/Solution/mergeAlternately(string,string)"
    },
    {
        "f": [],
        "fm": "int getVal(string s) {         int ans = 0;         for (auto ch : s) {             ans = ans * 10 + ch - 'a';         }         return ans;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "5772. Check if Word Equals Summation of Two Words.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/5772. Check if Word Equals Summation of Two Words.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/getVal(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "getVal(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/getVal(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/getVal(string)/s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/getVal(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/getVal(string)/s",
                                    "correspondingType": "string",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/getVal(string)/s/s[0]",
                                            "correspondingType": "char",
                                            "value": "-106"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/getVal(string)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_getVal_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_getVal_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5772. Check if Word Equals Summation of Two Words.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName1696 = new char[2];akaRandomName1696[0] = -106;akaRandomName1696[1] = '\\0';string s=akaRandomName1696;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_getVal_string_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->getVal(s);\nAKA_fCall++;AKA_mark(\"Return from: ./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/getVal(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5772. Check if Word Equals Summation of Two Words.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName836222 = new char[2];akaRandomName836222[0] = -106;akaRandomName836222[1] = '\\0';string s=akaRandomName836222;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {    public:     int getVal(string s) {         int ans = 0;         for (auto ch : s) {             ans = ans * 10 + ch - 'a';         }         return ans;     }     bool isSumEqual(string firstWord, string secondWord, string targetWord) {         return getVal(firstWord) + getVal(secondWord) == getVal(targetWord);     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/getVal(string)"
    },
    {
        "f": [],
        "fm": "bool isSumEqual(string firstWord, string secondWord, string targetWord) {         return getVal(firstWord) + getVal(secondWord) == getVal(targetWord);     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "5772. Check if Word Equals Summation of Two Words.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/5772. Check if Word Equals Summation of Two Words.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isSumEqual(string,string,string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "targetWord",
                                    "virtual_name": "EXPECTED_targetWord",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)/targetWord",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "firstWord",
                                    "virtual_name": "EXPECTED_firstWord",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)/firstWord",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "secondWord",
                                    "virtual_name": "EXPECTED_secondWord",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)/secondWord",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "firstWord",
                                    "virtual_name": "firstWord",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)/firstWord",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "firstWord[0]",
                                            "virtual_name": "firstWord[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)/firstWord/firstWord[0]",
                                            "correspondingType": "char",
                                            "value": "-20"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "secondWord",
                                    "virtual_name": "secondWord",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)/secondWord",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "secondWord[0]",
                                            "virtual_name": "secondWord[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)/secondWord/secondWord[0]",
                                            "correspondingType": "char",
                                            "value": "-81"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "targetWord",
                                    "virtual_name": "targetWord",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)/targetWord",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "targetWord[0]",
                                            "virtual_name": "targetWord[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)/targetWord/targetWord[0]",
                                            "correspondingType": "char",
                                            "value": "-21"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": "./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)/RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isSumEqual_string_string_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_isSumEqual_string_string_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5772. Check if Word Equals Summation of Two Words.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName108865 = new char[2];akaRandomName108865[0] = -20;akaRandomName108865[1] = '\\0';string firstWord=akaRandomName108865;\nchar* akaRandomName338064 = new char[2];akaRandomName338064[0] = -81;akaRandomName338064[1] = '\\0';string secondWord=akaRandomName338064;\nchar* akaRandomName806501 = new char[2];akaRandomName806501[0] = -21;akaRandomName806501[1] = '\\0';string targetWord=akaRandomName806501;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode firstWord */\n/* NormalStringDataNode secondWord */\n/* NormalStringDataNode targetWord */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isSumEqual_string_string_string_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isSumEqual(firstWord,secondWord,targetWord);\nAKA_fCall++;AKA_mark(\"Return from: ./32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5772. Check if Word Equals Summation of Two Words.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName150357 = new char[2];akaRandomName150357[0] = -20;akaRandomName150357[1] = '\\0';string firstWord=akaRandomName150357;\nchar* akaRandomName917129 = new char[2];akaRandomName917129[0] = -81;akaRandomName917129[1] = '\\0';string secondWord=akaRandomName917129;\nchar* akaRandomName576668 = new char[2];akaRandomName576668[0] = -21;akaRandomName576668[1] = '\\0';string targetWord=akaRandomName576668;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode firstWord */\n/* NormalStringDataNode secondWord */\n/* NormalStringDataNode targetWord */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {    public:     int getVal(string s) {         int ans = 0;         for (auto ch : s) {             ans = ans * 10 + ch - 'a';         }         return ans;     }     bool isSumEqual(string firstWord, string secondWord, string targetWord) {         return getVal(firstWord) + getVal(secondWord) == getVal(targetWord);     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/5772. Check if Word Equals Summation of Two Words.cpp/Solution/isSumEqual(string,string,string)"
    },
    {
        "f": [],
        "fm": "string maxValue(string n, int x) {         int i = 0;         if (n[0] == '-') {             i = 1;             while (i < n.length() && n[i] - '0' <= x) i++;         } else {             while (i < n.length() && n[i] - '0' >= x) i++;         }         // cout << i << endl;         n.insert(i, to_string(x));         return n;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "5773. Maximum Value after Insertion.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/5773. Maximum Value after Insertion.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/5773. Maximum Value after Insertion.cpp/Solution/maxValue(string,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/5773. Maximum Value after Insertion.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5773. Maximum Value after Insertion.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/5773. Maximum Value after Insertion.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5773. Maximum Value after Insertion.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/5773. Maximum Value after Insertion.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/5773. Maximum Value after Insertion.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "maxValue(string,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "string",
                            "realType": "string",
                            "functionNode": "./32/5773. Maximum Value after Insertion.cpp/Solution/maxValue(string,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "n",
                                    "virtual_name": "EXPECTED_n",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5773. Maximum Value after Insertion.cpp/Solution/maxValue(string,int)/n",
                                    "correspondingType": "string",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "EXPECTED_x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5773. Maximum Value after Insertion.cpp/Solution/maxValue(string,int)/x",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/5773. Maximum Value after Insertion.cpp/Solution/maxValue(string,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "n",
                                    "virtual_name": "n",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5773. Maximum Value after Insertion.cpp/Solution/maxValue(string,int)/n",
                                    "correspondingType": "string",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "n[0]",
                                            "virtual_name": "n[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": "./32/5773. Maximum Value after Insertion.cpp/Solution/maxValue(string,int)/n/n[0]",
                                            "correspondingType": "char",
                                            "value": "95"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5773. Maximum Value after Insertion.cpp/Solution/maxValue(string,int)/x",
                                    "correspondingType": "int",
                                    "value": "1"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": "./32/5773. Maximum Value after Insertion.cpp/Solution/maxValue(string,int)/RETURN",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_maxValue_string_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_maxValue_string_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5773. Maximum Value after Insertion.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName936541 = new char[2];akaRandomName936541[0] = 95;akaRandomName936541[1] = '\\0';string n=akaRandomName936541;\n\n\nint x=1;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode n */\n/* NormalNumberDataNode x */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxValue_string_int_random_2\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxValue(n,x);\nAKA_fCall++;AKA_mark(\"Return from: ./32/5773. Maximum Value after Insertion.cpp/Solution/maxValue(string,int)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5773. Maximum Value after Insertion.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName104666 = new char[2];akaRandomName104666[0] = 95;akaRandomName104666[1] = '\\0';string n=akaRandomName104666;\n\n\nint x=1;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode n */\n/* NormalNumberDataNode x */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {    public:     string maxValue(string n, int x) {         int i = 0;         if (n[0] == '-') {             i = 1;             while (i < n.length() && n[i] - '0' <= x) i++;         } else {             while (i < n.length() && n[i] - '0' >= x) i++;         }         // cout << i << endl;         n.insert(i, to_string(x));         return n;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/5773. Maximum Value after Insertion.cpp/Solution/maxValue(string,int)"
    },
    {
        "f": [
            "const double eps = 1e-8;"
        ],
        "fm": "int minSkips(vector<int>& dist, int speed, int hoursBefore) {         int n = dist.size();         vector<vector<double>> f(n + 1, vector<double>(n + 1, 1e10));         f[0][0] = 0;         for (int i = 1; i <= n; i++) {             for (int j = 0; j <= i; j++) {                 double t = (double)dist[i - 1] / speed;                 f[i][j] = ceil(f[i - 1][j] + t - eps);                 if (j > 0)                     f[i][j] = min(                         f[i][j],                         f[i - 1][j - 1] + t);             }         }         for (int j = 0; j <= n; j++) {             if (f[n][j] <= hoursBefore) return j;         }         return -1;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "5775. Minimum Skips to Arrive at Meeting On Time.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minSkips(vector<int>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "speed",
                                    "virtual_name": "EXPECTED_speed",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/speed",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "dist",
                                    "virtual_name": "EXPECTED_dist",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/dist",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "hoursBefore",
                                    "virtual_name": "EXPECTED_hoursBefore",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/hoursBefore",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "dist",
                                    "virtual_name": "dist",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/dist",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "dist_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/dist/element #0",
                                            "correspondingType": "int",
                                            "value": "828703940"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "dist_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/dist/element #1",
                                            "correspondingType": "int",
                                            "value": "-2116252741"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "speed",
                                    "virtual_name": "speed",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/speed",
                                    "correspondingType": "int",
                                    "value": "-1398828732"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "hoursBefore",
                                    "virtual_name": "hoursBefore",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/hoursBefore",
                                    "correspondingType": "int",
                                    "value": "-937765334"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minSkips_vector_int_int_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_minSkips_vector_int_int_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5775. Minimum Skips to Arrive at Meeting On Time.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> dist;\n\n\nint speed=-1398828732;\n\n\nint hoursBefore=-937765334;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode dist */\nint dist_element0=828703940;\ndist.push_back(dist_element0);\nint dist_element1=-2116252741;\ndist.push_back(dist_element1);\n/* NormalNumberDataNode speed */\n/* NormalNumberDataNode hoursBefore */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minSkips_vector_int_int_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minSkips(dist,speed,hoursBefore);\nAKA_fCall++;AKA_mark(\"Return from: ./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)\");\n\n\nvector<int> EXPECTED_dist;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5775. Minimum Skips to Arrive at Meeting On Time.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> dist;\n\n\nint speed=-1398828732;\n\n\nint hoursBefore=-937765334;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode dist */\nint dist_element0=828703940;\ndist.push_back(dist_element0);\nint dist_element1=-2116252741;\ndist.push_back(dist_element1);\n/* NormalNumberDataNode speed */\n/* NormalNumberDataNode hoursBefore */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "5775. Minimum Skips to Arrive at Meeting On Time.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minSkips(vector<int>&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "speed",
                                    "virtual_name": "EXPECTED_speed",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/speed",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "hoursBefore",
                                    "virtual_name": "EXPECTED_hoursBefore",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/hoursBefore",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "dist",
                                    "virtual_name": "EXPECTED_dist",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/dist",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "dist",
                                    "virtual_name": "dist",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/dist",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "dist_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/dist/element #0",
                                            "correspondingType": "int",
                                            "value": "-69640122"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "speed",
                                    "virtual_name": "speed",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/speed",
                                    "correspondingType": "int",
                                    "value": "1781465904"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "hoursBefore",
                                    "virtual_name": "hoursBefore",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/hoursBefore",
                                    "correspondingType": "int",
                                    "value": "705466422"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minSkips_vector_int_int_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_minSkips_vector_int_int_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5775. Minimum Skips to Arrive at Meeting On Time.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> dist;\n\n\nint speed=1781465904;\n\n\nint hoursBefore=705466422;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode dist */\nint dist_element0=-69640122;\ndist.push_back(dist_element0);\n/* NormalNumberDataNode speed */\n/* NormalNumberDataNode hoursBefore */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minSkips_vector_int_int_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minSkips(dist,speed,hoursBefore);\nAKA_fCall++;AKA_mark(\"Return from: ./32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)\");\n\n\nvector<int> EXPECTED_dist;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5775. Minimum Skips to Arrive at Meeting On Time.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> dist;\n\n\nint speed=1781465904;\n\n\nint hoursBefore=705466422;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode dist */\nint dist_element0=-69640122;\ndist.push_back(dist_element0);\n/* NormalNumberDataNode speed */\n/* NormalNumberDataNode hoursBefore */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {    public:     int minSkips(vector<int>& dist, int speed, int hoursBefore) {         int n = dist.size();         vector<vector<double>> f(n + 1, vector<double>(n + 1, 1e10));         f[0][0] = 0;         for (int i = 1; i <= n; i++) {             for (int j = 0; j <= i; j++) {                 double t = (double)dist[i - 1] / speed;                 f[i][j] = ceil(f[i - 1][j] + t - eps);                 if (j > 0)                     f[i][j] = min(                         f[i][j],                         f[i - 1][j - 1] + t);             }         }         for (int j = 0; j <= n; j++) {             if (f[n][j] <= hoursBefore) return j;         }         return -1;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/5775. Minimum Skips to Arrive at Meeting On Time.cpp/Solution/minSkips(vector<int>&,int,int)"
    },
    {
        "f": [],
        "fm": "bool findRotation(vector<vector<int>>& mat, vector<vector<int>>& target) {         int n = mat.size();         vector<vector<int>> tmp = mat;         for (int k = 0; k < 5; k++) {             for (int i = 0; i < n; i++) {                 for (int j = 0; j < n; j++) {                     tmp[j][n - 1 - i] = mat[i][j];                 }             }             mat = tmp;              bool ok = true;             for (int i = 0; i < n; i++) {                 for (int j = 0; j < n; j++) {                     if (mat[i][j] != target[i][j]) {                         ok = false;                         break;                     }                 }             }             if (ok) return true;         }         return false;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "findRotation(vector<vector<int>>&,vector<vector<int>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "mat",
                                    "virtual_name": "EXPECTED_mat",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)/mat",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "target",
                                    "virtual_name": "EXPECTED_target",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)/target",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "mat",
                                    "virtual_name": "mat",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)/mat",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "mat_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)/mat/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "mat_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)/mat/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "1101740140"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "target",
                                    "virtual_name": "target",
                                    "dataType": "vector<vector<int>>",
                                    "realType": "vector<vector<int>>&",
                                    "external": false,
                                    "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)/target",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<int>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "target_element0",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)/target/element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "target_element0_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)/target/element #0/element #0",
                                                    "correspondingType": "int",
                                                    "value": "2124393897"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "target_element1",
                                            "dataType": "vector<int>",
                                            "realType": "vector<int>",
                                            "external": false,
                                            "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)/target/element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "int",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "target_element1_element0",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)/target/element #1/element #0",
                                                    "correspondingType": "int",
                                                    "value": "-538453017"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "target_element1_element1",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)/target/element #1/element #1",
                                                    "correspondingType": "int",
                                                    "value": "687167232"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": "./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)/RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_findRotation_vector_vector_int_vector_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_findRotation_vector_vector_int_vector_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> mat;\nvector<vector<int>> target;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode mat */\nvector<int> mat_element0;\nint mat_element0_element0=1101740140;\nmat_element0.push_back(mat_element0_element0);\nmat.push_back(mat_element0);\n/* VectorDataNode target */\nvector<int> target_element0;\nint target_element0_element0=2124393897;\ntarget_element0.push_back(target_element0_element0);\ntarget.push_back(target_element0);\nvector<int> target_element1;\nint target_element1_element0=-538453017;\ntarget_element1.push_back(target_element1_element0);\nint target_element1_element1=687167232;\ntarget_element1.push_back(target_element1_element1);\ntarget.push_back(target_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findRotation_vector_vector_int_vector_vector_int_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findRotation(mat,target);\nAKA_fCall++;AKA_mark(\"Return from: ./32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_mat;\n\nvector<vector<int>> EXPECTED_target;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> mat;\nvector<vector<int>> target;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode mat */\nvector<int> mat_element0;\nint mat_element0_element0=1101740140;\nmat_element0.push_back(mat_element0_element0);\nmat.push_back(mat_element0);\n/* VectorDataNode target */\nvector<int> target_element0;\nint target_element0_element0=2124393897;\ntarget_element0.push_back(target_element0_element0);\ntarget.push_back(target_element0);\nvector<int> target_element1;\nint target_element1_element0=-538453017;\ntarget_element1.push_back(target_element1_element0);\nint target_element1_element1=687167232;\ntarget_element1.push_back(target_element1_element1);\ntarget.push_back(target_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {    public:     bool findRotation(vector<vector<int>>& mat, vector<vector<int>>& target) {         int n = mat.size();         vector<vector<int>> tmp = mat;         for (int k = 0; k < 5; k++) {             for (int i = 0; i < n; i++) {                 for (int j = 0; j < n; j++) {                     tmp[j][n - 1 - i] = mat[i][j];                 }             }             mat = tmp;              bool ok = true;             for (int i = 0; i < n; i++) {                 for (int j = 0; j < n; j++) {                     if (mat[i][j] != target[i][j]) {                         ok = false;                         break;                     }                 }             }             if (ok) return true;         }         return false;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/5776. Determine Whether Matrix Can Be Obtained By Rotation.cpp/Solution/findRotation(vector<vector<int>>&,vector<vector<int>>&)"
    },
    {
        "f": [],
        "fm": "int reductionOperations(vector<int>& nums) {         sort(nums.begin(), nums.end());         int ans = 0;         for (int i = 0, j, g = 0; i < nums.size(); g++) {             j = i;             while (j < nums.size() && nums[i] == nums[j]) j++;             ans += g * (j - i);             i = j;         }         return ans;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "5777. Reduction Operations to Make the Array Elements Equal.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/reductionOperations(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/AKA_INSTANCE___Solution",
                                    "correspondingType": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/AKA_INSTANCE___Solution",
                                            "correspondingType": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "/Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "reductionOperations(vector<int>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/reductionOperations(vector<int>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "EXPECTED_nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/reductionOperations(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/reductionOperations(vector<int>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "nums",
                                    "virtual_name": "nums",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>&",
                                    "external": false,
                                    "correspondingVar": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/reductionOperations(vector<int>&)/nums",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #0",
                                            "virtual_name": "nums_element0",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/reductionOperations(vector<int>&)/nums/element #0",
                                            "correspondingType": "int",
                                            "value": "-1058941907"
                                        },
                                        {
                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                            "name": "element #1",
                                            "virtual_name": "nums_element1",
                                            "dataType": "int",
                                            "realType": "int",
                                            "external": false,
                                            "correspondingVar": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/reductionOperations(vector<int>&)/nums/element #1",
                                            "correspondingType": "int",
                                            "value": "274781155"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": "./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/reductionOperations(vector<int>&)/RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_reductionOperations_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_reductionOperations_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5777. Reduction Operations to Make the Array Elements Equal.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1058941907;\nnums.push_back(nums_element0);\nint nums_element1=274781155;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reductionOperations_vector_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->reductionOperations(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/reductionOperations(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/5777. Reduction Operations to Make the Array Elements Equal.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1058941907;\nnums.push_back(nums_element0);\nint nums_element1=274781155;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {    public:     int reductionOperations(vector<int>& nums) {         sort(nums.begin(), nums.end());         int ans = 0;         for (int i = 0, j, g = 0; i < nums.size(); g++) {             j = i;             while (j < nums.size() && nums[i] == nums[j]) j++;             ans += g * (j - i);             i = j;         }         return ans;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/2025.03.08/32/5777. Reduction Operations to Make the Array Elements Equal.cpp/Solution/reductionOperations(vector<int>&)"
    }
]
[
    {
        "f": [],
        "fm": "int struct_test0(SinhVien sv){\r \tif (sv.age > 0) \r \tif (sv.name[2] == 'a')\r \t\treturn 0;\r \telse\r \t\treturn 1;\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_struct_test0_SinhVien_random_2(void) {\n{\nAKA_test_case_name=\"struct_test0_SinhVien_random_2\";\n\n// set up\n;\n\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode sv */\n/* SubStructDataNode sv */\n/* ConstructorDataNode SinhVien() */\nAKA_mark(\"Calling: \\\\SinhVien()|ROOT\\\\struct_test.cpp\\\\struct_test0(SinhVien)\\\\sv\\\\sv\\\\SinhVien()\");AKA_fCall++;::SinhVien sv = ::SinhVien();\n/* NormalNumberDataNode age */\nsv.age=1711264634;\n/* PointerCharacterDataNode name */\nchar AKA_ARRAY_INIT_sv_DOT_name[2];\nchar AKA_ARRAY_INIT_sv_DOT_name_0=-5;\nAKA_ARRAY_INIT_sv_DOT_name[0] = AKA_ARRAY_INIT_sv_DOT_name_0;\nchar AKA_ARRAY_INIT_sv_DOT_name_1=0;\nAKA_ARRAY_INIT_sv_DOT_name[1] = AKA_ARRAY_INIT_sv_DOT_name_1;\nsv.name = AKA_ARRAY_INIT_sv_DOT_name;\n/* PointerStructureDataNode other */\nsv.other;\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test struct_test0_SinhVien_random_2\");int AKA_ACTUAL_OUTPUT=struct_test0(sv);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\CombinedStaticAndDynamicGen\\\\struct_test.cpp\\\\struct_test0(SinhVien)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode sv */\n/* SubStructDataNode sv */\n/* ConstructorDataNode SinhVien() */\nAKA_mark(\"Calling: \\\\SinhVien()|ROOT\\\\struct_test.cpp\\\\struct_test0(SinhVien)\\\\sv\\\\sv\\\\SinhVien()\");AKA_fCall++;::SinhVien sv = ::SinhVien();\n/* NormalNumberDataNode age */\nsv.age=1711264634;\n/* PointerCharacterDataNode name */\nchar AKA_ARRAY_INIT_sv_DOT_name[2];\nchar AKA_ARRAY_INIT_sv_DOT_name_0=-5;\nAKA_ARRAY_INIT_sv_DOT_name[0] = AKA_ARRAY_INIT_sv_DOT_name_0;\nchar AKA_ARRAY_INIT_sv_DOT_name_1=0;\nAKA_ARRAY_INIT_sv_DOT_name[1] = AKA_ARRAY_INIT_sv_DOT_name_1;\nsv.name = AKA_ARRAY_INIT_sv_DOT_name;\n/* PointerStructureDataNode other */\nsv.other;\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_struct_test0_SinhVien_directed_0(void) {\n{\nAKA_test_case_name=\"struct_test0_SinhVien_directed_0\";\n\n// set up\n;\n\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode sv */\n/* SubStructDataNode sv */\n/* ConstructorDataNode SinhVien() */\nAKA_mark(\"Calling: \\\\SinhVien()|ROOT\\\\struct_test.cpp\\\\struct_test0(SinhVien)\\\\sv\\\\sv\\\\SinhVien()\");AKA_fCall++;::SinhVien sv = ::SinhVien();\n/* NormalNumberDataNode age */\nsv.age=1;\n/* PointerCharacterDataNode name */\nchar AKA_ARRAY_INIT_sv_DOT_name[2];\nchar AKA_ARRAY_INIT_sv_DOT_name_0=51;\nAKA_ARRAY_INIT_sv_DOT_name[0] = AKA_ARRAY_INIT_sv_DOT_name_0;\nchar AKA_ARRAY_INIT_sv_DOT_name_1=0;\nAKA_ARRAY_INIT_sv_DOT_name[1] = AKA_ARRAY_INIT_sv_DOT_name_1;\nsv.name = AKA_ARRAY_INIT_sv_DOT_name;\n/* PointerStructureDataNode other */\nsv.other;\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test struct_test0_SinhVien_directed_0\");int AKA_ACTUAL_OUTPUT=struct_test0(sv);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\CombinedStaticAndDynamicGen\\\\struct_test.cpp\\\\struct_test0(SinhVien)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode sv */\n/* SubStructDataNode sv */\n/* ConstructorDataNode SinhVien() */\nAKA_mark(\"Calling: \\\\SinhVien()|ROOT\\\\struct_test.cpp\\\\struct_test0(SinhVien)\\\\sv\\\\sv\\\\SinhVien()\");AKA_fCall++;::SinhVien sv = ::SinhVien();\n/* NormalNumberDataNode age */\nsv.age=1;\n/* PointerCharacterDataNode name */\nchar AKA_ARRAY_INIT_sv_DOT_name[2];\nchar AKA_ARRAY_INIT_sv_DOT_name_0=51;\nAKA_ARRAY_INIT_sv_DOT_name[0] = AKA_ARRAY_INIT_sv_DOT_name_0;\nchar AKA_ARRAY_INIT_sv_DOT_name_1=0;\nAKA_ARRAY_INIT_sv_DOT_name[1] = AKA_ARRAY_INIT_sv_DOT_name_1;\nsv.name = AKA_ARRAY_INIT_sv_DOT_name;\n/* PointerStructureDataNode other */\nsv.other;\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {},
                "td": "void AKA_TEST_struct_test0_SinhVien_random_4(void) {\n{\nAKA_test_case_name=\"struct_test0_SinhVien_random_4\";\n\n// set up\n;\n\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode sv */\n/* SubStructDataNode sv */\n/* ConstructorDataNode SinhVien() */\nAKA_mark(\"Calling: \\\\SinhVien()|ROOT\\\\struct_test.cpp\\\\struct_test0(SinhVien)\\\\sv\\\\sv\\\\SinhVien()\");AKA_fCall++;::SinhVien sv = ::SinhVien();\n/* NormalNumberDataNode age */\nsv.age=-1143832768;\n/* PointerCharacterDataNode name */\nchar AKA_ARRAY_INIT_sv_DOT_name[2];\nchar AKA_ARRAY_INIT_sv_DOT_name_0=-20;\nAKA_ARRAY_INIT_sv_DOT_name[0] = AKA_ARRAY_INIT_sv_DOT_name_0;\nchar AKA_ARRAY_INIT_sv_DOT_name_1=0;\nAKA_ARRAY_INIT_sv_DOT_name[1] = AKA_ARRAY_INIT_sv_DOT_name_1;\nsv.name = AKA_ARRAY_INIT_sv_DOT_name;\n/* PointerStructureDataNode other */\nsv.other;\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test struct_test0_SinhVien_random_4\");int AKA_ACTUAL_OUTPUT=struct_test0(sv);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\CombinedStaticAndDynamicGen\\\\struct_test.cpp\\\\struct_test0(SinhVien)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode sv */\n/* SubStructDataNode sv */\n/* ConstructorDataNode SinhVien() */\nAKA_mark(\"Calling: \\\\SinhVien()|ROOT\\\\struct_test.cpp\\\\struct_test0(SinhVien)\\\\sv\\\\sv\\\\SinhVien()\");AKA_fCall++;::SinhVien sv = ::SinhVien();\n/* NormalNumberDataNode age */\nsv.age=-1143832768;\n/* PointerCharacterDataNode name */\nchar AKA_ARRAY_INIT_sv_DOT_name[2];\nchar AKA_ARRAY_INIT_sv_DOT_name_0=-20;\nAKA_ARRAY_INIT_sv_DOT_name[0] = AKA_ARRAY_INIT_sv_DOT_name_0;\nchar AKA_ARRAY_INIT_sv_DOT_name_1=0;\nAKA_ARRAY_INIT_sv_DOT_name[1] = AKA_ARRAY_INIT_sv_DOT_name_1;\nsv.name = AKA_ARRAY_INIT_sv_DOT_name;\n/* PointerStructureDataNode other */\nsv.other;\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\CombinedStaticAndDynamicGen\\struct_test.cpp\\struct_test0(SinhVien)"
    },
    {
        "f": [],
        "fm": "int struct_test1(SinhVien sv){\r \tchar* s = sv.other[0].eeee;\r \t\r \tif (sv.age > 0){\r \t\tif (s[0] == 'a')\r \t\t\treturn 0;\r \t\telse\r \t\t\treturn 1;\r \t}else{\r \t\treturn 2;\t\t\r \t}\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_struct_test1_SinhVien_directed_0(void) {\n{\nAKA_test_case_name=\"struct_test1_SinhVien_directed_0\";\n\n// set up\n;\n\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode sv */\n/* SubStructDataNode sv */\n/* ConstructorDataNode SinhVien() */\nAKA_mark(\"Calling: \\\\SinhVien()|ROOT\\\\struct_test.cpp\\\\struct_test1(SinhVien)\\\\sv\\\\sv\\\\SinhVien()\");AKA_fCall++;::SinhVien sv = ::SinhVien();\n/* NormalNumberDataNode age */\nsv.age=1;\n/* PointerCharacterDataNode name */\nsv.name;\n/* PointerStructureDataNode other */\nstd::vector<Others*> AKA_VECTOR_INIT_sv_DOT_other;\n/* SubStructDataNode other */\n/* ConstructorDataNode Others() */\nAKA_mark(\"Calling: \\\\Others()|ROOT\\\\struct_test.cpp\\\\struct_test1(SinhVien)\\\\sv\\\\sv\\\\other\\\\other[0]\\\\other\\\\Others()\");AKA_fCall++;auto AKA_VECTOR_INIT_sv_DOT_other_0 = new ::Others();\nAKA_VECTOR_INIT_sv_DOT_other.push_back(AKA_VECTOR_INIT_sv_DOT_other_0);\nsv.other = AKA_VECTOR_INIT_sv_DOT_other[0];\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test struct_test1_SinhVien_directed_0\");int AKA_ACTUAL_OUTPUT=struct_test1(sv);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\CombinedStaticAndDynamicGen\\\\struct_test.cpp\\\\struct_test1(SinhVien)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode sv */\n/* SubStructDataNode sv */\n/* ConstructorDataNode SinhVien() */\nAKA_mark(\"Calling: \\\\SinhVien()|ROOT\\\\struct_test.cpp\\\\struct_test0(SinhVien)\\\\sv\\\\sv\\\\SinhVien()\");AKA_fCall++;::SinhVien sv = ::SinhVien();\n/* NormalNumberDataNode age */\nsv.age=1711264634;\n/* PointerCharacterDataNode name */\nchar AKA_ARRAY_INIT_sv_DOT_name[2];\nchar AKA_ARRAY_INIT_sv_DOT_name_0=-5;\nAKA_ARRAY_INIT_sv_DOT_name[0] = AKA_ARRAY_INIT_sv_DOT_name_0;\nchar AKA_ARRAY_INIT_sv_DOT_name_1=0;\nAKA_ARRAY_INIT_sv_DOT_name[1] = AKA_ARRAY_INIT_sv_DOT_name_1;\nsv.name = AKA_ARRAY_INIT_sv_DOT_name;\n/* PointerStructureDataNode other */\nsv.other;\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_struct_test1_SinhVien_random_3(void) {\n{\nAKA_test_case_name=\"struct_test1_SinhVien_random_3\";\n\n// set up\n;\n\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode sv */\n/* SubStructDataNode sv */\n/* ConstructorDataNode SinhVien() */\nAKA_mark(\"Calling: \\\\SinhVien()|ROOT\\\\struct_test.cpp\\\\struct_test1(SinhVien)\\\\sv\\\\sv\\\\SinhVien()\");AKA_fCall++;::SinhVien sv = ::SinhVien();\n/* NormalNumberDataNode age */\nsv.age=1909294090;\n/* PointerCharacterDataNode name */\nsv.name;\n/* PointerStructureDataNode other */\nstd::vector<Others*> AKA_VECTOR_INIT_sv_DOT_other;\n/* SubStructDataNode other */\n/* ConstructorDataNode Others() */\nAKA_mark(\"Calling: \\\\Others()|ROOT\\\\struct_test.cpp\\\\struct_test1(SinhVien)\\\\sv\\\\sv\\\\other\\\\other[0]\\\\other\\\\Others()\");AKA_fCall++;auto AKA_VECTOR_INIT_sv_DOT_other_0 = new ::Others();\nAKA_VECTOR_INIT_sv_DOT_other.push_back(AKA_VECTOR_INIT_sv_DOT_other_0);\n/* SubStructDataNode other */\n/* ConstructorDataNode Others() */\nAKA_mark(\"Calling: \\\\Others()|ROOT\\\\struct_test.cpp\\\\struct_test1(SinhVien)\\\\sv\\\\sv\\\\other\\\\other[1]\\\\other\\\\Others()\");AKA_fCall++;auto AKA_VECTOR_INIT_sv_DOT_other_1 = new ::Others();\nAKA_VECTOR_INIT_sv_DOT_other.push_back(AKA_VECTOR_INIT_sv_DOT_other_1);\nsv.other = AKA_VECTOR_INIT_sv_DOT_other[0];\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test struct_test1_SinhVien_random_3\");int AKA_ACTUAL_OUTPUT=struct_test1(sv);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\CombinedStaticAndDynamicGen\\\\struct_test.cpp\\\\struct_test1(SinhVien)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode sv */\n/* SubStructDataNode sv */\n/* ConstructorDataNode SinhVien() */\nAKA_mark(\"Calling: \\\\SinhVien()|ROOT\\\\struct_test.cpp\\\\struct_test0(SinhVien)\\\\sv\\\\sv\\\\SinhVien()\");AKA_fCall++;::SinhVien sv = ::SinhVien();\n/* NormalNumberDataNode age */\nsv.age=1;\n/* PointerCharacterDataNode name */\nchar AKA_ARRAY_INIT_sv_DOT_name[2];\nchar AKA_ARRAY_INIT_sv_DOT_name_0=51;\nAKA_ARRAY_INIT_sv_DOT_name[0] = AKA_ARRAY_INIT_sv_DOT_name_0;\nchar AKA_ARRAY_INIT_sv_DOT_name_1=0;\nAKA_ARRAY_INIT_sv_DOT_name[1] = AKA_ARRAY_INIT_sv_DOT_name_1;\nsv.name = AKA_ARRAY_INIT_sv_DOT_name;\n/* PointerStructureDataNode other */\nsv.other;\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {},
                "td": "void AKA_TEST_struct_test1_SinhVien_random_1(void) {\n{\nAKA_test_case_name=\"struct_test1_SinhVien_random_1\";\n\n// set up\n;\n\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode sv */\n/* SubStructDataNode sv */\n/* ConstructorDataNode SinhVien() */\nAKA_mark(\"Calling: \\\\SinhVien()|ROOT\\\\struct_test.cpp\\\\struct_test1(SinhVien)\\\\sv\\\\sv\\\\SinhVien()\");AKA_fCall++;::SinhVien sv = ::SinhVien();\n/* NormalNumberDataNode age */\nsv.age=-7461207;\n/* PointerCharacterDataNode name */\nsv.name;\n/* PointerStructureDataNode other */\nstd::vector<Others*> AKA_VECTOR_INIT_sv_DOT_other;\n/* SubStructDataNode other */\n/* ConstructorDataNode Others() */\nAKA_mark(\"Calling: \\\\Others()|ROOT\\\\struct_test.cpp\\\\struct_test1(SinhVien)\\\\sv\\\\sv\\\\other\\\\other[0]\\\\other\\\\Others()\");AKA_fCall++;auto AKA_VECTOR_INIT_sv_DOT_other_0 = new ::Others();\nAKA_VECTOR_INIT_sv_DOT_other.push_back(AKA_VECTOR_INIT_sv_DOT_other_0);\n/* SubStructDataNode other */\n/* ConstructorDataNode Others() */\nAKA_mark(\"Calling: \\\\Others()|ROOT\\\\struct_test.cpp\\\\struct_test1(SinhVien)\\\\sv\\\\sv\\\\other\\\\other[1]\\\\other\\\\Others()\");AKA_fCall++;auto AKA_VECTOR_INIT_sv_DOT_other_1 = new ::Others();\nAKA_VECTOR_INIT_sv_DOT_other.push_back(AKA_VECTOR_INIT_sv_DOT_other_1);\nsv.other = AKA_VECTOR_INIT_sv_DOT_other[0];\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test struct_test1_SinhVien_random_1\");int AKA_ACTUAL_OUTPUT=struct_test1(sv);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\CombinedStaticAndDynamicGen\\\\struct_test.cpp\\\\struct_test1(SinhVien)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode sv */\n/* SubStructDataNode sv */\n/* ConstructorDataNode SinhVien() */\nAKA_mark(\"Calling: \\\\SinhVien()|ROOT\\\\struct_test.cpp\\\\struct_test0(SinhVien)\\\\sv\\\\sv\\\\SinhVien()\");AKA_fCall++;::SinhVien sv = ::SinhVien();\n/* NormalNumberDataNode age */\nsv.age=-1143832768;\n/* PointerCharacterDataNode name */\nchar AKA_ARRAY_INIT_sv_DOT_name[2];\nchar AKA_ARRAY_INIT_sv_DOT_name_0=-20;\nAKA_ARRAY_INIT_sv_DOT_name[0] = AKA_ARRAY_INIT_sv_DOT_name_0;\nchar AKA_ARRAY_INIT_sv_DOT_name_1=0;\nAKA_ARRAY_INIT_sv_DOT_name[1] = AKA_ARRAY_INIT_sv_DOT_name_1;\nsv.name = AKA_ARRAY_INIT_sv_DOT_name;\n/* PointerStructureDataNode other */\nsv.other;\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\CombinedStaticAndDynamicGen\\struct_test.cpp\\struct_test1(SinhVien)"
    }
]
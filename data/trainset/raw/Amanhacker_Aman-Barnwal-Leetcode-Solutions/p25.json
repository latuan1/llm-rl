[
    {
        "f": [],
        "fm": "void dfs(TreeNode* root, TreeNode* par, TreeNode* grandpar, int &sum) {\r         \r         if(root == NULL)                        return;\r         \r         if(grandpar != NULL && int(grandpar->val) % 2 == 0) {\r            sum += (root->val);            \r         }   \r         \r         dfs(root->left, root, par, sum);\r         dfs(root->right, root, par, sum);\r         \r         return;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_dfs_TreeNodemul_TreeNodemul_TreeNodemul_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_dfs_TreeNodemul_TreeNodemul_TreeNodemul_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1254293891;\nAKA_mark(\"Calling: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-1542235521;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1644784621;\nAKA_mark(\"Calling: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1123904019;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-932774588;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=718077097;\nAKA_mark(\"Calling: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode(root0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-1779328975;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1851406642;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-1569081014;\nAKA_mark(\"Calling: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=205364202;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* par;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_grandpar;\n\n\n/* SubStructDataNode grandpar */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\\\\grandpar\\\\AKA_VECTOR_INIT_grandpar_0\\\\grandpar\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_grandpar_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_grandpar_0).val=249555409;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_grandpar_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint grandpar0_left0_x=2040210611;\n/* PointerStructureDataNode left */\nTreeNode* grandpar0_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* grandpar0_left0_right;\nAKA_mark(\"Calling: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\\\\grandpar\\\\AKA_VECTOR_INIT_grandpar_0\\\\grandpar\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_grandpar_0_DOT_left_0 = new ::TreeNode(grandpar0_left0_x,grandpar0_left0_left,grandpar0_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_grandpar_0_DOT_left_0).val=-2095453786;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_grandpar_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_grandpar_0_DOT_left_0).right;\nAKA_VECTOR_INIT_grandpar_0_DOT_left.push_back(AKA_VECTOR_INIT_grandpar_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint grandpar0_left1_x=-1667235134;\n/* PointerStructureDataNode left */\nTreeNode* grandpar0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* grandpar0_left1_right;\nAKA_mark(\"Calling: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\\\\grandpar\\\\AKA_VECTOR_INIT_grandpar_0\\\\grandpar\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_grandpar_0_DOT_left_1 = new ::TreeNode(grandpar0_left1_x,grandpar0_left1_left,grandpar0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_grandpar_0_DOT_left_1).val=1976855395;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_grandpar_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_grandpar_0_DOT_left_1).right;\nAKA_VECTOR_INIT_grandpar_0_DOT_left.push_back(AKA_VECTOR_INIT_grandpar_0_DOT_left_1);\n(*AKA_VECTOR_INIT_grandpar_0).left = AKA_VECTOR_INIT_grandpar_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_grandpar_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint grandpar0_right0_x=-2058823797;\n/* PointerStructureDataNode left */\nTreeNode* grandpar0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* grandpar0_right0_right;\nAKA_mark(\"Calling: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\\\\grandpar\\\\AKA_VECTOR_INIT_grandpar_0\\\\grandpar\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_grandpar_0_DOT_right_0 = new ::TreeNode(grandpar0_right0_x,grandpar0_right0_left,grandpar0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_grandpar_0_DOT_right_0).val=651173961;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_grandpar_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_grandpar_0_DOT_right_0).right;\nAKA_VECTOR_INIT_grandpar_0_DOT_right.push_back(AKA_VECTOR_INIT_grandpar_0_DOT_right_0);\n(*AKA_VECTOR_INIT_grandpar_0).right = AKA_VECTOR_INIT_grandpar_0_DOT_right[0];\n\nAKA_VECTOR_INIT_grandpar.push_back(AKA_VECTOR_INIT_grandpar_0);\n\n\n/* SubStructDataNode grandpar */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint grandpar1_x=-1043511065;\nAKA_mark(\"Calling: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\\\\grandpar\\\\AKA_VECTOR_INIT_grandpar_1\\\\grandpar\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_grandpar_1 = new ::TreeNode(grandpar1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_grandpar_1).val=278608260;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_grandpar_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_grandpar_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\\\\grandpar\\\\AKA_VECTOR_INIT_grandpar_1\\\\grandpar\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_grandpar_1_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_grandpar_1_DOT_right_0).val=-1414661589;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_grandpar_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_grandpar_1_DOT_right_0).right;\nAKA_VECTOR_INIT_grandpar_1_DOT_right.push_back(AKA_VECTOR_INIT_grandpar_1_DOT_right_0);\n(*AKA_VECTOR_INIT_grandpar_1).right = AKA_VECTOR_INIT_grandpar_1_DOT_right[0];\n\nAKA_VECTOR_INIT_grandpar.push_back(AKA_VECTOR_INIT_grandpar_1);\n\nTreeNode* grandpar = AKA_VECTOR_INIT_grandpar[0];\n\n\nint sum=-2056953597;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode par */\n/* PointerStructureDataNode grandpar */\n/* NormalNumberDataNode sum */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_TreeNodemul_TreeNodemul_TreeNodemul_int_random_0\");AKA_INSTANCE___Solution->dfs(root,par,grandpar,sum);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p25\\\\1315-sum-of-nodes-with-even-valued-grandparent\\\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\\\Solution\\\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\13-roman-to-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName462247 = new char[2];akaRandomName462247[0] = 1;akaRandomName462247[1] = '\\0';string s=akaRandomName462247;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     \r     void dfs(TreeNode* root, TreeNode* par, TreeNode* grandpar, int &sum) {\r         \r         if(root == NULL)                        return;\r         \r         if(grandpar != NULL && int(grandpar->val) % 2 == 0) {\r            sum += (root->val);            \r         }   \r         \r         dfs(root->left, root, par, sum);\r         dfs(root->right, root, par, sum);\r         \r         return;\r     }\r     \r     int sumEvenGrandparent(TreeNode* root) {\r     \r         int sum = 0;\r         \r         if(root == NULL)                        return 0;\r         \r         dfs(root, NULL, NULL, sum);\r         \r         \r         return sum;\r     }\r     \r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p25\\1315-sum-of-nodes-with-even-valued-grandparent\\1315-sum-of-nodes-with-even-valued-grandparent.cpp\\Solution\\dfs(TreeNode*,TreeNode*,TreeNode*,int&)"
    },
    {
        "f": [],
        "fm": "bool isNonZero(int n) {\r         \r         while(n > 0) {\r             \r             int rem = n % 10;\r             \r             if(rem == 0)                                 return false;\r             n = n / 10;\r         }\r         \r         \r         return true;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_isNonZero_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_isNonZero_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1317-convert-integer-to-the-sum-of-two-no-zero-integers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=1;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isNonZero_int_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isNonZero(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p25\\\\1317-convert-integer-to-the-sum-of-two-no-zero-integers\\\\1317-convert-integer-to-the-sum-of-two-no-zero-integers.cpp\\\\Solution\\\\isNonZero(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\13-roman-to-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName462247 = new char[2];akaRandomName462247[0] = 1;akaRandomName462247[1] = '\\0';string s=akaRandomName462247;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r \r     bool isNonZero(int n) {\r         \r         while(n > 0) {\r             \r             int rem = n % 10;\r             \r             if(rem == 0)                                 return false;\r             n = n / 10;\r         }\r         \r         \r         return true;\r     }\r     \r     vector<int> getNoZeroIntegers(int n) {\r     \r         vector<int> res;\r         \r         int a, b;\r         \r         for(int i=1; i<=n; i++) {\r             \r             // Assume, a = i\r             a = i;\r             b = n - i;\r             \r             if(isNonZero(a) && isNonZero(b)) {\r                 res.push_back(a);\r                 res.push_back(b);\r                 \r                 return res;\r             }\r         }\r         \r         return res;\r     }\r     \r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p25\\1317-convert-integer-to-the-sum-of-two-no-zero-integers\\1317-convert-integer-to-the-sum-of-two-no-zero-integers.cpp\\Solution\\isNonZero(int)"
    },
    {
        "f": [],
        "fm": "vector<int> getNoZeroIntegers(int n) {\r     \r         vector<int> res;\r         \r         int a, b;\r         \r         for(int i=1; i<=n; i++) {\r             \r             // Assume, a = i\r             a = i;\r             b = n - i;\r             \r             if(isNonZero(a) && isNonZero(b)) {\r                 res.push_back(a);\r                 res.push_back(b);\r                 \r                 return res;\r             }\r         }\r         \r         return res;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_getNoZeroIntegers_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_getNoZeroIntegers_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1317-convert-integer-to-the-sum-of-two-no-zero-integers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=8;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_getNoZeroIntegers_int_random_1\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->getNoZeroIntegers(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p25\\\\1317-convert-integer-to-the-sum-of-two-no-zero-integers\\\\1317-convert-integer-to-the-sum-of-two-no-zero-integers.cpp\\\\Solution\\\\getNoZeroIntegers(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\13-roman-to-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName462247 = new char[2];akaRandomName462247[0] = 1;akaRandomName462247[1] = '\\0';string s=akaRandomName462247;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r \r     bool isNonZero(int n) {\r         \r         while(n > 0) {\r             \r             int rem = n % 10;\r             \r             if(rem == 0)                                 return false;\r             n = n / 10;\r         }\r         \r         \r         return true;\r     }\r     \r     vector<int> getNoZeroIntegers(int n) {\r     \r         vector<int> res;\r         \r         int a, b;\r         \r         for(int i=1; i<=n; i++) {\r             \r             // Assume, a = i\r             a = i;\r             b = n - i;\r             \r             if(isNonZero(a) && isNonZero(b)) {\r                 res.push_back(a);\r                 res.push_back(b);\r                 \r                 return res;\r             }\r         }\r         \r         return res;\r     }\r     \r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p25\\1317-convert-integer-to-the-sum-of-two-no-zero-integers\\1317-convert-integer-to-the-sum-of-two-no-zero-integers.cpp\\Solution\\getNoZeroIntegers(int)"
    },
    {
        "f": [],
        "fm": "int maximum69Number (int n) {\r     \r         string s = to_string(n);\r         int siz = s.length();\r         \r         bool flag = false;\r         \r         int ind;\r         \r         for(int i=0; i<siz; i++) {\r           \r             if(s[i] == '6') {\r                 \r                 s[i] = '9';\r                 ind = i;\r                 \r                 flag = true;\r                 break;\r             }\r         }\r         \r         if(flag == false)                                       return n;\r         \r         // ind is the index which changes from 6 to 9\r         int noZeroes = s.length() - ind - 1;\r         \r         // Add 3 * noZeroes to n\r         int mul = 3;\r         \r         while(noZeroes--)                                        mul *= 10;\r         \r         return n + mul;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_maximum69Number_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_maximum69Number_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1323-maximum-69-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=-945782033;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maximum69Number_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maximum69Number(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p25\\\\1323-maximum-69-number\\\\1323-maximum-69-number.cpp\\\\Solution\\\\maximum69Number(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\13-roman-to-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName462247 = new char[2];akaRandomName462247[0] = 1;akaRandomName462247[1] = '\\0';string s=akaRandomName462247;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_maximum69Number_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_maximum69Number_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1323-maximum-69-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=1752876357;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maximum69Number_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maximum69Number(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p25\\\\1323-maximum-69-number\\\\1323-maximum-69-number.cpp\\\\Solution\\\\maximum69Number(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1302-deepest-leaves-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p24\\\\1302-deepest-leaves-sum\\\\1302-deepest-leaves-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1302-deepest-leaves-sum.cpp\\\\bfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint res=194216280;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode res */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     \r     int maximum69Number (int n) {\r     \r         string s = to_string(n);\r         int siz = s.length();\r         \r         bool flag = false;\r         \r         int ind;\r         \r         for(int i=0; i<siz; i++) {\r           \r             if(s[i] == '6') {\r                 \r                 s[i] = '9';\r                 ind = i;\r                 \r                 flag = true;\r                 break;\r             }\r         }\r         \r         if(flag == false)                                       return n;\r         \r         // ind is the index which changes from 6 to 9\r         int noZeroes = s.length() - ind - 1;\r         \r         // Add 3 * noZeroes to n\r         int mul = 3;\r         \r         while(noZeroes--)                                        mul *= 10;\r         \r         return n + mul;\r     }\r     \r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p25\\1323-maximum-69-number\\1323-maximum-69-number.cpp\\Solution\\maximum69Number(int)"
    },
    {
        "f": [],
        "fm": "TreeNode* removeLeafNodes(TreeNode* root, int target) {\r     \r         if(root == NULL)                            return NULL;\r         \r         // Delete all leaf nodes having val target\r         \r         while(true) {\r             \r             bool flag = false;\r             \r             deleteNodes(root, target, flag);\r             if(flag == false)                           break;\r         }\r         \r         return root;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_removeLeafNodes_TreeNodemul_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_removeLeafNodes_TreeNodemul_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1325-delete-leaves-with-a-given-value.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\n\n\nint target=713261139;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode target */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeLeafNodes_TreeNodemul_int_random_1\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeLeafNodes(root,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p25\\\\1325-delete-leaves-with-a-given-value\\\\1325-delete-leaves-with-a-given-value.cpp\\\\Solution\\\\removeLeafNodes(TreeNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\13-roman-to-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName462247 = new char[2];akaRandomName462247[0] = 1;akaRandomName462247[1] = '\\0';string s=akaRandomName462247;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_removeLeafNodes_TreeNodemul_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_removeLeafNodes_TreeNodemul_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1325-delete-leaves-with-a-given-value.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p25\\\\1325-delete-leaves-with-a-given-value\\\\1325-delete-leaves-with-a-given-value.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1325-delete-leaves-with-a-given-value.cpp\\\\removeLeafNodes(TreeNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1137448212;\nAKA_mark(\"Calling: .\\\\p25\\\\1325-delete-leaves-with-a-given-value\\\\1325-delete-leaves-with-a-given-value.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1325-delete-leaves-with-a-given-value.cpp\\\\removeLeafNodes(TreeNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p25\\\\1325-delete-leaves-with-a-given-value\\\\1325-delete-leaves-with-a-given-value.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1325-delete-leaves-with-a-given-value.cpp\\\\removeLeafNodes(TreeNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint target=491106448;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode target */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeLeafNodes_TreeNodemul_int_random_2\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeLeafNodes(root,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p25\\\\1325-delete-leaves-with-a-given-value\\\\1325-delete-leaves-with-a-given-value.cpp\\\\Solution\\\\removeLeafNodes(TreeNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1302-deepest-leaves-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p24\\\\1302-deepest-leaves-sum\\\\1302-deepest-leaves-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1302-deepest-leaves-sum.cpp\\\\bfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint res=194216280;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode res */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     \r     void deleteNodes(TreeNode* &root, int target, bool &flag) {\r         \r         if(root == NULL)                            return;\r         \r         if(root->left == NULL && root->right == NULL) {\r             \r             if(root->val == target) {\r                 \r                 flag = true;\r                 root = NULL;\r                 \r                 return;\r             }\r         }\r         \r         deleteNodes(root->left, target, flag);\r         deleteNodes(root->right, target, flag);\r         \r         return;\r     }\r     \r     TreeNode* removeLeafNodes(TreeNode* root, int target) {\r     \r         if(root == NULL)                            return NULL;\r         \r         // Delete all leaf nodes having val target\r         \r         while(true) {\r             \r             bool flag = false;\r             \r             deleteNodes(root, target, flag);\r             if(flag == false)                           break;\r         }\r         \r         return root;\r     }\r     \r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p25\\1325-delete-leaves-with-a-given-value\\1325-delete-leaves-with-a-given-value.cpp\\Solution\\removeLeafNodes(TreeNode*,int)"
    },
    {
        "f": [
            "unordered_map<Node*, Node*> u;"
        ],
        "fm": "Node* cloneGraph(Node* node) {\r     \r         if(node == NULL)                            return NULL;\r         if(u.find(node) != u.end())                 return u[node];\r         \r         // Clone the graph\r         \r         Node* cloneNode = new Node(node->val, {});\r         u[node] = cloneNode;\r         \r         for(Node* curNode : node->neighbors) {\r             u[node]->neighbors.push_back(cloneGraph(curNode));\r         }\r         \r         return cloneNode;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_cloneGraph_Nodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_cloneGraph_Nodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\133-clone-graph.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* UnorderedMapDataNode u */\n\n\nstd::vector<Node*> AKA_VECTOR_INIT_node;\n\n\n/* SubClassDataNode node */\n/* ConstructorDataNode Node(int,vector<Node*>) */\n/* NormalNumberDataNode _val */\nint node0__val=-1364798101;\n/* VectorDataNode _neighbors */\nvector<Node*> node0__neighbors;\nstd::vector<Node*> AKA_VECTOR_INIT_node0__neighbors_element0;\n/* SubClassDataNode  */\n/* ConstructorDataNode Node() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node()|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\Node(int,vector<Node*>)\\\\_neighbors\\\\element #0\\\\element #0[0]\\\\Node()\");AKA_fCall++;auto AKA_VECTOR_INIT_node0__neighbors_element0_0 = new ::Node();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node0__neighbors_element0_0).val=-1032044115;\n/* VectorDataNode neighbors */\nNode* node0__neighbors_element00_neighbors_element0;\n(*AKA_VECTOR_INIT_node0__neighbors_element0_0).neighbors.push_back(node0__neighbors_element00_neighbors_element0);\nAKA_VECTOR_INIT_node0__neighbors_element0.push_back(AKA_VECTOR_INIT_node0__neighbors_element0_0);\nNode* node0__neighbors_element0 = AKA_VECTOR_INIT_node0__neighbors_element0[0];\nnode0__neighbors.push_back(node0__neighbors_element0);\nstd::vector<Node*> AKA_VECTOR_INIT_node0__neighbors_element1;\n/* SubClassDataNode  */\n/* ConstructorDataNode Node(int) */\n/* NormalNumberDataNode _val */\nint node0__neighbors_element10__val=-1364113547;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node(int)|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\Node(int,vector<Node*>)\\\\_neighbors\\\\element #1\\\\element #1[0]\\\\Node(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node0__neighbors_element1_0 = new ::Node(node0__neighbors_element10__val);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node0__neighbors_element1_0).val=-864994696;\n/* VectorDataNode neighbors */\nNode* node0__neighbors_element10_neighbors_element0;\n(*AKA_VECTOR_INIT_node0__neighbors_element1_0).neighbors.push_back(node0__neighbors_element10_neighbors_element0);\nNode* node0__neighbors_element10_neighbors_element1;\n(*AKA_VECTOR_INIT_node0__neighbors_element1_0).neighbors.push_back(node0__neighbors_element10_neighbors_element1);\nAKA_VECTOR_INIT_node0__neighbors_element1.push_back(AKA_VECTOR_INIT_node0__neighbors_element1_0);\n/* SubClassDataNode  */\n/* ConstructorDataNode Node(int,vector<Node*>) */\n/* NormalNumberDataNode _val */\nint node0__neighbors_element11__val=-311252475;\n/* VectorDataNode _neighbors */\nvector<Node*> node0__neighbors_element11__neighbors;\nNode* node0__neighbors_element11__neighbors_element0;\nnode0__neighbors_element11__neighbors.push_back(node0__neighbors_element11__neighbors_element0);\nNode* node0__neighbors_element11__neighbors_element1;\nnode0__neighbors_element11__neighbors.push_back(node0__neighbors_element11__neighbors_element1);\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node(int,vector<Node*>)|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\Node(int,vector<Node*>)\\\\_neighbors\\\\element #1\\\\element #1[1]\\\\Node(int,vector<Node*>)\");AKA_fCall++;auto AKA_VECTOR_INIT_node0__neighbors_element1_1 = new ::Node(node0__neighbors_element11__val,node0__neighbors_element11__neighbors);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node0__neighbors_element1_1).val=1374156294;\n/* VectorDataNode neighbors */\nNode* node0__neighbors_element11_neighbors_element0;\n(*AKA_VECTOR_INIT_node0__neighbors_element1_1).neighbors.push_back(node0__neighbors_element11_neighbors_element0);\nAKA_VECTOR_INIT_node0__neighbors_element1.push_back(AKA_VECTOR_INIT_node0__neighbors_element1_1);\n/* SubClassDataNode  */\n/* ConstructorDataNode Node(int) */\n/* NormalNumberDataNode _val */\nint node0__neighbors_element12__val=-480209551;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node(int)|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\Node(int,vector<Node*>)\\\\_neighbors\\\\element #1\\\\element #1[2]\\\\Node(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node0__neighbors_element1_2 = new ::Node(node0__neighbors_element12__val);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node0__neighbors_element1_2).val=1819771212;\n/* VectorDataNode neighbors */\nNode* node0__neighbors_element12_neighbors_element0;\n(*AKA_VECTOR_INIT_node0__neighbors_element1_2).neighbors.push_back(node0__neighbors_element12_neighbors_element0);\nAKA_VECTOR_INIT_node0__neighbors_element1.push_back(AKA_VECTOR_INIT_node0__neighbors_element1_2);\nNode* node0__neighbors_element1 = AKA_VECTOR_INIT_node0__neighbors_element1[0];\nnode0__neighbors.push_back(node0__neighbors_element1);\nAKA_mark(\"Calling: .\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node(int,vector<Node*>)|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\Node(int,vector<Node*>)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::Node(node0__val,node0__neighbors);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=1485161250;\n/* VectorDataNode neighbors */\nstd::vector<Node*> AKA_VECTOR_INIT_node0_neighbors_element0;\n/* SubClassDataNode  */\n/* ConstructorDataNode Node(int,vector<Node*>) */\n/* NormalNumberDataNode _val */\nint node0_neighbors_element00__val=1120041730;\n/* VectorDataNode _neighbors */\nvector<Node*> node0_neighbors_element00__neighbors;\nNode* node0_neighbors_element00__neighbors_element0;\nnode0_neighbors_element00__neighbors.push_back(node0_neighbors_element00__neighbors_element0);\nNode* node0_neighbors_element00__neighbors_element1;\nnode0_neighbors_element00__neighbors.push_back(node0_neighbors_element00__neighbors_element1);\nNode* node0_neighbors_element00__neighbors_element2;\nnode0_neighbors_element00__neighbors.push_back(node0_neighbors_element00__neighbors_element2);\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node(int,vector<Node*>)|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\neighbors\\\\element #0\\\\element #0[0]\\\\Node(int,vector<Node*>)\");AKA_fCall++;auto AKA_VECTOR_INIT_node0_neighbors_element0_0 = new ::Node(node0_neighbors_element00__val,node0_neighbors_element00__neighbors);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node0_neighbors_element0_0).val=1400025747;\n/* VectorDataNode neighbors */\nNode* node0_neighbors_element00_neighbors_element0;\n(*AKA_VECTOR_INIT_node0_neighbors_element0_0).neighbors.push_back(node0_neighbors_element00_neighbors_element0);\nAKA_VECTOR_INIT_node0_neighbors_element0.push_back(AKA_VECTOR_INIT_node0_neighbors_element0_0);\n/* SubClassDataNode  */\n/* ConstructorDataNode Node(int) */\n/* NormalNumberDataNode _val */\nint node0_neighbors_element01__val=-228500864;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node(int)|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\neighbors\\\\element #0\\\\element #0[1]\\\\Node(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node0_neighbors_element0_1 = new ::Node(node0_neighbors_element01__val);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node0_neighbors_element0_1).val=-1867864954;\n/* VectorDataNode neighbors */\nNode* node0_neighbors_element01_neighbors_element0;\n(*AKA_VECTOR_INIT_node0_neighbors_element0_1).neighbors.push_back(node0_neighbors_element01_neighbors_element0);\nNode* node0_neighbors_element01_neighbors_element1;\n(*AKA_VECTOR_INIT_node0_neighbors_element0_1).neighbors.push_back(node0_neighbors_element01_neighbors_element1);\nAKA_VECTOR_INIT_node0_neighbors_element0.push_back(AKA_VECTOR_INIT_node0_neighbors_element0_1);\n/* SubClassDataNode  */\n/* ConstructorDataNode Node(int) */\n/* NormalNumberDataNode _val */\nint node0_neighbors_element02__val=885584782;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node(int)|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\neighbors\\\\element #0\\\\element #0[2]\\\\Node(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node0_neighbors_element0_2 = new ::Node(node0_neighbors_element02__val);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node0_neighbors_element0_2).val=608925131;\n/* VectorDataNode neighbors */\nNode* node0_neighbors_element02_neighbors_element0;\n(*AKA_VECTOR_INIT_node0_neighbors_element0_2).neighbors.push_back(node0_neighbors_element02_neighbors_element0);\nNode* node0_neighbors_element02_neighbors_element1;\n(*AKA_VECTOR_INIT_node0_neighbors_element0_2).neighbors.push_back(node0_neighbors_element02_neighbors_element1);\nNode* node0_neighbors_element02_neighbors_element2;\n(*AKA_VECTOR_INIT_node0_neighbors_element0_2).neighbors.push_back(node0_neighbors_element02_neighbors_element2);\nAKA_VECTOR_INIT_node0_neighbors_element0.push_back(AKA_VECTOR_INIT_node0_neighbors_element0_2);\nNode* node0_neighbors_element0 = AKA_VECTOR_INIT_node0_neighbors_element0[0];\n(*AKA_VECTOR_INIT_node_0).neighbors.push_back(node0_neighbors_element0);\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubClassDataNode node */\n/* ConstructorDataNode Node(int) */\n/* NormalNumberDataNode _val */\nint node1__val=1314470296;\nAKA_mark(\"Calling: .\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node(int)|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\Node(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::Node(node1__val);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=1283311250;\n/* VectorDataNode neighbors */\nstd::vector<Node*> AKA_VECTOR_INIT_node1_neighbors_element0;\n/* SubClassDataNode  */\n/* ConstructorDataNode Node() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node()|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\neighbors\\\\element #0\\\\element #0[0]\\\\Node()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_neighbors_element0_0 = new ::Node();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_neighbors_element0_0).val=-1508962617;\n/* VectorDataNode neighbors */\nNode* node1_neighbors_element00_neighbors_element0;\n(*AKA_VECTOR_INIT_node1_neighbors_element0_0).neighbors.push_back(node1_neighbors_element00_neighbors_element0);\nNode* node1_neighbors_element00_neighbors_element1;\n(*AKA_VECTOR_INIT_node1_neighbors_element0_0).neighbors.push_back(node1_neighbors_element00_neighbors_element1);\nNode* node1_neighbors_element00_neighbors_element2;\n(*AKA_VECTOR_INIT_node1_neighbors_element0_0).neighbors.push_back(node1_neighbors_element00_neighbors_element2);\nAKA_VECTOR_INIT_node1_neighbors_element0.push_back(AKA_VECTOR_INIT_node1_neighbors_element0_0);\n/* SubClassDataNode  */\n/* ConstructorDataNode Node() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node()|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\neighbors\\\\element #0\\\\element #0[1]\\\\Node()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_neighbors_element0_1 = new ::Node();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_neighbors_element0_1).val=1616947604;\n/* VectorDataNode neighbors */\nNode* node1_neighbors_element01_neighbors_element0;\n(*AKA_VECTOR_INIT_node1_neighbors_element0_1).neighbors.push_back(node1_neighbors_element01_neighbors_element0);\nNode* node1_neighbors_element01_neighbors_element1;\n(*AKA_VECTOR_INIT_node1_neighbors_element0_1).neighbors.push_back(node1_neighbors_element01_neighbors_element1);\nAKA_VECTOR_INIT_node1_neighbors_element0.push_back(AKA_VECTOR_INIT_node1_neighbors_element0_1);\n/* SubClassDataNode  */\n/* ConstructorDataNode Node() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node()|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\neighbors\\\\element #0\\\\element #0[2]\\\\Node()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_neighbors_element0_2 = new ::Node();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_neighbors_element0_2).val=-1248351113;\n/* VectorDataNode neighbors */\nNode* node1_neighbors_element02_neighbors_element0;\n(*AKA_VECTOR_INIT_node1_neighbors_element0_2).neighbors.push_back(node1_neighbors_element02_neighbors_element0);\nNode* node1_neighbors_element02_neighbors_element1;\n(*AKA_VECTOR_INIT_node1_neighbors_element0_2).neighbors.push_back(node1_neighbors_element02_neighbors_element1);\nAKA_VECTOR_INIT_node1_neighbors_element0.push_back(AKA_VECTOR_INIT_node1_neighbors_element0_2);\nNode* node1_neighbors_element0 = AKA_VECTOR_INIT_node1_neighbors_element0[0];\n(*AKA_VECTOR_INIT_node_1).neighbors.push_back(node1_neighbors_element0);\nstd::vector<Node*> AKA_VECTOR_INIT_node1_neighbors_element1;\n/* SubClassDataNode  */\n/* ConstructorDataNode Node() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node()|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\neighbors\\\\element #1\\\\element #1[0]\\\\Node()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_neighbors_element1_0 = new ::Node();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_neighbors_element1_0).val=144941107;\n/* VectorDataNode neighbors */\nNode* node1_neighbors_element10_neighbors_element0;\n(*AKA_VECTOR_INIT_node1_neighbors_element1_0).neighbors.push_back(node1_neighbors_element10_neighbors_element0);\nNode* node1_neighbors_element10_neighbors_element1;\n(*AKA_VECTOR_INIT_node1_neighbors_element1_0).neighbors.push_back(node1_neighbors_element10_neighbors_element1);\nAKA_VECTOR_INIT_node1_neighbors_element1.push_back(AKA_VECTOR_INIT_node1_neighbors_element1_0);\nNode* node1_neighbors_element1 = AKA_VECTOR_INIT_node1_neighbors_element1[0];\n(*AKA_VECTOR_INIT_node_1).neighbors.push_back(node1_neighbors_element1);\nstd::vector<Node*> AKA_VECTOR_INIT_node1_neighbors_element2;\n/* SubClassDataNode  */\n/* ConstructorDataNode Node() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node()|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\neighbors\\\\element #2\\\\element #2[0]\\\\Node()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_neighbors_element2_0 = new ::Node();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_neighbors_element2_0).val=90095974;\n/* VectorDataNode neighbors */\nNode* node1_neighbors_element20_neighbors_element0;\n(*AKA_VECTOR_INIT_node1_neighbors_element2_0).neighbors.push_back(node1_neighbors_element20_neighbors_element0);\nNode* node1_neighbors_element20_neighbors_element1;\n(*AKA_VECTOR_INIT_node1_neighbors_element2_0).neighbors.push_back(node1_neighbors_element20_neighbors_element1);\nAKA_VECTOR_INIT_node1_neighbors_element2.push_back(AKA_VECTOR_INIT_node1_neighbors_element2_0);\n/* SubClassDataNode  */\n/* ConstructorDataNode Node(int,vector<Node*>) */\n/* NormalNumberDataNode _val */\nint node1_neighbors_element21__val=-749111821;\n/* VectorDataNode _neighbors */\nvector<Node*> node1_neighbors_element21__neighbors;\nNode* node1_neighbors_element21__neighbors_element0;\nnode1_neighbors_element21__neighbors.push_back(node1_neighbors_element21__neighbors_element0);\nNode* node1_neighbors_element21__neighbors_element1;\nnode1_neighbors_element21__neighbors.push_back(node1_neighbors_element21__neighbors_element1);\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node(int,vector<Node*>)|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\neighbors\\\\element #2\\\\element #2[1]\\\\Node(int,vector<Node*>)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_neighbors_element2_1 = new ::Node(node1_neighbors_element21__val,node1_neighbors_element21__neighbors);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_neighbors_element2_1).val=-1143326330;\n/* VectorDataNode neighbors */\nNode* node1_neighbors_element21_neighbors_element0;\n(*AKA_VECTOR_INIT_node1_neighbors_element2_1).neighbors.push_back(node1_neighbors_element21_neighbors_element0);\nAKA_VECTOR_INIT_node1_neighbors_element2.push_back(AKA_VECTOR_INIT_node1_neighbors_element2_1);\n/* SubClassDataNode  */\n/* ConstructorDataNode Node() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node()|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\neighbors\\\\element #2\\\\element #2[2]\\\\Node()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_neighbors_element2_2 = new ::Node();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_neighbors_element2_2).val=-1353761370;\n/* VectorDataNode neighbors */\nNode* node1_neighbors_element22_neighbors_element0;\n(*AKA_VECTOR_INIT_node1_neighbors_element2_2).neighbors.push_back(node1_neighbors_element22_neighbors_element0);\nNode* node1_neighbors_element22_neighbors_element1;\n(*AKA_VECTOR_INIT_node1_neighbors_element2_2).neighbors.push_back(node1_neighbors_element22_neighbors_element1);\nNode* node1_neighbors_element22_neighbors_element2;\n(*AKA_VECTOR_INIT_node1_neighbors_element2_2).neighbors.push_back(node1_neighbors_element22_neighbors_element2);\nAKA_VECTOR_INIT_node1_neighbors_element2.push_back(AKA_VECTOR_INIT_node1_neighbors_element2_2);\nNode* node1_neighbors_element2 = AKA_VECTOR_INIT_node1_neighbors_element2[0];\n(*AKA_VECTOR_INIT_node_1).neighbors.push_back(node1_neighbors_element2);\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\n\n/* SubClassDataNode node */\n/* ConstructorDataNode Node(int,vector<Node*>) */\n/* NormalNumberDataNode _val */\nint node2__val=-1311228239;\n/* VectorDataNode _neighbors */\nvector<Node*> node2__neighbors;\nstd::vector<Node*> AKA_VECTOR_INIT_node2__neighbors_element0;\n/* SubClassDataNode  */\n/* ConstructorDataNode Node(int,vector<Node*>) */\n/* NormalNumberDataNode _val */\nint node2__neighbors_element00__val=-1096827800;\n/* VectorDataNode _neighbors */\nvector<Node*> node2__neighbors_element00__neighbors;\nNode* node2__neighbors_element00__neighbors_element0;\nnode2__neighbors_element00__neighbors.push_back(node2__neighbors_element00__neighbors_element0);\nNode* node2__neighbors_element00__neighbors_element1;\nnode2__neighbors_element00__neighbors.push_back(node2__neighbors_element00__neighbors_element1);\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node(int,vector<Node*>)|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\Node(int,vector<Node*>)\\\\_neighbors\\\\element #0\\\\element #0[0]\\\\Node(int,vector<Node*>)\");AKA_fCall++;auto AKA_VECTOR_INIT_node2__neighbors_element0_0 = new ::Node(node2__neighbors_element00__val,node2__neighbors_element00__neighbors);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2__neighbors_element0_0).val=935581115;\n/* VectorDataNode neighbors */\nNode* node2__neighbors_element00_neighbors_element0;\n(*AKA_VECTOR_INIT_node2__neighbors_element0_0).neighbors.push_back(node2__neighbors_element00_neighbors_element0);\nNode* node2__neighbors_element00_neighbors_element1;\n(*AKA_VECTOR_INIT_node2__neighbors_element0_0).neighbors.push_back(node2__neighbors_element00_neighbors_element1);\nNode* node2__neighbors_element00_neighbors_element2;\n(*AKA_VECTOR_INIT_node2__neighbors_element0_0).neighbors.push_back(node2__neighbors_element00_neighbors_element2);\nAKA_VECTOR_INIT_node2__neighbors_element0.push_back(AKA_VECTOR_INIT_node2__neighbors_element0_0);\n/* SubClassDataNode  */\n/* ConstructorDataNode Node(int,vector<Node*>) */\n/* NormalNumberDataNode _val */\nint node2__neighbors_element01__val=-1383106992;\n/* VectorDataNode _neighbors */\nvector<Node*> node2__neighbors_element01__neighbors;\nNode* node2__neighbors_element01__neighbors_element0;\nnode2__neighbors_element01__neighbors.push_back(node2__neighbors_element01__neighbors_element0);\nNode* node2__neighbors_element01__neighbors_element1;\nnode2__neighbors_element01__neighbors.push_back(node2__neighbors_element01__neighbors_element1);\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node(int,vector<Node*>)|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\Node(int,vector<Node*>)\\\\_neighbors\\\\element #0\\\\element #0[1]\\\\Node(int,vector<Node*>)\");AKA_fCall++;auto AKA_VECTOR_INIT_node2__neighbors_element0_1 = new ::Node(node2__neighbors_element01__val,node2__neighbors_element01__neighbors);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2__neighbors_element0_1).val=-430982038;\n/* VectorDataNode neighbors */\nNode* node2__neighbors_element01_neighbors_element0;\n(*AKA_VECTOR_INIT_node2__neighbors_element0_1).neighbors.push_back(node2__neighbors_element01_neighbors_element0);\nAKA_VECTOR_INIT_node2__neighbors_element0.push_back(AKA_VECTOR_INIT_node2__neighbors_element0_1);\nNode* node2__neighbors_element0 = AKA_VECTOR_INIT_node2__neighbors_element0[0];\nnode2__neighbors.push_back(node2__neighbors_element0);\nNode* node2__neighbors_element1;\nnode2__neighbors.push_back(node2__neighbors_element1);\nAKA_mark(\"Calling: .\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Node\\\\Node(int,vector<Node*>)|ROOT\\\\133-clone-graph.cpp\\\\cloneGraph(Node*)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\Node(int,vector<Node*>)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2 = new ::Node(node2__val,node2__neighbors);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_2).val=-1947509708;\n/* VectorDataNode neighbors */\nNode* node2_neighbors_element0;\n(*AKA_VECTOR_INIT_node_2).neighbors.push_back(node2_neighbors_element0);\nNode* node2_neighbors_element1;\n(*AKA_VECTOR_INIT_node_2).neighbors.push_back(node2_neighbors_element1);\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_2);\n\nNode* node = AKA_VECTOR_INIT_node[0];\nNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_cloneGraph_Nodemul_random_2\");Node* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->cloneGraph(node);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p25\\\\133-clone-graph\\\\133-clone-graph.cpp\\\\Solution\\\\cloneGraph(Node*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\13-roman-to-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName462247 = new char[2];akaRandomName462247[0] = 1;akaRandomName462247[1] = '\\0';string s=akaRandomName462247;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r \r     unordered_map<Node*, Node*> u;\r \r     Node* cloneGraph(Node* node) {\r     \r         if(node == NULL)                            return NULL;\r         if(u.find(node) != u.end())                 return u[node];\r         \r         // Clone the graph\r         \r         Node* cloneNode = new Node(node->val, {});\r         u[node] = cloneNode;\r         \r         for(Node* curNode : node->neighbors) {\r             u[node]->neighbors.push_back(cloneGraph(curNode));\r         }\r         \r         return cloneNode;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p25\\133-clone-graph\\133-clone-graph.cpp\\Solution\\cloneGraph(Node*)"
    }
]
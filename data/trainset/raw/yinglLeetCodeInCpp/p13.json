[
    {
        "f": [],
        "fm": "UndirectedGraphNode* _clone_graph(UndirectedGraphNode *node,\r       map<UndirectedGraphNode*, UndirectedGraphNode*> &cloned) {\r     if (NULL == node) {\r       return NULL;\r     }\r     else if (cloned.find(node) != cloned.end()) {\r       return cloned[node];\r     }\r \r     UndirectedGraphNode *cnode = new UndirectedGraphNode(node->label);\r \r     cloned[node] = cnode;\r \r     for (int i = 0; i < (node->neighbors).size(); ++i) {\r       (cnode->neighbors).push_back(_clone_graph((node->neighbors)[i], cloned));\r     }\r \r     return cnode;\r   }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_clone_graph_UndirectedGraphNodemul_map_UndirectedGraphNodemul_UndirectedGraphNodemul_random_1(void) {\n{\nAKA_test_case_name=\"Solution_clone_graph_UndirectedGraphNodemul_map_UndirectedGraphNodemul_UndirectedGraphNodemul_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\clone_graph.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<UndirectedGraphNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubClassDataNode node */\n/* ConstructorDataNode UndirectedGraphNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=11844563;\nAKA_mark(\"Calling: .\\\\build fail\\\\clone_graph.cpp\\\\UndirectedGraphNode\\\\UndirectedGraphNode(int)|ROOT\\\\clone_graph.cpp\\\\_clone_graph(UndirectedGraphNode*,map<UndirectedGraphNode*,UndirectedGraphNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\UndirectedGraphNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::UndirectedGraphNode(node0_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_node_0).label=-1702741368;\n/* VectorDataNode neighbors */\nUndirectedGraphNode* node0_neighbors_element0;\n(*AKA_VECTOR_INIT_node_0).neighbors.push_back(node0_neighbors_element0);\nstd::vector<UndirectedGraphNode*> AKA_VECTOR_INIT_node0_neighbors_element1;\n/* SubClassDataNode  */\n/* ConstructorDataNode UndirectedGraphNode(int) */\n/* NormalNumberDataNode x */\nint node0_neighbors_element10_x=1351805642;\nAKA_mark(\"Calling: D:\\\\Lab\\\\test-cpp\\\\leetcode\\\\prj-data\\\\yingl_LeetCodeInCpp\\\\build fail\\\\clone_graph.cpp\\\\UndirectedGraphNode\\\\UndirectedGraphNode(int)|ROOT\\\\clone_graph.cpp\\\\_clone_graph(UndirectedGraphNode*,map<UndirectedGraphNode*,UndirectedGraphNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\neighbors\\\\element #1\\\\element #1[0]\\\\UndirectedGraphNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node0_neighbors_element1_0 = new ::UndirectedGraphNode(node0_neighbors_element10_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_node0_neighbors_element1_0).label=-208287071;\n/* VectorDataNode neighbors */\nUndirectedGraphNode* node0_neighbors_element10_neighbors_element0;\n(*AKA_VECTOR_INIT_node0_neighbors_element1_0).neighbors.push_back(node0_neighbors_element10_neighbors_element0);\nAKA_VECTOR_INIT_node0_neighbors_element1.push_back(AKA_VECTOR_INIT_node0_neighbors_element1_0);\n/* SubClassDataNode  */\n/* ConstructorDataNode UndirectedGraphNode(int) */\n/* NormalNumberDataNode x */\nint node0_neighbors_element11_x=1720859718;\nAKA_mark(\"Calling: D:\\\\Lab\\\\test-cpp\\\\leetcode\\\\prj-data\\\\yingl_LeetCodeInCpp\\\\build fail\\\\clone_graph.cpp\\\\UndirectedGraphNode\\\\UndirectedGraphNode(int)|ROOT\\\\clone_graph.cpp\\\\_clone_graph(UndirectedGraphNode*,map<UndirectedGraphNode*,UndirectedGraphNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\neighbors\\\\element #1\\\\element #1[1]\\\\UndirectedGraphNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node0_neighbors_element1_1 = new ::UndirectedGraphNode(node0_neighbors_element11_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_node0_neighbors_element1_1).label=-588072626;\n/* VectorDataNode neighbors */\nUndirectedGraphNode* node0_neighbors_element11_neighbors_element0;\n(*AKA_VECTOR_INIT_node0_neighbors_element1_1).neighbors.push_back(node0_neighbors_element11_neighbors_element0);\nAKA_VECTOR_INIT_node0_neighbors_element1.push_back(AKA_VECTOR_INIT_node0_neighbors_element1_1);\nUndirectedGraphNode* node0_neighbors_element1 = AKA_VECTOR_INIT_node0_neighbors_element1[0];\n(*AKA_VECTOR_INIT_node_0).neighbors.push_back(node0_neighbors_element1);\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubClassDataNode node */\n/* ConstructorDataNode UndirectedGraphNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=1462475530;\nAKA_mark(\"Calling: .\\\\build fail\\\\clone_graph.cpp\\\\UndirectedGraphNode\\\\UndirectedGraphNode(int)|ROOT\\\\clone_graph.cpp\\\\_clone_graph(UndirectedGraphNode*,map<UndirectedGraphNode*,UndirectedGraphNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\UndirectedGraphNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::UndirectedGraphNode(node1_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_node_1).label=-930938199;\n/* VectorDataNode neighbors */\nstd::vector<UndirectedGraphNode*> AKA_VECTOR_INIT_node1_neighbors_element0;\n/* SubClassDataNode  */\n/* ConstructorDataNode UndirectedGraphNode(int) */\n/* NormalNumberDataNode x */\nint node1_neighbors_element00_x=-191830079;\nAKA_mark(\"Calling: D:\\\\Lab\\\\test-cpp\\\\leetcode\\\\prj-data\\\\yingl_LeetCodeInCpp\\\\build fail\\\\clone_graph.cpp\\\\UndirectedGraphNode\\\\UndirectedGraphNode(int)|ROOT\\\\clone_graph.cpp\\\\_clone_graph(UndirectedGraphNode*,map<UndirectedGraphNode*,UndirectedGraphNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\neighbors\\\\element #0\\\\element #0[0]\\\\UndirectedGraphNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_neighbors_element0_0 = new ::UndirectedGraphNode(node1_neighbors_element00_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_node1_neighbors_element0_0).label=1968473716;\n/* VectorDataNode neighbors */\nUndirectedGraphNode* node1_neighbors_element00_neighbors_element0;\n(*AKA_VECTOR_INIT_node1_neighbors_element0_0).neighbors.push_back(node1_neighbors_element00_neighbors_element0);\nAKA_VECTOR_INIT_node1_neighbors_element0.push_back(AKA_VECTOR_INIT_node1_neighbors_element0_0);\n/* SubClassDataNode  */\n/* ConstructorDataNode UndirectedGraphNode(int) */\n/* NormalNumberDataNode x */\nint node1_neighbors_element01_x=1221556981;\nAKA_mark(\"Calling: D:\\\\Lab\\\\test-cpp\\\\leetcode\\\\prj-data\\\\yingl_LeetCodeInCpp\\\\build fail\\\\clone_graph.cpp\\\\UndirectedGraphNode\\\\UndirectedGraphNode(int)|ROOT\\\\clone_graph.cpp\\\\_clone_graph(UndirectedGraphNode*,map<UndirectedGraphNode*,UndirectedGraphNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\neighbors\\\\element #0\\\\element #0[1]\\\\UndirectedGraphNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_neighbors_element0_1 = new ::UndirectedGraphNode(node1_neighbors_element01_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_node1_neighbors_element0_1).label=-1776324789;\n/* VectorDataNode neighbors */\nUndirectedGraphNode* node1_neighbors_element01_neighbors_element0;\n(*AKA_VECTOR_INIT_node1_neighbors_element0_1).neighbors.push_back(node1_neighbors_element01_neighbors_element0);\nUndirectedGraphNode* node1_neighbors_element01_neighbors_element1;\n(*AKA_VECTOR_INIT_node1_neighbors_element0_1).neighbors.push_back(node1_neighbors_element01_neighbors_element1);\nAKA_VECTOR_INIT_node1_neighbors_element0.push_back(AKA_VECTOR_INIT_node1_neighbors_element0_1);\n/* SubClassDataNode  */\n/* ConstructorDataNode UndirectedGraphNode(int) */\n/* NormalNumberDataNode x */\nint node1_neighbors_element02_x=-497378811;\nAKA_mark(\"Calling: D:\\\\Lab\\\\test-cpp\\\\leetcode\\\\prj-data\\\\yingl_LeetCodeInCpp\\\\build fail\\\\clone_graph.cpp\\\\UndirectedGraphNode\\\\UndirectedGraphNode(int)|ROOT\\\\clone_graph.cpp\\\\_clone_graph(UndirectedGraphNode*,map<UndirectedGraphNode*,UndirectedGraphNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\neighbors\\\\element #0\\\\element #0[2]\\\\UndirectedGraphNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_neighbors_element0_2 = new ::UndirectedGraphNode(node1_neighbors_element02_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_node1_neighbors_element0_2).label=-2089390870;\n/* VectorDataNode neighbors */\nUndirectedGraphNode* node1_neighbors_element02_neighbors_element0;\n(*AKA_VECTOR_INIT_node1_neighbors_element0_2).neighbors.push_back(node1_neighbors_element02_neighbors_element0);\nUndirectedGraphNode* node1_neighbors_element02_neighbors_element1;\n(*AKA_VECTOR_INIT_node1_neighbors_element0_2).neighbors.push_back(node1_neighbors_element02_neighbors_element1);\nAKA_VECTOR_INIT_node1_neighbors_element0.push_back(AKA_VECTOR_INIT_node1_neighbors_element0_2);\nUndirectedGraphNode* node1_neighbors_element0 = AKA_VECTOR_INIT_node1_neighbors_element0[0];\n(*AKA_VECTOR_INIT_node_1).neighbors.push_back(node1_neighbors_element0);\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\n\n/* SubClassDataNode node */\n/* ConstructorDataNode UndirectedGraphNode(int) */\n/* NormalNumberDataNode x */\nint node2_x=-1582228646;\nAKA_mark(\"Calling: .\\\\build fail\\\\clone_graph.cpp\\\\UndirectedGraphNode\\\\UndirectedGraphNode(int)|ROOT\\\\clone_graph.cpp\\\\_clone_graph(UndirectedGraphNode*,map<UndirectedGraphNode*,UndirectedGraphNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\UndirectedGraphNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2 = new ::UndirectedGraphNode(node2_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_node_2).label=-943240733;\n/* VectorDataNode neighbors */\nUndirectedGraphNode* node2_neighbors_element0;\n(*AKA_VECTOR_INIT_node_2).neighbors.push_back(node2_neighbors_element0);\nUndirectedGraphNode* node2_neighbors_element1;\n(*AKA_VECTOR_INIT_node_2).neighbors.push_back(node2_neighbors_element1);\nstd::vector<UndirectedGraphNode*> AKA_VECTOR_INIT_node2_neighbors_element2;\n/* SubClassDataNode  */\n/* ConstructorDataNode UndirectedGraphNode(int) */\n/* NormalNumberDataNode x */\nint node2_neighbors_element20_x=375617613;\nAKA_mark(\"Calling: D:\\\\Lab\\\\test-cpp\\\\leetcode\\\\prj-data\\\\yingl_LeetCodeInCpp\\\\build fail\\\\clone_graph.cpp\\\\UndirectedGraphNode\\\\UndirectedGraphNode(int)|ROOT\\\\clone_graph.cpp\\\\_clone_graph(UndirectedGraphNode*,map<UndirectedGraphNode*,UndirectedGraphNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\neighbors\\\\element #2\\\\element #2[0]\\\\UndirectedGraphNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_neighbors_element2_0 = new ::UndirectedGraphNode(node2_neighbors_element20_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_node2_neighbors_element2_0).label=1409877254;\n/* VectorDataNode neighbors */\nUndirectedGraphNode* node2_neighbors_element20_neighbors_element0;\n(*AKA_VECTOR_INIT_node2_neighbors_element2_0).neighbors.push_back(node2_neighbors_element20_neighbors_element0);\nUndirectedGraphNode* node2_neighbors_element20_neighbors_element1;\n(*AKA_VECTOR_INIT_node2_neighbors_element2_0).neighbors.push_back(node2_neighbors_element20_neighbors_element1);\nUndirectedGraphNode* node2_neighbors_element20_neighbors_element2;\n(*AKA_VECTOR_INIT_node2_neighbors_element2_0).neighbors.push_back(node2_neighbors_element20_neighbors_element2);\nAKA_VECTOR_INIT_node2_neighbors_element2.push_back(AKA_VECTOR_INIT_node2_neighbors_element2_0);\nUndirectedGraphNode* node2_neighbors_element2 = AKA_VECTOR_INIT_node2_neighbors_element2[0];\n(*AKA_VECTOR_INIT_node_2).neighbors.push_back(node2_neighbors_element2);\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_2);\n\nUndirectedGraphNode* node = AKA_VECTOR_INIT_node[0];\nmap<UndirectedGraphNode*, UndirectedGraphNode*> cloned;\nUndirectedGraphNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* MapDataNode cloned */\nstd::pair<UndirectedGraphNode*, UndirectedGraphNode*> cloned_element0;\n/* PointerStructureDataNode first */\nstd::vector<UndirectedGraphNode*> AKA_VECTOR_INIT_cloned_element0_DOT_first;\n/* SubClassDataNode first[0] */\n/* ConstructorDataNode UndirectedGraphNode(int) */\n/* NormalNumberDataNode x */\nint cloned_element0_first0_x=1803925673;\nAKA_mark(\"Calling: .\\\\build fail\\\\clone_graph.cpp\\\\UndirectedGraphNode\\\\UndirectedGraphNode(int)|ROOT\\\\clone_graph.cpp\\\\_clone_graph(UndirectedGraphNode*,map<UndirectedGraphNode*,UndirectedGraphNode*>&)\\\\cloned\\\\element #0\\\\first\\\\first[0]\\\\first[0]\\\\UndirectedGraphNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_cloned_element0_DOT_first_0 = new ::UndirectedGraphNode(cloned_element0_first0_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_cloned_element0_DOT_first_0).label=-1100674697;\n/* VectorDataNode neighbors */\nUndirectedGraphNode* cloned_element0_first0_neighbors_element0;\n(*AKA_VECTOR_INIT_cloned_element0_DOT_first_0).neighbors.push_back(cloned_element0_first0_neighbors_element0);\nUndirectedGraphNode* cloned_element0_first0_neighbors_element1;\n(*AKA_VECTOR_INIT_cloned_element0_DOT_first_0).neighbors.push_back(cloned_element0_first0_neighbors_element1);\nAKA_VECTOR_INIT_cloned_element0_DOT_first.push_back(AKA_VECTOR_INIT_cloned_element0_DOT_first_0);\ncloned_element0.first = AKA_VECTOR_INIT_cloned_element0_DOT_first[0];\n/* PointerStructureDataNode second */\ncloned_element0.second;\ncloned.insert(cloned_element0);\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_clone_graph_UndirectedGraphNodemul_map_UndirectedGraphNodemul_UndirectedGraphNodemul_random_1\");UndirectedGraphNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->_clone_graph(node,cloned);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\build fail\\\\clone_graph.cpp\\\\Solution\\\\_clone_graph(UndirectedGraphNode*,map<UndirectedGraphNode*,UndirectedGraphNode*>&)\");\n\n\nmap<UndirectedGraphNode*, UndirectedGraphNode*> EXPECTED_cloned;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\construct_binary_tree_from_inorder_and_postorder_traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> inorder;\n\n\nint in_start=5;\n\n\nint in_end=9;\nvector<int> postorder;\n\n\nint post_start=-896389569;\n\n\nint post_end=1538342685;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode inorder */\nint inorder_element0=269118745;\ninorder.push_back(inorder_element0);\nint inorder_element1=1069454874;\ninorder.push_back(inorder_element1);\nint inorder_element2=1102929419;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode in_start */\n/* NormalNumberDataNode in_end */\n/* VectorDataNode postorder */\nint postorder_element0=2134115492;\npostorder.push_back(postorder_element0);\nint postorder_element1=-1523871467;\npostorder.push_back(postorder_element1);\n/* NormalNumberDataNode post_start */\n/* NormalNumberDataNode post_end */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r   UndirectedGraphNode *cloneGraph(UndirectedGraphNode *node) {\r      map<UndirectedGraphNode*, UndirectedGraphNode*> cloned;\r \r      return _clone_graph(node, cloned);\r   }\r \r protected:\r   UndirectedGraphNode* _clone_graph(UndirectedGraphNode *node,\r       map<UndirectedGraphNode*, UndirectedGraphNode*> &cloned) {\r     if (NULL == node) {\r       return NULL;\r     }\r     else if (cloned.find(node) != cloned.end()) {\r       return cloned[node];\r     }\r \r     UndirectedGraphNode *cnode = new UndirectedGraphNode(node->label);\r \r     cloned[node] = cnode;\r \r     for (int i = 0; i < (node->neighbors).size(); ++i) {\r       (cnode->neighbors).push_back(_clone_graph((node->neighbors)[i], cloned));\r     }\r \r     return cnode;\r   }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Lab\\test-cpp\\leetcode\\prj-data\\yingl_LeetCodeInCpp\\build fail\\clone_graph.cpp\\Solution\\_clone_graph(UndirectedGraphNode*,map<UndirectedGraphNode*,UndirectedGraphNode*>&)"
    },
    {
        "f": [],
        "fm": "RandomListNode *copyRandomList(RandomListNode *head) {\r     map<RandomListNode*, RandomListNode*> copied;\r \r     return copy_random_list(head, copied);\r   }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_copyRandomList_RandomListNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_copyRandomList_RandomListNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\copy_list_with_random_pointer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<RandomListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubClassDataNode head */\n/* ConstructorDataNode RandomListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-1872727031;\nAKA_mark(\"Calling: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\RandomListNode\\\\RandomListNode(int)|ROOT\\\\copy_list_with_random_pointer.cpp\\\\copyRandomList(RandomListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\RandomListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::RandomListNode(head0_x);\n/* NormalNumberDataNode label */\n/* label : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n/* PointerStructureDataNode random */\n(*AKA_VECTOR_INIT_head_0).random;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubClassDataNode head */\n/* ConstructorDataNode RandomListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=509896804;\nAKA_mark(\"Calling: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\RandomListNode\\\\RandomListNode(int)|ROOT\\\\copy_list_with_random_pointer.cpp\\\\copyRandomList(RandomListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\RandomListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::RandomListNode(head1_x);\n/* NormalNumberDataNode label */\n/* label : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n/* PointerStructureDataNode random */\n(*AKA_VECTOR_INIT_head_1).random;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nRandomListNode* head = AKA_VECTOR_INIT_head[0];\nRandomListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_copyRandomList_RandomListNodemul_random_3\");RandomListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->copyRandomList(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\Solution\\\\copyRandomList(RandomListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\construct_binary_tree_from_inorder_and_postorder_traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> inorder;\n\n\nint in_start=5;\n\n\nint in_end=9;\nvector<int> postorder;\n\n\nint post_start=-896389569;\n\n\nint post_end=1538342685;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode inorder */\nint inorder_element0=269118745;\ninorder.push_back(inorder_element0);\nint inorder_element1=1069454874;\ninorder.push_back(inorder_element1);\nint inorder_element2=1102929419;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode in_start */\n/* NormalNumberDataNode in_end */\n/* VectorDataNode postorder */\nint postorder_element0=2134115492;\npostorder.push_back(postorder_element0);\nint postorder_element1=-1523871467;\npostorder.push_back(postorder_element1);\n/* NormalNumberDataNode post_start */\n/* NormalNumberDataNode post_end */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r   RandomListNode *copyRandomList(RandomListNode *head) {\r     map<RandomListNode*, RandomListNode*> copied;\r \r     return copy_random_list(head, copied);\r   }\r \r protected:\r   RandomListNode* copy_random_list(RandomListNode *head,\r       map<RandomListNode*, RandomListNode*> &copied) {\r     if (NULL == head) {\r       return NULL;\r     }\r     else if (copied.find(head) != copied.end()) {\r       return copied[head];\r     }\r \r     RandomListNode *node = new RandomListNode(head->label);\r \r     copied[head] = node;\r     node->next = copy_random_list(head->next, copied);\r     node->random = copy_random_list(head->random, copied);\r \r     return node;\r   }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Lab\\test-cpp\\leetcode\\prj-data\\yingl_LeetCodeInCpp\\build fail\\copy_list_with_random_pointer.cpp\\Solution\\copyRandomList(RandomListNode*)"
    },
    {
        "f": [],
        "fm": "RandomListNode* copy_random_list(RandomListNode *head,\r       map<RandomListNode*, RandomListNode*> &copied) {\r     if (NULL == head) {\r       return NULL;\r     }\r     else if (copied.find(head) != copied.end()) {\r       return copied[head];\r     }\r \r     RandomListNode *node = new RandomListNode(head->label);\r \r     copied[head] = node;\r     node->next = copy_random_list(head->next, copied);\r     node->random = copy_random_list(head->random, copied);\r \r     return node;\r   }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_copy_random_list_RandomListNodemul_map_RandomListNodemul_RandomListNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_copy_random_list_RandomListNodemul_map_RandomListNodemul_RandomListNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\copy_list_with_random_pointer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<RandomListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubClassDataNode head */\n/* ConstructorDataNode RandomListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-1435995310;\nAKA_mark(\"Calling: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\RandomListNode\\\\RandomListNode(int)|ROOT\\\\copy_list_with_random_pointer.cpp\\\\copy_random_list(RandomListNode*,map<RandomListNode*,RandomListNode*>&)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\RandomListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::RandomListNode(head0_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_head_0).label=1862528383;\n/* PointerStructureDataNode next */\nstd::vector<RandomListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode RandomListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=-1884659241;\nAKA_mark(\"Calling: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\RandomListNode\\\\RandomListNode(int)|ROOT\\\\copy_list_with_random_pointer.cpp\\\\copy_random_list(RandomListNode*,map<RandomListNode*,RandomListNode*>&)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\RandomListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::RandomListNode(head0_next0_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).label=749788146;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\n/* PointerStructureDataNode random */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).random;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubClassDataNode next */\n/* ConstructorDataNode RandomListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=-253061605;\nAKA_mark(\"Calling: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\RandomListNode\\\\RandomListNode(int)|ROOT\\\\copy_list_with_random_pointer.cpp\\\\copy_random_list(RandomListNode*,map<RandomListNode*,RandomListNode*>&)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\RandomListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::RandomListNode(head0_next1_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).label=-713807813;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\n/* PointerStructureDataNode random */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).random;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n/* SubClassDataNode next */\n/* ConstructorDataNode RandomListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next2_x=-264708262;\nAKA_mark(\"Calling: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\RandomListNode\\\\RandomListNode(int)|ROOT\\\\copy_list_with_random_pointer.cpp\\\\copy_random_list(RandomListNode*,map<RandomListNode*,RandomListNode*>&)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[2]\\\\next\\\\RandomListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_2 = new ::RandomListNode(head0_next2_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_head_0_DOT_next_2).label=55643227;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_2).next;\n/* PointerStructureDataNode random */\n(*AKA_VECTOR_INIT_head_0_DOT_next_2).random;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_2);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n/* PointerStructureDataNode random */\nstd::vector<RandomListNode*> AKA_VECTOR_INIT_head_0_DOT_random;\n/* SubClassDataNode random */\n/* ConstructorDataNode RandomListNode(int) */\n/* NormalNumberDataNode x */\nint head0_random0_x=1389966441;\nAKA_mark(\"Calling: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\RandomListNode\\\\RandomListNode(int)|ROOT\\\\copy_list_with_random_pointer.cpp\\\\copy_random_list(RandomListNode*,map<RandomListNode*,RandomListNode*>&)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\random\\\\random[0]\\\\random\\\\RandomListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_random_0 = new ::RandomListNode(head0_random0_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_head_0_DOT_random_0).label=-39267847;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_random_0).next;\n/* PointerStructureDataNode random */\n(*AKA_VECTOR_INIT_head_0_DOT_random_0).random;\nAKA_VECTOR_INIT_head_0_DOT_random.push_back(AKA_VECTOR_INIT_head_0_DOT_random_0);\n(*AKA_VECTOR_INIT_head_0).random = AKA_VECTOR_INIT_head_0_DOT_random[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nRandomListNode* head = AKA_VECTOR_INIT_head[0];\nmap<RandomListNode*, RandomListNode*> copied;\nRandomListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* MapDataNode copied */\nstd::pair<RandomListNode*, RandomListNode*> copied_element0;\n/* PointerStructureDataNode first */\nstd::vector<RandomListNode*> AKA_VECTOR_INIT_copied_element0_DOT_first;\n/* SubClassDataNode first[0] */\n/* ConstructorDataNode RandomListNode(int) */\n/* NormalNumberDataNode x */\nint copied_element0_first0_x=707736085;\nAKA_mark(\"Calling: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\RandomListNode\\\\RandomListNode(int)|ROOT\\\\copy_list_with_random_pointer.cpp\\\\copy_random_list(RandomListNode*,map<RandomListNode*,RandomListNode*>&)\\\\copied\\\\element #0\\\\first\\\\first[0]\\\\first[0]\\\\RandomListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_copied_element0_DOT_first_0 = new ::RandomListNode(copied_element0_first0_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_copied_element0_DOT_first_0).label=-1105984254;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_copied_element0_DOT_first_0).next;\n/* PointerStructureDataNode random */\n(*AKA_VECTOR_INIT_copied_element0_DOT_first_0).random;\nAKA_VECTOR_INIT_copied_element0_DOT_first.push_back(AKA_VECTOR_INIT_copied_element0_DOT_first_0);\n/* SubClassDataNode first[1] */\n/* ConstructorDataNode RandomListNode(int) */\n/* NormalNumberDataNode x */\nint copied_element0_first1_x=1876145787;\nAKA_mark(\"Calling: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\RandomListNode\\\\RandomListNode(int)|ROOT\\\\copy_list_with_random_pointer.cpp\\\\copy_random_list(RandomListNode*,map<RandomListNode*,RandomListNode*>&)\\\\copied\\\\element #0\\\\first\\\\first[1]\\\\first[1]\\\\RandomListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_copied_element0_DOT_first_1 = new ::RandomListNode(copied_element0_first1_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_copied_element0_DOT_first_1).label=-327369623;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_copied_element0_DOT_first_1).next;\n/* PointerStructureDataNode random */\n(*AKA_VECTOR_INIT_copied_element0_DOT_first_1).random;\nAKA_VECTOR_INIT_copied_element0_DOT_first.push_back(AKA_VECTOR_INIT_copied_element0_DOT_first_1);\n/* SubClassDataNode first[2] */\n/* ConstructorDataNode RandomListNode(int) */\n/* NormalNumberDataNode x */\nint copied_element0_first2_x=1505352456;\nAKA_mark(\"Calling: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\RandomListNode\\\\RandomListNode(int)|ROOT\\\\copy_list_with_random_pointer.cpp\\\\copy_random_list(RandomListNode*,map<RandomListNode*,RandomListNode*>&)\\\\copied\\\\element #0\\\\first\\\\first[2]\\\\first[2]\\\\RandomListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_copied_element0_DOT_first_2 = new ::RandomListNode(copied_element0_first2_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_copied_element0_DOT_first_2).label=1700276221;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_copied_element0_DOT_first_2).next;\n/* PointerStructureDataNode random */\n(*AKA_VECTOR_INIT_copied_element0_DOT_first_2).random;\nAKA_VECTOR_INIT_copied_element0_DOT_first.push_back(AKA_VECTOR_INIT_copied_element0_DOT_first_2);\ncopied_element0.first = AKA_VECTOR_INIT_copied_element0_DOT_first[0];\n/* PointerStructureDataNode second */\nstd::vector<RandomListNode*> AKA_VECTOR_INIT_copied_element0_DOT_second;\n/* SubClassDataNode second[0] */\n/* ConstructorDataNode RandomListNode(int) */\n/* NormalNumberDataNode x */\nint copied_element0_second0_x=479564408;\nAKA_mark(\"Calling: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\RandomListNode\\\\RandomListNode(int)|ROOT\\\\copy_list_with_random_pointer.cpp\\\\copy_random_list(RandomListNode*,map<RandomListNode*,RandomListNode*>&)\\\\copied\\\\element #0\\\\second\\\\second[0]\\\\second[0]\\\\RandomListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_copied_element0_DOT_second_0 = new ::RandomListNode(copied_element0_second0_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_copied_element0_DOT_second_0).label=1637302633;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_copied_element0_DOT_second_0).next;\n/* PointerStructureDataNode random */\n(*AKA_VECTOR_INIT_copied_element0_DOT_second_0).random;\nAKA_VECTOR_INIT_copied_element0_DOT_second.push_back(AKA_VECTOR_INIT_copied_element0_DOT_second_0);\n/* SubClassDataNode second[1] */\n/* ConstructorDataNode RandomListNode(int) */\n/* NormalNumberDataNode x */\nint copied_element0_second1_x=-475336485;\nAKA_mark(\"Calling: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\RandomListNode\\\\RandomListNode(int)|ROOT\\\\copy_list_with_random_pointer.cpp\\\\copy_random_list(RandomListNode*,map<RandomListNode*,RandomListNode*>&)\\\\copied\\\\element #0\\\\second\\\\second[1]\\\\second[1]\\\\RandomListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_copied_element0_DOT_second_1 = new ::RandomListNode(copied_element0_second1_x);\n/* NormalNumberDataNode label */\n(*AKA_VECTOR_INIT_copied_element0_DOT_second_1).label=-1172560045;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_copied_element0_DOT_second_1).next;\n/* PointerStructureDataNode random */\n(*AKA_VECTOR_INIT_copied_element0_DOT_second_1).random;\nAKA_VECTOR_INIT_copied_element0_DOT_second.push_back(AKA_VECTOR_INIT_copied_element0_DOT_second_1);\ncopied_element0.second = AKA_VECTOR_INIT_copied_element0_DOT_second[0];\ncopied.insert(copied_element0);\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_copy_random_list_RandomListNodemul_map_RandomListNodemul_RandomListNodemul_random_0\");RandomListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->copy_random_list(head,copied);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\build fail\\\\copy_list_with_random_pointer.cpp\\\\Solution\\\\copy_random_list(RandomListNode*,map<RandomListNode*,RandomListNode*>&)\");\n\n\nmap<RandomListNode*, RandomListNode*> EXPECTED_copied;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\construct_binary_tree_from_inorder_and_postorder_traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> inorder;\n\n\nint in_start=5;\n\n\nint in_end=9;\nvector<int> postorder;\n\n\nint post_start=-896389569;\n\n\nint post_end=1538342685;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode inorder */\nint inorder_element0=269118745;\ninorder.push_back(inorder_element0);\nint inorder_element1=1069454874;\ninorder.push_back(inorder_element1);\nint inorder_element2=1102929419;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode in_start */\n/* NormalNumberDataNode in_end */\n/* VectorDataNode postorder */\nint postorder_element0=2134115492;\npostorder.push_back(postorder_element0);\nint postorder_element1=-1523871467;\npostorder.push_back(postorder_element1);\n/* NormalNumberDataNode post_start */\n/* NormalNumberDataNode post_end */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r   RandomListNode *copyRandomList(RandomListNode *head) {\r     map<RandomListNode*, RandomListNode*> copied;\r \r     return copy_random_list(head, copied);\r   }\r \r protected:\r   RandomListNode* copy_random_list(RandomListNode *head,\r       map<RandomListNode*, RandomListNode*> &copied) {\r     if (NULL == head) {\r       return NULL;\r     }\r     else if (copied.find(head) != copied.end()) {\r       return copied[head];\r     }\r \r     RandomListNode *node = new RandomListNode(head->label);\r \r     copied[head] = node;\r     node->next = copy_random_list(head->next, copied);\r     node->random = copy_random_list(head->random, copied);\r \r     return node;\r   }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Lab\\test-cpp\\leetcode\\prj-data\\yingl_LeetCodeInCpp\\build fail\\copy_list_with_random_pointer.cpp\\Solution\\copy_random_list(RandomListNode*,map<RandomListNode*,RandomListNode*>&)"
    }
]
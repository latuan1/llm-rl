[
    {
        "f": [],
        "fm": "ListNode *removeNthFromEnd(ListNode *head, int n) {\r     ListNode *list_1 = head;\r     ListNode *list_2 = head;\r     ListNode *prev = NULL;\r \r     // 请仔细阅读题目\r     for (int i = 1; i < n; ++i) {\r       list_2 = list_2->next;\r     }\r \r     while (true) {\r       // list_2现在位于最后一个元素\r       if (NULL == list_2->next) {\r         break;\r       }\r \r       prev = list_1;  // 记住前一个元素的位置\r       list_1 = list_1->next;\r       list_2 = list_2->next;\r     }\r \r     // 执行删除操作\r     if (prev != NULL) {\r       prev->next = list_1->next;\r \r       return head;\r     }\r     else {\r       // 如果prev是NULL说明head就是要删除的元素\r       return list_1->next;\r     }\r   }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_removeNthFromEnd_ListNodemul_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_removeNthFromEnd_ListNodemul_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nListNode* head = nullptr;\n\n\nint n=0;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode n */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeNthFromEnd_ListNodemul_int_directed_0\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeNthFromEnd(head,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\Solution\\\\removeNthFromEnd(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left = nullptr;\n/* PointerStructureDataNode right */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubClassDataNode right */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeLinkNode(root0_right0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).next = nullptr;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left = nullptr;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_removeNthFromEnd_ListNodemul_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_removeNthFromEnd_ListNodemul_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-822404188;\nAKA_mark(\"Calling: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\removeNthFromEnd(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=624050363;\nAKA_mark(\"Calling: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\removeNthFromEnd(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\removeNthFromEnd(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next2_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\removeNthFromEnd(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_2 = new ::ListNode(head0_next2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_2).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_2);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=-904272616;\nAKA_mark(\"Calling: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\removeNthFromEnd(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nint n=1;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode n */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeNthFromEnd_ListNodemul_int_random_3\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeNthFromEnd(head,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\Solution\\\\removeNthFromEnd(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1068050325;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-293907544;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeLinkNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeLinkNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeLinkNode(root0_left2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=31038526;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeLinkNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-1170120887;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeLinkNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_2).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {},
                "td": "void AKA_TEST_Solution_removeNthFromEnd_ListNodemul_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_removeNthFromEnd_ListNodemul_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nListNode* head;\n\n\nint n;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode n */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeNthFromEnd_ListNodemul_int_directed_1\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeNthFromEnd(head,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\Solution\\\\removeNthFromEnd(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left = nullptr;\n/* PointerStructureDataNode right */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubClassDataNode right */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeLinkNode(root0_right0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).next = nullptr;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left = nullptr;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {},
                "td": "void AKA_TEST_Solution_removeNthFromEnd_ListNodemul_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_removeNthFromEnd_ListNodemul_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-1204953567;\nAKA_mark(\"Calling: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\removeNthFromEnd(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=721342620;\nAKA_mark(\"Calling: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\removeNthFromEnd(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\removeNthFromEnd(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next2_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\removeNthFromEnd(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_2 = new ::ListNode(head0_next2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_2).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_2);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1235212606;\nAKA_mark(\"Calling: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\remove_nth_node_from_end_of_list.cpp\\\\removeNthFromEnd(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nint n=2;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode n */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeNthFromEnd_ListNodemul_int_random_1\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeNthFromEnd(head,n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\remove_nth_node_from_end_of_list.cpp\\\\Solution\\\\removeNthFromEnd(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1068050325;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-293907544;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeLinkNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeLinkNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeLinkNode(root0_left2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=31038526;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeLinkNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-1170120887;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeLinkNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_2).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r   ListNode *removeNthFromEnd(ListNode *head, int n) {\r     ListNode *list_1 = head;\r     ListNode *list_2 = head;\r     ListNode *prev = NULL;\r \r     // 请仔细阅读题目\r     for (int i = 1; i < n; ++i) {\r       list_2 = list_2->next;\r     }\r \r     while (true) {\r       // list_2现在位于最后一个元素\r       if (NULL == list_2->next) {\r         break;\r       }\r \r       prev = list_1;  // 记住前一个元素的位置\r       list_1 = list_1->next;\r       list_2 = list_2->next;\r     }\r \r     // 执行删除操作\r     if (prev != NULL) {\r       prev->next = list_1->next;\r \r       return head;\r     }\r     else {\r       // 如果prev是NULL说明head就是要删除的元素\r       return list_1->next;\r     }\r   }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Lab\\test-cpp\\leetcode\\prj-data\\yingl_LeetCodeInCpp\\com-20\\remove_nth_node_from_end_of_list.cpp\\Solution\\removeNthFromEnd(ListNode*,int)"
    }
]
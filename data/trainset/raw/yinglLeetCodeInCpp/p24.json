[
    {
        "f": [],
        "fm": "void connect(TreeLinkNode *root) {\r     if (NULL == root) {\r       return;\r     }\r \r     if (root->left != NULL) {\r       root->left->next = root->right;\r     }\r \r     if (root->right != NULL) {\r       root->right->next = (root->next != NULL) ? root->next->left : NULL;\r     }\r \r     connect(root->left);\r     connect(root->right);\r   }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_connect_TreeLinkNodemul_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_connect_TreeLinkNodemul_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left = nullptr;\n/* PointerStructureDataNode right */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubClassDataNode right */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeLinkNode(root0_right0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).next = nullptr;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left = nullptr;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_connect_TreeLinkNodemul_directed_0\");AKA_INSTANCE___Solution->connect(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\Solution\\\\connect(TreeLinkNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left = nullptr;\n/* PointerStructureDataNode right */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubClassDataNode right */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeLinkNode(root0_right0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).next = nullptr;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left = nullptr;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_connect_TreeLinkNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_connect_TreeLinkNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1068050325;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-293907544;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeLinkNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeLinkNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeLinkNode(root0_left2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=31038526;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeLinkNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-1170120887;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeLinkNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_2).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_connect_TreeLinkNodemul_random_2\");AKA_INSTANCE___Solution->connect(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\Solution\\\\connect(TreeLinkNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1068050325;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-293907544;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeLinkNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeLinkNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeLinkNode(root0_left2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=31038526;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeLinkNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-1170120887;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeLinkNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_2).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {},
                "td": "void AKA_TEST_Solution_connect_TreeLinkNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_connect_TreeLinkNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1887278208;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=-1164361509;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[1]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_1 = new ::TreeLinkNode(root0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_1).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_1);\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next2_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[2]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_2 = new ::TreeLinkNode(root0_next2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_2).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_2);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1810502741;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeLinkNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-869293675;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeLinkNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_2).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_connect_TreeLinkNodemul_random_4\");AKA_INSTANCE___Solution->connect(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\Solution\\\\connect(TreeLinkNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left = nullptr;\n/* PointerStructureDataNode right */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubClassDataNode right */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeLinkNode(root0_right0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).next = nullptr;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left = nullptr;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r   void connect(TreeLinkNode *root) {\r     if (NULL == root) {\r       return;\r     }\r \r     if (root->left != NULL) {\r       root->left->next = root->right;\r     }\r \r     if (root->right != NULL) {\r       root->right->next = (root->next != NULL) ? root->next->left : NULL;\r     }\r \r     connect(root->left);\r     connect(root->right);\r   }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Lab\\test-cpp\\leetcode\\prj-data\\yingl_LeetCodeInCpp\\com-20\\populating_next_right_pointers_in_each_node.cpp\\Solution\\connect(TreeLinkNode*)"
    },
    {
        "f": [],
        "fm": "void connect(TreeLinkNode *root) {\r     if (NULL == root) {\r       return;\r     }\r \r     TreeLinkNode *node = root->next;\r     TreeLinkNode *next = NULL;\r \r     while (node != NULL) {\r       if ((node->left != NULL) || (node->right != NULL)) {\r         next = (node->left != NULL) ? node->left : node->right;\r         break;\r       }\r       else {\r         node = node->next;\r       }\r     }\r \r     if (root->left != NULL) {\r       root->left->next = (root->right != NULL) ? root->right : next;\r     }\r \r     if (root->right != NULL) {\r       root->right->next = next;\r     }\r \r     // 必须先右子树，不然左子树最右节点的next会不知道指向哪里。\r     connect(root->right);\r     connect(root->left);\r   }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_connect_TreeLinkNodemul_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_connect_TreeLinkNodemul_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left = nullptr;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next = nullptr;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_connect_TreeLinkNodemul_directed_1\");AKA_INSTANCE___Solution->connect(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\Solution\\\\connect(TreeLinkNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left = nullptr;\n/* PointerStructureDataNode right */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubClassDataNode right */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeLinkNode(root0_right0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).next = nullptr;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left = nullptr;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_connect_TreeLinkNodemul_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_connect_TreeLinkNodemul_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left = nullptr;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right = nullptr;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next = nullptr;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_connect_TreeLinkNodemul_directed_2\");AKA_INSTANCE___Solution->connect(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\Solution\\\\connect(TreeLinkNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1068050325;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-293907544;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeLinkNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeLinkNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeLinkNode(root0_left2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=31038526;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeLinkNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-1170120887;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeLinkNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_2).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {},
                "td": "void AKA_TEST_Solution_connect_TreeLinkNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_connect_TreeLinkNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=511321293;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubClassDataNode right */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1394358179;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeLinkNode(root0_right0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).next;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubClassDataNode right */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeLinkNode(root0_right1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).next;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubClassDataNode right */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeLinkNode(root0_right2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).next;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1532144999;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeLinkNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_connect_TreeLinkNodemul_random_3\");AKA_INSTANCE___Solution->connect(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\Solution\\\\connect(TreeLinkNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left = nullptr;\n/* PointerStructureDataNode right */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubClassDataNode right */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeLinkNode(root0_right0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).next = nullptr;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left = nullptr;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {},
                "td": "void AKA_TEST_Solution_connect_TreeLinkNodemul_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_connect_TreeLinkNodemul_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right = nullptr;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next = nullptr;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_connect_TreeLinkNodemul_directed_3\");AKA_INSTANCE___Solution->connect(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\Solution\\\\connect(TreeLinkNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1068050325;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-293907544;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeLinkNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeLinkNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeLinkNode(root0_left2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=31038526;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeLinkNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-1170120887;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeLinkNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_2).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {},
                "td": "void AKA_TEST_Solution_connect_TreeLinkNodemul_random_1(void) {\n{\nAKA_test_case_name=\"Solution_connect_TreeLinkNodemul_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=217781382;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-45649649;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeLinkNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubClassDataNode left */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeLinkNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).next;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1254710851;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeLinkNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_connect_TreeLinkNodemul_random_1\");AKA_INSTANCE___Solution->connect(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\Solution\\\\connect(TreeLinkNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1887278208;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=-1164361509;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[1]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_1 = new ::TreeLinkNode(root0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_1).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_1);\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next2_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[2]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_2 = new ::TreeLinkNode(root0_next2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_2).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_2);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1810502741;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeLinkNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-869293675;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeLinkNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_2).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 5,
                "dt": {},
                "td": "void AKA_TEST_Solution_connect_TreeLinkNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_connect_TreeLinkNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1887278208;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=-1164361509;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next1_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[1]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_1 = new ::TreeLinkNode(root0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_1).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_1);\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next2_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[2]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_2 = new ::TreeLinkNode(root0_next2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_2).next;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_2);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1810502741;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeLinkNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_1).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-869293675;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeLinkNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_2).next;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_connect_TreeLinkNodemul_random_4\");AKA_INSTANCE___Solution->connect(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\com-20\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\Solution\\\\connect(TreeLinkNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubClassDataNode root */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeLinkNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n/* PointerStructureDataNode next */\nstd::vector<TreeLinkNode*> AKA_VECTOR_INIT_root_0_DOT_next;\n/* SubClassDataNode next */\n/* ConstructorDataNode TreeLinkNode(int) */\n/* NormalNumberDataNode x */\nint root0_next0_x=0;\nAKA_mark(\"Calling: .\\\\com-20\\\\populating_next_right_pointers_in_each_node.cpp\\\\TreeLinkNode\\\\TreeLinkNode(int)|ROOT\\\\populating_next_right_pointers_in_each_node_ii.cpp\\\\connect(TreeLinkNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\next\\\\next[0]\\\\next\\\\TreeLinkNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_next_0 = new ::TreeLinkNode(root0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).left = nullptr;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).right;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_root_0_DOT_next_0).next = nullptr;\nAKA_VECTOR_INIT_root_0_DOT_next.push_back(AKA_VECTOR_INIT_root_0_DOT_next_0);\n(*AKA_VECTOR_INIT_root_0).next = AKA_VECTOR_INIT_root_0_DOT_next[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeLinkNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r   void connect(TreeLinkNode *root) {\r     if (NULL == root) {\r       return;\r     }\r \r     TreeLinkNode *node = root->next;\r     TreeLinkNode *next = NULL;\r \r     while (node != NULL) {\r       if ((node->left != NULL) || (node->right != NULL)) {\r         next = (node->left != NULL) ? node->left : node->right;\r         break;\r       }\r       else {\r         node = node->next;\r       }\r     }\r \r     if (root->left != NULL) {\r       root->left->next = (root->right != NULL) ? root->right : next;\r     }\r \r     if (root->right != NULL) {\r       root->right->next = next;\r     }\r \r     // 必须先右子树，不然左子树最右节点的next会不知道指向哪里。\r     connect(root->right);\r     connect(root->left);\r   }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Lab\\test-cpp\\leetcode\\prj-data\\yingl_LeetCodeInCpp\\com-20\\populating_next_right_pointers_in_each_node_ii.cpp\\Solution\\connect(TreeLinkNode*)"
    }
]
[
    {
        "f": [],
        "fm": "int loop3(int a) {\r \ta=0;\r \twhile (a<100) {\r \t\ta++;\r \t}\r \treturn a;\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_loop3_int_random_3(void) {\n{\nAKA_test_case_name=\"loop3_int_random_3\";\n\n// set up\n;\n\n\n\nint a=6;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test loop3_int_random_3\");int AKA_ACTUAL_OUTPUT=loop3(a);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\loop.cpp\\\\loop3(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=6;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\loop.cpp\\loop3(int)"
    },
    {
        "f": [],
        "fm": "int loop2(int a) {\r \twhile (a<100) {\r \t\ta++;\r \t}\r \treturn a;\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_loop2_int_random_0(void) {\n{\nAKA_test_case_name=\"loop2_int_random_0\";\n\n// set up\n;\n\n\n\nint a=9;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test loop2_int_random_0\");int AKA_ACTUAL_OUTPUT=loop2(a);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\loop.cpp\\\\loop2(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=6;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\loop.cpp\\loop2(int)"
    },
    {
        "f": [],
        "fm": "int loop4(int a) {\r \ta=0;\r \twhile (a<-100) {\r \t\ta--;\r \t}\r \treturn a;\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_loop4_int_random_3(void) {\n{\nAKA_test_case_name=\"loop4_int_random_3\";\n\n// set up\n;\n\n\n\nint a=4;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test loop4_int_random_3\");int AKA_ACTUAL_OUTPUT=loop4(a);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\loop.cpp\\\\loop4(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=6;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\loop.cpp\\loop4(int)"
    },
    {
        "f": [],
        "fm": "int loop6(int a) {\r \ta=0;\r \twhile (a<=100) {\r \t\ta++;\r \t}\r \treturn a;\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_loop6_int_random_0(void) {\n{\nAKA_test_case_name=\"loop6_int_random_0\";\n\n// set up\n;\n\n\n\nint a=8;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test loop6_int_random_0\");int AKA_ACTUAL_OUTPUT=loop6(a);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\loop.cpp\\\\loop6(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=6;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\loop.cpp\\loop6(int)"
    },
    {
        "f": [],
        "fm": "int loop5(int a) {\r \twhile (a<=100) {\r \t\ta++;\r \t}\r \treturn a;\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_loop5_int_random_3(void) {\n{\nAKA_test_case_name=\"loop5_int_random_3\";\n\n// set up\n;\n\n\n\nint a=2;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test loop5_int_random_3\");int AKA_ACTUAL_OUTPUT=loop5(a);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\loop.cpp\\\\loop5(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=6;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\loop.cpp\\loop5(int)"
    },
    {
        "f": [],
        "fm": "int loop7(int a) {\r \ta=0;\r \twhile (a<=-100) {\r \t\ta--;\r \t}\r \treturn a;\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_loop7_int_random_1(void) {\n{\nAKA_test_case_name=\"loop7_int_random_1\";\n\n// set up\n;\n\n\n\nint a=7;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test loop7_int_random_1\");int AKA_ACTUAL_OUTPUT=loop7(a);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\loop.cpp\\\\loop7(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=6;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\loop.cpp\\loop7(int)"
    },
    {
        "f": [],
        "fm": "void loop9(int t1[3], int t2[3], int t3[6]) {\r \tint i = 0, j = 0, k = 0 ;\r \twhile (i < 3 && j < 3) {\r \t\tif (t1[i] < t2[j]) {\r \t\t\tt3[k] = t1[i];\r \t\t\ti++;\r \t\t} else {\r \t\t\tt3[k] = t2[j];\r \t\t\tj++;\r \t\t}\r \t\tk++ ;\r \t}\r \twhile (i < 3) {\r \t\tt3[k] = t1[i];\r \t\ti++;\r \t\tk++;\r \t}\r \twhile (j < 3) {\r \t\tt3[k] = t2[j];\r \t\tj++;\r \t\tk++;\r \t}\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_loop9_int_3_int_3_int_6_random_1(void) {\n{\nAKA_test_case_name=\"loop9_int_3_int_3_int_6_random_1\";\n\n// set up\n;\n\nint t1[3];;\nint t2[3];;\nint t3[6];;\n\n/* RootDataNode STATIC */\n/* OneDimensionNumberDataNode t1 */\n/* NormalNumberDataNode t1[0] */\nt1[0]=-1319471068;\n/* NormalNumberDataNode t1[1] */\nt1[1]=-570644739;\n/* NormalNumberDataNode t1[2] */\nt1[2]=1477211408;\n/* OneDimensionNumberDataNode t2 */\n/* NormalNumberDataNode t2[0] */\nt2[0]=-1726284981;\n/* NormalNumberDataNode t2[1] */\nt2[1]=338001477;\n/* NormalNumberDataNode t2[2] */\nt2[2]=442856381;\n/* OneDimensionNumberDataNode t3 */\n/* NormalNumberDataNode t3[0] */\nt3[0]=-308164758;\n/* NormalNumberDataNode t3[1] */\nt3[1]=-1500821043;\n/* NormalNumberDataNode t3[2] */\nt3[2]=-1967383498;\n/* NormalNumberDataNode t3[3] */\nt3[3]=-1125102460;\n/* NormalNumberDataNode t3[4] */\nt3[4]=-2043423012;\n/* NormalNumberDataNode t3[5] */\nt3[5]=1659492656;\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test loop9_int_3_int_3_int_6_random_1\");loop9(t1,t2,t3);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\loop.cpp\\\\loop9(int[3],int[3],int[6])\");\n\n/* error assertion */\n\nint EXPECTED_t1[3];;\n/* NormalNumberDataNode t1[0] */\n/* t1[0] : null value -> no code */\n/* NormalNumberDataNode t1[1] */\n/* t1[1] : null value -> no code */\n/* NormalNumberDataNode t1[2] */\n/* t1[2] : null value -> no code */\n\n\n\nint EXPECTED_t2[3];;\n/* NormalNumberDataNode t2[0] */\n/* t2[0] : null value -> no code */\n/* NormalNumberDataNode t2[1] */\n/* t2[1] : null value -> no code */\n/* NormalNumberDataNode t2[2] */\n/* t2[2] : null value -> no code */\n\n\n\nint EXPECTED_t3[6];;\n/* NormalNumberDataNode t3[0] */\n/* t3[0] : null value -> no code */\n/* NormalNumberDataNode t3[1] */\n/* t3[1] : null value -> no code */\n/* NormalNumberDataNode t3[2] */\n/* t3[2] : null value -> no code */\n/* NormalNumberDataNode t3[3] */\n/* t3[3] : null value -> no code */\n/* NormalNumberDataNode t3[4] */\n/* t3[4] : null value -> no code */\n/* NormalNumberDataNode t3[5] */\n/* t3[5] : null value -> no code */\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=6;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_loop9_int_3_int_3_int_6_random_2(void) {\n{\nAKA_test_case_name=\"loop9_int_3_int_3_int_6_random_2\";\n\n// set up\n;\n\nint t1[3];;\nint t2[3];;\nint t3[6];;\n\n/* RootDataNode STATIC */\n/* OneDimensionNumberDataNode t1 */\n/* NormalNumberDataNode t1[0] */\nt1[0]=-1176385082;\n/* NormalNumberDataNode t1[1] */\nt1[1]=1739930594;\n/* NormalNumberDataNode t1[2] */\nt1[2]=-2144338575;\n/* OneDimensionNumberDataNode t2 */\n/* NormalNumberDataNode t2[0] */\nt2[0]=1773431022;\n/* NormalNumberDataNode t2[1] */\nt2[1]=228654596;\n/* NormalNumberDataNode t2[2] */\nt2[2]=-1584547482;\n/* OneDimensionNumberDataNode t3 */\n/* NormalNumberDataNode t3[0] */\nt3[0]=61992704;\n/* NormalNumberDataNode t3[1] */\nt3[1]=1172782263;\n/* NormalNumberDataNode t3[2] */\nt3[2]=-1348346951;\n/* NormalNumberDataNode t3[3] */\nt3[3]=-1415629575;\n/* NormalNumberDataNode t3[4] */\nt3[4]=-892948489;\n/* NormalNumberDataNode t3[5] */\nt3[5]=-261689557;\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test loop9_int_3_int_3_int_6_random_2\");loop9(t1,t2,t3);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\loop.cpp\\\\loop9(int[3],int[3],int[6])\");\n\n/* error assertion */\n\nint EXPECTED_t1[3];;\n/* NormalNumberDataNode t1[0] */\n/* t1[0] : null value -> no code */\n/* NormalNumberDataNode t1[1] */\n/* t1[1] : null value -> no code */\n/* NormalNumberDataNode t1[2] */\n/* t1[2] : null value -> no code */\n\n\n\nint EXPECTED_t2[3];;\n/* NormalNumberDataNode t2[0] */\n/* t2[0] : null value -> no code */\n/* NormalNumberDataNode t2[1] */\n/* t2[1] : null value -> no code */\n/* NormalNumberDataNode t2[2] */\n/* t2[2] : null value -> no code */\n\n\n\nint EXPECTED_t3[6];;\n/* NormalNumberDataNode t3[0] */\n/* t3[0] : null value -> no code */\n/* NormalNumberDataNode t3[1] */\n/* t3[1] : null value -> no code */\n/* NormalNumberDataNode t3[2] */\n/* t3[2] : null value -> no code */\n/* NormalNumberDataNode t3[3] */\n/* t3[3] : null value -> no code */\n/* NormalNumberDataNode t3[4] */\n/* t3[4] : null value -> no code */\n/* NormalNumberDataNode t3[5] */\n/* t3[5] : null value -> no code */\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=9;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\loop.cpp\\loop9(int[3],int[3],int[6])"
    }
]
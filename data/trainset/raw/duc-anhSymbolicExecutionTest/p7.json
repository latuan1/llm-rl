[
    {
        "f": [],
        "fm": "int nsTest4::func1(int a){\r \tif (a>0)\r \t\treturn 1;\r \telse\r \t\treturn 0;\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_nsTest4_func1_int_random_0(void) {\n{\nAKA_test_case_name=\"nsTest4_func1_int_random_0\";\n\n// set up\n;\n\n\n\nint a=-1213029682;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test nsTest4_func1_int_random_0\");int AKA_ACTUAL_OUTPUT=nsTest4::nsTest4::func1(a);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\nsTest4.cpp\\\\nsTest4::func1(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=-1756772476;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\nsTest4.cpp\\nsTest4::func1(int)"
    },
    {
        "f": [],
        "fm": "int func2(int a, int b){\r \t\tif (a > b)\r \t\t\treturn 1;\r \t\telse\r \t\t\treturn 0;\r \t}",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_func2_int_int_random_3(void) {\n{\nAKA_test_case_name=\"func2_int_int_random_3\";\n\n// set up\n;\n\n\n\nint a=486048768;\n\n\nint b=1805734078;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode b */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test func2_int_int_random_3\");int AKA_ACTUAL_OUTPUT=nsTest4::func2(a,b);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\nsTest4.cpp\\\\nsTest4\\\\func2(int,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=-1756772476;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_func2_int_int_random_1(void) {\n{\nAKA_test_case_name=\"func2_int_int_random_1\";\n\n// set up\n;\n\n\n\nint a=-331388833;\n\n\nint b=-387619418;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode b */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test func2_int_int_random_1\");int AKA_ACTUAL_OUTPUT=nsTest4::func2(a,b);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\nsTest4.cpp\\\\nsTest4\\\\func2(int,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=1218881918;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\nsTest4.cpp\\nsTest4\\func2(int,int)"
    },
    {
        "f": [],
        "fm": "int test1(int a){\r \t\tint x = nsTest4::func1(a);\r \t\treturn x;\r \t}",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_test1_int_random_4(void) {\n{\nAKA_test_case_name=\"test1_int_random_4\";\n\n// set up\n;\n\n\n\nint a=559511316;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test test1_int_random_4\");int AKA_ACTUAL_OUTPUT=nsTest5::test1(a);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\nsTest5.cpp\\\\nsTest5\\\\test1(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=-1756772476;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\nsTest5.cpp\\nsTest5\\test1(int)"
    },
    {
        "f": [],
        "fm": "int test2(int a){\r \t\tusing namespace nsTest4;\r \t\tint x = func1(a);\r \t\treturn x;\r \t}",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_test2_int_random_2(void) {\n{\nAKA_test_case_name=\"test2_int_random_2\";\n\n// set up\n;\n\n\n\nint a=142421984;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test test2_int_random_2\");int AKA_ACTUAL_OUTPUT=nsTest5::test2(a);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\nsTest5.cpp\\\\nsTest5\\\\test2(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=-1756772476;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\nsTest5.cpp\\nsTest5\\test2(int)"
    },
    {
        "f": [],
        "fm": "int func3(int a){\r \t\treturn func1(a);\r \t}",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_func3_int_random_3(void) {\n{\nAKA_test_case_name=\"func3_int_random_3\";\n\n// set up\n;\n\n\n\nint a=612423664;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test func3_int_random_3\");int AKA_ACTUAL_OUTPUT=nsTest4::func3(a);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\nsTest6.cpp\\\\nsTest4\\\\func3(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=-1756772476;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\nsTest6.cpp\\nsTest4\\func3(int)"
    },
    {
        "f": [],
        "fm": "int func4(XXX xx){\r \t\treturn func1(xx.getYY());\r \t}",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_func4_XXX_random_0(void) {\n{\nAKA_test_case_name=\"func4_XXX_random_0\";\n\n// set up\n;\n\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* ClassDataNode xx */\n/* SubClassDataNode xx */\n/* ConstructorDataNode XXX() */\nAKA_mark(\"Calling: \\\\XXX()|ROOT\\\\nsTest7.cpp\\\\func4(XXX)\\\\xx\\\\xx\\\\XXX()\");AKA_fCall++;nsTest4::XXX xx = nsTest4::XXX();\n/* NormalNumberDataNode yy */\n/* yy : null value -> no code */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test func4_XXX_random_0\");int AKA_ACTUAL_OUTPUT=nsTest4::func4(xx);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\nsTest7.cpp\\\\nsTest4\\\\func4(XXX)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=-1756772476;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\nsTest7.cpp\\nsTest4\\func4(XXX)"
    },
    {
        "f": [],
        "fm": "int func5(::XXX xx){\r \t\treturn func1(xx.getXX());\r \t}",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_func5_XXX_random_0(void) {\n{\nAKA_test_case_name=\"func5_XXX_random_0\";\n\n// set up\n;\n\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* ClassDataNode xx */\n/* SubClassDataNode xx */\n/* ConstructorDataNode XXX() */\nAKA_mark(\"Calling: \\\\XXX()|ROOT\\\\nsTest7.cpp\\\\func5(XXX)\\\\xx\\\\xx\\\\XXX()\");AKA_fCall++;::XXX xx = ::XXX();\n/* NormalNumberDataNode xx */\n/* xx : null value -> no code */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test func5_XXX_random_0\");int AKA_ACTUAL_OUTPUT=nsTest4::func5(xx);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\nsTest7.cpp\\\\nsTest4\\\\func5(XXX)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=-1756772476;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\nsTest7.cpp\\nsTest4\\func5(XXX)"
    },
    {
        "f": [],
        "fm": "int testDate0(Date d){\r \tif (d.ngay == 1)\r \t\treturn 1;\r \telse\r \t\treturn 0;\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_testDate0_Date_random_3(void) {\n{\nAKA_test_case_name=\"testDate0_Date_random_3\";\n\n// set up\n;\n\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode d */\n/* SubStructDataNode d */\n/* ConstructorDataNode Date() */\nAKA_mark(\"Calling: \\\\Date()|ROOT\\\\structTest.cpp\\\\testDate0(Date)\\\\d\\\\d\\\\Date()\");AKA_fCall++;::Date d = ::Date();\n/* NormalNumberDataNode ngay */\nd.ngay=-1064950380;\n/* NormalNumberDataNode thang */\n/* thang : null value -> no code */\n/* NormalNumberDataNode nam */\n/* nam : null value -> no code */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test testDate0_Date_random_3\");int AKA_ACTUAL_OUTPUT=testDate0(d);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\structTest.cpp\\\\testDate0(Date)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=-1756772476;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\structTest.cpp\\testDate0(Date)"
    },
    {
        "f": [],
        "fm": "int testDate1(Date d){\r \tif (d.ngay == 1 && d.thang == 12 && d.nam == 2020)\r \t\treturn 1;\r \telse\r \t\treturn 0;\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_testDate1_Date_random_3(void) {\n{\nAKA_test_case_name=\"testDate1_Date_random_3\";\n\n// set up\n;\n\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode d */\n/* SubStructDataNode d */\n/* ConstructorDataNode Date() */\nAKA_mark(\"Calling: \\\\Date()|ROOT\\\\structTest.cpp\\\\testDate1(Date)\\\\d\\\\d\\\\Date()\");AKA_fCall++;::Date d = ::Date();\n/* NormalNumberDataNode ngay */\nd.ngay=1167446035;\n/* NormalNumberDataNode thang */\nd.thang=-172545946;\n/* NormalNumberDataNode nam */\nd.nam=-769391750;\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test testDate1_Date_random_3\");int AKA_ACTUAL_OUTPUT=testDate1(d);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\structTest.cpp\\\\testDate1(Date)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=-1756772476;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\structTest.cpp\\testDate1(Date)"
    },
    {
        "f": [],
        "fm": "int testDate3(Date d){\r \td.ngay = 1;\r \tif (d.ngay == 10)\r \t\treturn 1;\r \telse\r \t\treturn 0;\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_testDate3_Date_random_2(void) {\n{\nAKA_test_case_name=\"testDate3_Date_random_2\";\n\n// set up\n;\n\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode d */\n/* SubStructDataNode d */\n/* ConstructorDataNode Date() */\nAKA_mark(\"Calling: \\\\Date()|ROOT\\\\structTest.cpp\\\\testDate3(Date)\\\\d\\\\d\\\\Date()\");AKA_fCall++;::Date d = ::Date();\n/* NormalNumberDataNode ngay */\nd.ngay=-819607773;\n/* NormalNumberDataNode thang */\n/* thang : null value -> no code */\n/* NormalNumberDataNode nam */\n/* nam : null value -> no code */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test testDate3_Date_random_2\");int AKA_ACTUAL_OUTPUT=testDate3(d);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\structTest.cpp\\\\testDate3(Date)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=-1756772476;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\structTest.cpp\\testDate3(Date)"
    },
    {
        "f": [],
        "fm": "int testDate4(Date d){\r \td.ngay = d.thang;\r \tif (d.ngay == 10)\r \t\treturn 1;\r \telse\r \t\treturn 0;\r }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_testDate4_Date_random_3(void) {\n{\nAKA_test_case_name=\"testDate4_Date_random_3\";\n\n// set up\n;\n\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* StructDataNode d */\n/* SubStructDataNode d */\n/* ConstructorDataNode Date() */\nAKA_mark(\"Calling: \\\\Date()|ROOT\\\\structTest.cpp\\\\testDate4(Date)\\\\d\\\\d\\\\Date()\");AKA_fCall++;::Date d = ::Date();\n/* NormalNumberDataNode ngay */\nd.ngay=-619079624;\n/* NormalNumberDataNode thang */\nd.thang=-182564996;\n/* NormalNumberDataNode nam */\n/* nam : null value -> no code */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test testDate4_Date_random_3\");int AKA_ACTUAL_OUTPUT=testDate4(d);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\SymbolicExecutionTest\\\\structTest.cpp\\\\testDate4(Date)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n\nint a=-1756772476;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\Lab\\akautauto\\datatest\\duc-anh\\SymbolicExecutionTest\\structTest.cpp\\testDate4(Date)"
    }
]
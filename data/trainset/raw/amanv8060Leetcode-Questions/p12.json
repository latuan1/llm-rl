[
    {
        "f": [],
        "fm": "long long solver(vector<vector<int>>& rides, int i, int n,\r                    vector<long long>& dp) {\r     if (i == n) return 0;\r \r     long long ans = 0;\r     if (dp[i] != -1) return dp[i];\r \r     ans = max(ans, solver(rides, i + 1, n, dp));\r \r     int j = lower_bound(rides.begin() + i + 1, rides.end(), rides[i][1],\r                         [](const vector<int>& a, const int val) {\r                           return a[0] < val;\r                         }) -\r             rides.begin();\r \r     ans = max(ans, solver(rides, j, n, dp) +\r                        ((long long)rides[i][2] + rides[i][1] - rides[i][0]));\r \r     return dp[i] = ans;\r   }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_solver_vector_vector_int_int_int_vector_long_long_random_0(void) {\n{\nAKA_test_case_name=\"Solution_solver_vector_vector_int_int_int_vector_long_long_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> rides;\n\n\nint i=785323405;\n\n\nint n=-1200822132;\nvector<long long> dp;\n\n\nlong long AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode rides */\nvector<int> rides_element0;\nint rides_element0_element0=932958070;\nrides_element0.push_back(rides_element0_element0);\nint rides_element0_element1=-529975524;\nrides_element0.push_back(rides_element0_element1);\nrides.push_back(rides_element0);\nvector<int> rides_element1;\nint rides_element1_element0=-407714797;\nrides_element1.push_back(rides_element1_element0);\nrides.push_back(rides_element1);\nvector<int> rides_element2;\nint rides_element2_element0=-2109221919;\nrides_element2.push_back(rides_element2_element0);\nint rides_element2_element1=-328462864;\nrides_element2.push_back(rides_element2_element1);\nint rides_element2_element2=1477798088;\nrides_element2.push_back(rides_element2_element2);\nrides.push_back(rides_element2);\n/* NormalNumberDataNode i */\n/* NormalNumberDataNode n */\n/* VectorDataNode dp */\nlong long dp_element0=3972941217355065267;\ndp.push_back(dp_element0);\nlong long dp_element1=-2060771200860891999;\ndp.push_back(dp_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_solver_vector_vector_int_int_int_vector_long_long_random_0\");long long AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->solver(rides,i,n,dp);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p12\\\\2008.cpp\\\\Solution\\\\solver(vector<vector<int>>&,int,int,vector<long long>&)\");\n\n\nvector<vector<int>> EXPECTED_rides;\n\nvector<long long> EXPECTED_dp;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> rides;\n\n\nint i=785323405;\n\n\nint n=-1200822132;\nvector<long long> dp;\n\n\nlong long AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode rides */\nvector<int> rides_element0;\nint rides_element0_element0=932958070;\nrides_element0.push_back(rides_element0_element0);\nint rides_element0_element1=-529975524;\nrides_element0.push_back(rides_element0_element1);\nrides.push_back(rides_element0);\nvector<int> rides_element1;\nint rides_element1_element0=-407714797;\nrides_element1.push_back(rides_element1_element0);\nrides.push_back(rides_element1);\nvector<int> rides_element2;\nint rides_element2_element0=-2109221919;\nrides_element2.push_back(rides_element2_element0);\nint rides_element2_element1=-328462864;\nrides_element2.push_back(rides_element2_element1);\nint rides_element2_element2=1477798088;\nrides_element2.push_back(rides_element2_element2);\nrides.push_back(rides_element2);\n/* NormalNumberDataNode i */\n/* NormalNumberDataNode n */\n/* VectorDataNode dp */\nlong long dp_element0=3972941217355065267;\ndp.push_back(dp_element0);\nlong long dp_element1=-2060771200860891999;\ndp.push_back(dp_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r  public:\r   long long solver(vector<vector<int>>& rides, int i, int n,\r                    vector<long long>& dp) {\r     if (i == n) return 0;\r \r     long long ans = 0;\r     if (dp[i] != -1) return dp[i];\r \r     ans = max(ans, solver(rides, i + 1, n, dp));\r \r     int j = lower_bound(rides.begin() + i + 1, rides.end(), rides[i][1],\r                         [](const vector<int>& a, const int val) {\r                           return a[0] < val;\r                         }) -\r             rides.begin();\r \r     ans = max(ans, solver(rides, j, n, dp) +\r                        ((long long)rides[i][2] + rides[i][1] - rides[i][0]));\r \r     return dp[i] = ans;\r   }\r   long long maxTaxiEarnings(int n, vector<vector<int>>& rides) {\r     int l = rides.size();\r     sort(\r         rides.begin(), rides.end(),\r         [](const vector<int>& a, const vector<int>& b) { return a[0] < b[0]; });\r \r     vector<long long> dp(l + 1, -1);\r \r     return solver(rides, 0, l, dp);\r   }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Projects\\AKAUT\\prj-data\\amanv8060_Leetcode-Questions\\solutions\\p12\\2008.cpp\\Solution\\solver(vector<vector<int>>&,int,int,vector<long long>&)"
    },
    {
        "f": [],
        "fm": "long long maxTaxiEarnings(int n, vector<vector<int>>& rides) {\r     int l = rides.size();\r     sort(\r         rides.begin(), rides.end(),\r         [](const vector<int>& a, const vector<int>& b) { return a[0] < b[0]; });\r \r     vector<long long> dp(l + 1, -1);\r \r     return solver(rides, 0, l, dp);\r   }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_maxTaxiEarnings_int_vector_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_maxTaxiEarnings_int_vector_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=-1316383226;\nvector<vector<int>> rides;\n\n\nlong long AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode rides */\nvector<int> rides_element0;\nint rides_element0_element0=1008625234;\nrides_element0.push_back(rides_element0_element0);\nint rides_element0_element1=-749343108;\nrides_element0.push_back(rides_element0_element1);\nint rides_element0_element2=-487772763;\nrides_element0.push_back(rides_element0_element2);\nrides.push_back(rides_element0);\nvector<int> rides_element1;\nint rides_element1_element0=1244563410;\nrides_element1.push_back(rides_element1_element0);\nrides.push_back(rides_element1);\nvector<int> rides_element2;\nint rides_element2_element0=1546385580;\nrides_element2.push_back(rides_element2_element0);\nrides.push_back(rides_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxTaxiEarnings_int_vector_vector_int_random_1\");long long AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxTaxiEarnings(n,rides);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p12\\\\2008.cpp\\\\Solution\\\\maxTaxiEarnings(int,vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_rides;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> rides;\n\n\nint i=785323405;\n\n\nint n=-1200822132;\nvector<long long> dp;\n\n\nlong long AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode rides */\nvector<int> rides_element0;\nint rides_element0_element0=932958070;\nrides_element0.push_back(rides_element0_element0);\nint rides_element0_element1=-529975524;\nrides_element0.push_back(rides_element0_element1);\nrides.push_back(rides_element0);\nvector<int> rides_element1;\nint rides_element1_element0=-407714797;\nrides_element1.push_back(rides_element1_element0);\nrides.push_back(rides_element1);\nvector<int> rides_element2;\nint rides_element2_element0=-2109221919;\nrides_element2.push_back(rides_element2_element0);\nint rides_element2_element1=-328462864;\nrides_element2.push_back(rides_element2_element1);\nint rides_element2_element2=1477798088;\nrides_element2.push_back(rides_element2_element2);\nrides.push_back(rides_element2);\n/* NormalNumberDataNode i */\n/* NormalNumberDataNode n */\n/* VectorDataNode dp */\nlong long dp_element0=3972941217355065267;\ndp.push_back(dp_element0);\nlong long dp_element1=-2060771200860891999;\ndp.push_back(dp_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r  public:\r   long long solver(vector<vector<int>>& rides, int i, int n,\r                    vector<long long>& dp) {\r     if (i == n) return 0;\r \r     long long ans = 0;\r     if (dp[i] != -1) return dp[i];\r \r     ans = max(ans, solver(rides, i + 1, n, dp));\r \r     int j = lower_bound(rides.begin() + i + 1, rides.end(), rides[i][1],\r                         [](const vector<int>& a, const int val) {\r                           return a[0] < val;\r                         }) -\r             rides.begin();\r \r     ans = max(ans, solver(rides, j, n, dp) +\r                        ((long long)rides[i][2] + rides[i][1] - rides[i][0]));\r \r     return dp[i] = ans;\r   }\r   long long maxTaxiEarnings(int n, vector<vector<int>>& rides) {\r     int l = rides.size();\r     sort(\r         rides.begin(), rides.end(),\r         [](const vector<int>& a, const vector<int>& b) { return a[0] < b[0]; });\r \r     vector<long long> dp(l + 1, -1);\r \r     return solver(rides, 0, l, dp);\r   }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Projects\\AKAUT\\prj-data\\amanv8060_Leetcode-Questions\\solutions\\p12\\2008.cpp\\Solution\\maxTaxiEarnings(int,vector<vector<int>>&)"
    },
    {
        "f": [],
        "fm": "int finalValueAfterOperations(vector<string>& operations) {\r     int ans = 0;\r     for (int i = 0; i < operations.size(); i++) {\r       string s = operations[i];\r       if (s == \"--X\" || s == \"X--\") {\r         ans = ans - 1;\r       } else {\r         ans = ans + 1;\r       }\r     }\r     return ans;\r   }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_finalValueAfterOperations_vector_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_finalValueAfterOperations_vector_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2011.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> operations;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode operations */\nchar* akaRandomName856108 = new char[2];akaRandomName856108[0] = -60;akaRandomName856108[1] = '\\0';string operations_element0=akaRandomName856108;\noperations.push_back(operations_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_finalValueAfterOperations_vector_string_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->finalValueAfterOperations(operations);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p12\\\\2011.cpp\\\\Solution\\\\finalValueAfterOperations(vector<string>&)\");\n\n\nvector<string> EXPECTED_operations;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> rides;\n\n\nint i=785323405;\n\n\nint n=-1200822132;\nvector<long long> dp;\n\n\nlong long AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode rides */\nvector<int> rides_element0;\nint rides_element0_element0=932958070;\nrides_element0.push_back(rides_element0_element0);\nint rides_element0_element1=-529975524;\nrides_element0.push_back(rides_element0_element1);\nrides.push_back(rides_element0);\nvector<int> rides_element1;\nint rides_element1_element0=-407714797;\nrides_element1.push_back(rides_element1_element0);\nrides.push_back(rides_element1);\nvector<int> rides_element2;\nint rides_element2_element0=-2109221919;\nrides_element2.push_back(rides_element2_element0);\nint rides_element2_element1=-328462864;\nrides_element2.push_back(rides_element2_element1);\nint rides_element2_element2=1477798088;\nrides_element2.push_back(rides_element2_element2);\nrides.push_back(rides_element2);\n/* NormalNumberDataNode i */\n/* NormalNumberDataNode n */\n/* VectorDataNode dp */\nlong long dp_element0=3972941217355065267;\ndp.push_back(dp_element0);\nlong long dp_element1=-2060771200860891999;\ndp.push_back(dp_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r  public:\r   int finalValueAfterOperations(vector<string>& operations) {\r     int ans = 0;\r     for (int i = 0; i < operations.size(); i++) {\r       string s = operations[i];\r       if (s == \"--X\" || s == \"X--\") {\r         ans = ans - 1;\r       } else {\r         ans = ans + 1;\r       }\r     }\r     return ans;\r   }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Projects\\AKAUT\\prj-data\\amanv8060_Leetcode-Questions\\solutions\\p12\\2011.cpp\\Solution\\finalValueAfterOperations(vector<string>&)"
    },
    {
        "f": [],
        "fm": "int sumOfBeauties(vector<int>& nums) {\r     if (nums.size() == 0) return 0;\r \r     int sum = 0;\r \r     int left = nums[0];\r     vector<int> temp = nums;\r     sort(temp.begin() + 2, temp.end());\r     int right = temp[2];\r \r     for (int i = 1; i <= nums.size() - 2; i++) {\r       int maxim = 0;\r \r       if (nums[i - 1] > left) left = nums[i - 1];\r \r       right = temp[i + 1];\r \r       if (nums[i] > left && nums[i] < right)\r         maxim = max(maxim, 2);\r       else if (nums[i] > nums[i - 1] && nums[i] < nums[i + 1])\r         maxim = max(maxim, 1);\r       sum += maxim;\r     }\r     return sum;\r   }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_sumOfBeauties_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_sumOfBeauties_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2012.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1009993149;\nnums.push_back(nums_element0);\nint nums_element1=1114403267;\nnums.push_back(nums_element1);\nint nums_element2=1700865804;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_sumOfBeauties_vector_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->sumOfBeauties(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p12\\\\2012.cpp\\\\Solution\\\\sumOfBeauties(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> rides;\n\n\nint i=785323405;\n\n\nint n=-1200822132;\nvector<long long> dp;\n\n\nlong long AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode rides */\nvector<int> rides_element0;\nint rides_element0_element0=932958070;\nrides_element0.push_back(rides_element0_element0);\nint rides_element0_element1=-529975524;\nrides_element0.push_back(rides_element0_element1);\nrides.push_back(rides_element0);\nvector<int> rides_element1;\nint rides_element1_element0=-407714797;\nrides_element1.push_back(rides_element1_element0);\nrides.push_back(rides_element1);\nvector<int> rides_element2;\nint rides_element2_element0=-2109221919;\nrides_element2.push_back(rides_element2_element0);\nint rides_element2_element1=-328462864;\nrides_element2.push_back(rides_element2_element1);\nint rides_element2_element2=1477798088;\nrides_element2.push_back(rides_element2_element2);\nrides.push_back(rides_element2);\n/* NormalNumberDataNode i */\n/* NormalNumberDataNode n */\n/* VectorDataNode dp */\nlong long dp_element0=3972941217355065267;\ndp.push_back(dp_element0);\nlong long dp_element1=-2060771200860891999;\ndp.push_back(dp_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_sumOfBeauties_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_sumOfBeauties_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2012.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1228724679;\nnums.push_back(nums_element0);\nint nums_element1=-1341576542;\nnums.push_back(nums_element1);\nint nums_element2=-1337695548;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_sumOfBeauties_vector_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->sumOfBeauties(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p12\\\\2012.cpp\\\\Solution\\\\sumOfBeauties(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=-1316383226;\nvector<vector<int>> rides;\n\n\nlong long AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode rides */\nvector<int> rides_element0;\nint rides_element0_element0=1008625234;\nrides_element0.push_back(rides_element0_element0);\nint rides_element0_element1=-749343108;\nrides_element0.push_back(rides_element0_element1);\nint rides_element0_element2=-487772763;\nrides_element0.push_back(rides_element0_element2);\nrides.push_back(rides_element0);\nvector<int> rides_element1;\nint rides_element1_element0=1244563410;\nrides_element1.push_back(rides_element1_element0);\nrides.push_back(rides_element1);\nvector<int> rides_element2;\nint rides_element2_element0=1546385580;\nrides_element2.push_back(rides_element2_element0);\nrides.push_back(rides_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r  public:\r   int sumOfBeauties(vector<int>& nums) {\r     if (nums.size() == 0) return 0;\r \r     int sum = 0;\r \r     int left = nums[0];\r     vector<int> temp = nums;\r     sort(temp.begin() + 2, temp.end());\r     int right = temp[2];\r \r     for (int i = 1; i <= nums.size() - 2; i++) {\r       int maxim = 0;\r \r       if (nums[i - 1] > left) left = nums[i - 1];\r \r       right = temp[i + 1];\r \r       if (nums[i] > left && nums[i] < right)\r         maxim = max(maxim, 2);\r       else if (nums[i] > nums[i - 1] && nums[i] < nums[i + 1])\r         maxim = max(maxim, 1);\r       sum += maxim;\r     }\r     return sum;\r   }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\Projects\\AKAUT\\prj-data\\amanv8060_Leetcode-Questions\\solutions\\p12\\2012.cpp\\Solution\\sumOfBeauties(vector<int>&)"
    }
]
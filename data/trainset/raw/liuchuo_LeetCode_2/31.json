[
    {
        "f": [],
        "fm": "bool isAnagram(string s, string t) {         int a[26] = {0};         if(s.length() != t.length())             return 0;         for(int i = 0; i < s.length(); i++) {             a[s[i] - 'a']++;         }         for(int i = 0; i < t.length(); i++) {             a[t[i] -'a']--;         }         for(int i = 0; i < 26; i++) {             if(a[i] != 0) {                 return 0;             }         }         return 1;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_isAnagram_string_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/242. Valid Anagram.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName699087 = new char[2];akaRandomName699087[0] = -13;akaRandomName699087[1] = '\\0';string s=akaRandomName699087;\nchar* akaRandomName764696 = new char[2];akaRandomName764696[0] = 22;akaRandomName764696[1] = '\\0';string t=akaRandomName764696;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: ./31/242. Valid Anagram.cpp/Solution/isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/242. Valid Anagram.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName672013 = new char[2];akaRandomName672013[0] = -13;akaRandomName672013[1] = '\\0';string s=akaRandomName672013;\nchar* akaRandomName79110 = new char[2];akaRandomName79110[0] = 22;akaRandomName79110[1] = '\\0';string t=akaRandomName79110;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_isAnagram_string_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/242. Valid Anagram.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName893630 = new char[2];akaRandomName893630[0] = -66;akaRandomName893630[1] = '\\0';string s=akaRandomName893630;\nchar* akaRandomName668140 = new char[2];akaRandomName668140[0] = 104;akaRandomName668140[1] = '\\0';string t=akaRandomName668140;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: ./31/242. Valid Anagram.cpp/Solution/isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/242. Valid Anagram.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName578354 = new char[2];akaRandomName578354[0] = -66;akaRandomName578354[1] = '\\0';string s=akaRandomName578354;\nchar* akaRandomName384733 = new char[2];akaRandomName384733[0] = 104;akaRandomName384733[1] = '\\0';string t=akaRandomName384733;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     bool isAnagram(string s, string t) {         int a[26] = {0};         if(s.length() != t.length())             return 0;         for(int i = 0; i < s.length(); i++) {             a[s[i] - 'a']++;         }         for(int i = 0; i < t.length(); i++) {             a[t[i] -'a']--;         }         for(int i = 0; i < 26; i++) {             if(a[i] != 0) {                 return 0;             }         }         return 1;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/31/242. Valid Anagram.cpp/Solution/isAnagram(string,string)"
    },
    {
        "f": [],
        "fm": "void dfs(vector<string> &v, TreeNode *node, string s) {         if(node->left == NULL && node->right == NULL) {             v.push_back(s);             return ;         }         if(node->left != NULL) {             dfs(v, node->left, s + \"->\" + to_string(node->left->val));         }         if(node->right != NULL) {             dfs(v, node->right, s + \"->\" + to_string(node->right->val));         }     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_dfs_vector_string_TreeNodemul_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_dfs_vector_string_TreeNodemul_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/257. Binary Tree Paths .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> v;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=-782670941;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-117235793;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_left0_x=1252502053;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_left_0 = new ::TreeNode(node0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).val=-1557869222;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node_0_DOT_left.push_back(AKA_VECTOR_INIT_node_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_left1_x=1084401583;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_left_1 = new ::TreeNode(node0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_left_1).val=-743608659;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node_0_DOT_left.push_back(AKA_VECTOR_INIT_node_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node_0).left = AKA_VECTOR_INIT_node_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right0_x=1508570461;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode(node0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).val=1091174583;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=-942045899;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-755611708;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_left0_x=-1230053688;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_left_0 = new ::TreeNode(node1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_left_0).val=1582404033;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node_1_DOT_left.push_back(AKA_VECTOR_INIT_node_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_left1_x=-687428382;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_left_1 = new ::TreeNode(node1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_left_1).val=-580679685;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node_1_DOT_left.push_back(AKA_VECTOR_INIT_node_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_left2_x=-1783530846;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/left/left[2]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_left_2 = new ::TreeNode(node1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_left_2).val=1037620249;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_left_2).right;\nAKA_VECTOR_INIT_node_1_DOT_left.push_back(AKA_VECTOR_INIT_node_1_DOT_left_2);\n(*AKA_VECTOR_INIT_node_1).left = AKA_VECTOR_INIT_node_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=253587297;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=642069258;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1553327484;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=1784193291;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nchar* akaRandomName310394 = new char[2];akaRandomName310394[0] = -23;akaRandomName310394[1] = '\\0';string s=akaRandomName310394;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nchar* akaRandomName353995 = new char[2];akaRandomName353995[0] = 34;akaRandomName353995[1] = '\\0';string v_element0=akaRandomName353995;\nv.push_back(v_element0);\nchar* akaRandomName521263 = new char[2];akaRandomName521263[0] = -16;akaRandomName521263[1] = '\\0';string v_element1=akaRandomName521263;\nv.push_back(v_element1);\nchar* akaRandomName570621 = new char[2];akaRandomName570621[0] = 49;akaRandomName570621[1] = '\\0';string v_element2=akaRandomName570621;\nv.push_back(v_element2);\n/* PointerStructureDataNode node */\n/* NormalStringDataNode s */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_vector_string_TreeNodemul_string_random_2\");AKA_INSTANCE___Solution->dfs(v,node,s);\nAKA_fCall++;AKA_mark(\"Return from: ./31/257. Binary Tree Paths .cpp/Solution/dfs(vector<string>&,TreeNode*,string)\");\n\n/* error assertion */\nvector<string> EXPECTED_v;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/257. Binary Tree Paths .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> v;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=-782670941;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-117235793;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_left0_x=1252502053;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_left_0 = new ::TreeNode(node0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).val=-1557869222;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node_0_DOT_left.push_back(AKA_VECTOR_INIT_node_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_left1_x=1084401583;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_left_1 = new ::TreeNode(node0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_left_1).val=-743608659;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node_0_DOT_left.push_back(AKA_VECTOR_INIT_node_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node_0).left = AKA_VECTOR_INIT_node_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right0_x=1508570461;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode(node0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).val=1091174583;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=-942045899;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-755611708;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_left0_x=-1230053688;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_left_0 = new ::TreeNode(node1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_left_0).val=1582404033;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node_1_DOT_left.push_back(AKA_VECTOR_INIT_node_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_left1_x=-687428382;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_left_1 = new ::TreeNode(node1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_left_1).val=-580679685;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node_1_DOT_left.push_back(AKA_VECTOR_INIT_node_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_left2_x=-1783530846;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/left/left[2]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_left_2 = new ::TreeNode(node1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_left_2).val=1037620249;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_left_2).right;\nAKA_VECTOR_INIT_node_1_DOT_left.push_back(AKA_VECTOR_INIT_node_1_DOT_left_2);\n(*AKA_VECTOR_INIT_node_1).left = AKA_VECTOR_INIT_node_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=253587297;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=642069258;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1553327484;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=1784193291;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nchar* akaRandomName544547 = new char[2];akaRandomName544547[0] = -23;akaRandomName544547[1] = '\\0';string s=akaRandomName544547;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nchar* akaRandomName778618 = new char[2];akaRandomName778618[0] = 34;akaRandomName778618[1] = '\\0';string v_element0=akaRandomName778618;\nv.push_back(v_element0);\nchar* akaRandomName771136 = new char[2];akaRandomName771136[0] = -16;akaRandomName771136[1] = '\\0';string v_element1=akaRandomName771136;\nv.push_back(v_element1);\nchar* akaRandomName824449 = new char[2];akaRandomName824449[0] = 49;akaRandomName824449[1] = '\\0';string v_element2=akaRandomName824449;\nv.push_back(v_element2);\n/* PointerStructureDataNode node */\n/* NormalStringDataNode s */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     void dfs(vector<string> &v, TreeNode *node, string s) {         if(node->left == NULL && node->right == NULL) {             v.push_back(s);             return ;         }         if(node->left != NULL) {             dfs(v, node->left, s + \"->\" + to_string(node->left->val));         }         if(node->right != NULL) {             dfs(v, node->right, s + \"->\" + to_string(node->right->val));         }     }          vector<string> binaryTreePaths(TreeNode* root) {         vector<string> v;         if(root == NULL) {             return v;         }         dfs(v, root, to_string(root->val));         return v;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/31/257. Binary Tree Paths .cpp/Solution/dfs(vector<string>&,TreeNode*,string)"
    },
    {
        "f": [],
        "fm": "vector<string> binaryTreePaths(TreeNode* root) {         vector<string> v;         if(root == NULL) {             return v;         }         dfs(v, root, to_string(root->val));         return v;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_binaryTreePaths_TreeNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_binaryTreePaths_TreeNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/257. Binary Tree Paths .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1633572213;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/binaryTreePaths(TreeNode*)/root/AKA_VECTOR_INIT_root_0/root/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-1348823003;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-244690666;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/binaryTreePaths(TreeNode*)/root/AKA_VECTOR_INIT_root_1/root/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-496085112;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_binaryTreePaths_TreeNodemul_random_2\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->binaryTreePaths(root);\nAKA_fCall++;AKA_mark(\"Return from: ./31/257. Binary Tree Paths .cpp/Solution/binaryTreePaths(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/257. Binary Tree Paths .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1633572213;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/binaryTreePaths(TreeNode*)/root/AKA_VECTOR_INIT_root_0/root/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-1348823003;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-244690666;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths .cpp/binaryTreePaths(TreeNode*)/root/AKA_VECTOR_INIT_root_1/root/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-496085112;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     void dfs(vector<string> &v, TreeNode *node, string s) {         if(node->left == NULL && node->right == NULL) {             v.push_back(s);             return ;         }         if(node->left != NULL) {             dfs(v, node->left, s + \"->\" + to_string(node->left->val));         }         if(node->right != NULL) {             dfs(v, node->right, s + \"->\" + to_string(node->right->val));         }     }          vector<string> binaryTreePaths(TreeNode* root) {         vector<string> v;         if(root == NULL) {             return v;         }         dfs(v, root, to_string(root->val));         return v;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/31/257. Binary Tree Paths .cpp/Solution/binaryTreePaths(TreeNode*)"
    },
    {
        "f": [],
        "fm": "void dfs(vector<string> &v, TreeNode *node, string s) {         if(node->left == NULL && node->right == NULL) {             v.push_back(s);             return ;         }         if(node->left != NULL) {             dfs(v, node->left, s + \"->\" + to_string(node->left->val));         }         if(node->right != NULL) {             dfs(v, node->right, s + \"->\" + to_string(node->right->val));         }     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_dfs_vector_string_TreeNodemul_string_random_5(void) {\n{\nAKA_test_case_name=\"Solution_dfs_vector_string_TreeNodemul_string_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/257. Binary Tree Paths.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> v;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1092781232;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-890397119;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_left0_x=1031923193;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_left_0 = new ::TreeNode(node0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).val=-1086530333;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node_0_DOT_left.push_back(AKA_VECTOR_INIT_node_0_DOT_left_0);\n(*AKA_VECTOR_INIT_node_0).left = AKA_VECTOR_INIT_node_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right0_x=-1700379183;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode(node0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).val=2070269380;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right1_x=1218525898;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_1 = new ::TreeNode(node0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).val=808991527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_1);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=-1958730286;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-1277393427;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_left0_x=912062491;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_left_0 = new ::TreeNode(node1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_left_0).val=-1702892519;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node_1_DOT_left.push_back(AKA_VECTOR_INIT_node_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_left1_x=1783547752;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_left_1 = new ::TreeNode(node1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_left_1).val=-897158600;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node_1_DOT_left.push_back(AKA_VECTOR_INIT_node_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_left2_x=254593049;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/left/left[2]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_left_2 = new ::TreeNode(node1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_left_2).val=1654930502;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_left_2).right;\nAKA_VECTOR_INIT_node_1_DOT_left.push_back(AKA_VECTOR_INIT_node_1_DOT_left_2);\n(*AKA_VECTOR_INIT_node_1).left = AKA_VECTOR_INIT_node_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=-762318893;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=1143463904;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-763672229;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=1101175693;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nchar* akaRandomName535082 = new char[2];akaRandomName535082[0] = -28;akaRandomName535082[1] = '\\0';string s=akaRandomName535082;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nchar* akaRandomName496206 = new char[2];akaRandomName496206[0] = -82;akaRandomName496206[1] = '\\0';string v_element0=akaRandomName496206;\nv.push_back(v_element0);\nchar* akaRandomName142518 = new char[2];akaRandomName142518[0] = 18;akaRandomName142518[1] = '\\0';string v_element1=akaRandomName142518;\nv.push_back(v_element1);\n/* PointerStructureDataNode node */\n/* NormalStringDataNode s */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_vector_string_TreeNodemul_string_random_5\");AKA_INSTANCE___Solution->dfs(v,node,s);\nAKA_fCall++;AKA_mark(\"Return from: ./31/257. Binary Tree Paths.cpp/Solution/dfs(vector<string>&,TreeNode*,string)\");\n\n/* error assertion */\nvector<string> EXPECTED_v;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/257. Binary Tree Paths.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> v;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1092781232;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-890397119;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_left0_x=1031923193;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_left_0 = new ::TreeNode(node0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).val=-1086530333;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node_0_DOT_left.push_back(AKA_VECTOR_INIT_node_0_DOT_left_0);\n(*AKA_VECTOR_INIT_node_0).left = AKA_VECTOR_INIT_node_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right0_x=-1700379183;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode(node0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).val=2070269380;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right1_x=1218525898;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_1 = new ::TreeNode(node0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).val=808991527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_1);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=-1958730286;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-1277393427;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_left0_x=912062491;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_left_0 = new ::TreeNode(node1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_left_0).val=-1702892519;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node_1_DOT_left.push_back(AKA_VECTOR_INIT_node_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_left1_x=1783547752;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_left_1 = new ::TreeNode(node1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_left_1).val=-897158600;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node_1_DOT_left.push_back(AKA_VECTOR_INIT_node_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_left2_x=254593049;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/left/left[2]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_left_2 = new ::TreeNode(node1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_left_2).val=1654930502;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_left_2).right;\nAKA_VECTOR_INIT_node_1_DOT_left.push_back(AKA_VECTOR_INIT_node_1_DOT_left_2);\n(*AKA_VECTOR_INIT_node_1).left = AKA_VECTOR_INIT_node_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=-762318893;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=1143463904;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-763672229;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=1101175693;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nchar* akaRandomName194986 = new char[2];akaRandomName194986[0] = -28;akaRandomName194986[1] = '\\0';string s=akaRandomName194986;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nchar* akaRandomName153256 = new char[2];akaRandomName153256[0] = -82;akaRandomName153256[1] = '\\0';string v_element0=akaRandomName153256;\nv.push_back(v_element0);\nchar* akaRandomName412741 = new char[2];akaRandomName412741[0] = 18;akaRandomName412741[1] = '\\0';string v_element1=akaRandomName412741;\nv.push_back(v_element1);\n/* PointerStructureDataNode node */\n/* NormalStringDataNode s */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_dfs_vector_string_TreeNodemul_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_dfs_vector_string_TreeNodemul_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/257. Binary Tree Paths.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> v;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=-2046299179;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=1210318883;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right0_x=517996372;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode(node0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).val=-1570514722;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right1_x=-1556514077;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_1 = new ::TreeNode(node0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).val=-1862686154;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_1);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=1682002025;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-269806479;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node2_x=-437131212;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_2/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2 = new ::TreeNode(node2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_2).val=1293626455;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node2_left0_x=-10514929;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_2/node/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2_DOT_left_0 = new ::TreeNode(node2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_2_DOT_left_0).val=-549970649;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_2_DOT_left_0).right;\nAKA_VECTOR_INIT_node_2_DOT_left.push_back(AKA_VECTOR_INIT_node_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node2_left1_x=-843382340;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_2/node/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2_DOT_left_1 = new ::TreeNode(node2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_2_DOT_left_1).val=-1936141757;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_2_DOT_left_1).right;\nAKA_VECTOR_INIT_node_2_DOT_left.push_back(AKA_VECTOR_INIT_node_2_DOT_left_1);\n(*AKA_VECTOR_INIT_node_2).left = AKA_VECTOR_INIT_node_2_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_2).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_2);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nchar* akaRandomName67422 = new char[2];akaRandomName67422[0] = -58;akaRandomName67422[1] = '\\0';string s=akaRandomName67422;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nchar* akaRandomName530600 = new char[2];akaRandomName530600[0] = 35;akaRandomName530600[1] = '\\0';string v_element0=akaRandomName530600;\nv.push_back(v_element0);\nchar* akaRandomName458797 = new char[2];akaRandomName458797[0] = -103;akaRandomName458797[1] = '\\0';string v_element1=akaRandomName458797;\nv.push_back(v_element1);\n/* PointerStructureDataNode node */\n/* NormalStringDataNode s */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_vector_string_TreeNodemul_string_random_1\");AKA_INSTANCE___Solution->dfs(v,node,s);\nAKA_fCall++;AKA_mark(\"Return from: ./31/257. Binary Tree Paths.cpp/Solution/dfs(vector<string>&,TreeNode*,string)\");\n\n/* error assertion */\nvector<string> EXPECTED_v;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/257. Binary Tree Paths.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> v;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=-2046299179;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=1210318883;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right0_x=517996372;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode(node0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).val=-1570514722;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right1_x=-1556514077;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_0/node/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_1 = new ::TreeNode(node0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).val=-1862686154;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_1);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=1682002025;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_1/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-269806479;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node2_x=-437131212;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_2/node/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2 = new ::TreeNode(node2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_2).val=1293626455;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node2_left0_x=-10514929;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_2/node/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2_DOT_left_0 = new ::TreeNode(node2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_2_DOT_left_0).val=-549970649;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_2_DOT_left_0).right;\nAKA_VECTOR_INIT_node_2_DOT_left.push_back(AKA_VECTOR_INIT_node_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node2_left1_x=-843382340;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/dfs(vector<string>&,TreeNode*,string)/node/AKA_VECTOR_INIT_node_2/node/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2_DOT_left_1 = new ::TreeNode(node2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_2_DOT_left_1).val=-1936141757;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_2_DOT_left_1).right;\nAKA_VECTOR_INIT_node_2_DOT_left.push_back(AKA_VECTOR_INIT_node_2_DOT_left_1);\n(*AKA_VECTOR_INIT_node_2).left = AKA_VECTOR_INIT_node_2_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_2).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_2);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nchar* akaRandomName830207 = new char[2];akaRandomName830207[0] = -58;akaRandomName830207[1] = '\\0';string s=akaRandomName830207;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nchar* akaRandomName834459 = new char[2];akaRandomName834459[0] = 35;akaRandomName834459[1] = '\\0';string v_element0=akaRandomName834459;\nv.push_back(v_element0);\nchar* akaRandomName292278 = new char[2];akaRandomName292278[0] = -103;akaRandomName292278[1] = '\\0';string v_element1=akaRandomName292278;\nv.push_back(v_element1);\n/* PointerStructureDataNode node */\n/* NormalStringDataNode s */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     void dfs(vector<string> &v, TreeNode *node, string s) {         if(node->left == NULL && node->right == NULL) {             v.push_back(s);             return ;         }         if(node->left != NULL) {             dfs(v, node->left, s + \"->\" + to_string(node->left->val));         }         if(node->right != NULL) {             dfs(v, node->right, s + \"->\" + to_string(node->right->val));         }     }          vector<string> binaryTreePaths(TreeNode* root) {         vector<string> v;         if(root == NULL) {             return v;         }         dfs(v, root, to_string(root->val));         return v;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/31/257. Binary Tree Paths.cpp/Solution/dfs(vector<string>&,TreeNode*,string)"
    },
    {
        "f": [],
        "fm": "vector<string> binaryTreePaths(TreeNode* root) {         vector<string> v;         if(root == NULL) {             return v;         }         dfs(v, root, to_string(root->val));         return v;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_binaryTreePaths_TreeNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_binaryTreePaths_TreeNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/257. Binary Tree Paths.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1319737192;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/binaryTreePaths(TreeNode*)/root/AKA_VECTOR_INIT_root_0/root/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1338860504;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_binaryTreePaths_TreeNodemul_random_0\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->binaryTreePaths(root);\nAKA_fCall++;AKA_mark(\"Return from: ./31/257. Binary Tree Paths.cpp/Solution/binaryTreePaths(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/257. Binary Tree Paths.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1319737192;\nAKA_mark(\"Calling: ./31/257. Binary Tree Paths .cpp/TreeNode/TreeNode(int)|ROOT/257. Binary Tree Paths.cpp/binaryTreePaths(TreeNode*)/root/AKA_VECTOR_INIT_root_0/root/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1338860504;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     void dfs(vector<string> &v, TreeNode *node, string s) {         if(node->left == NULL && node->right == NULL) {             v.push_back(s);             return ;         }         if(node->left != NULL) {             dfs(v, node->left, s + \"->\" + to_string(node->left->val));         }         if(node->right != NULL) {             dfs(v, node->right, s + \"->\" + to_string(node->right->val));         }     }          vector<string> binaryTreePaths(TreeNode* root) {         vector<string> v;         if(root == NULL) {             return v;         }         dfs(v, root, to_string(root->val));         return v;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/31/257. Binary Tree Paths.cpp/Solution/binaryTreePaths(TreeNode*)"
    },
    {
        "f": [],
        "fm": "int addDigits(int num) {         return num - (num - 1) / 9 * 9;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_addDigits_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_addDigits_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/258. Add Digits.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=-1145753293;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_addDigits_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->addDigits(num);\nAKA_fCall++;AKA_mark(\"Return from: ./31/258. Add Digits.cpp/Solution/addDigits(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/258. Add Digits.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=-1145753293;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int addDigits(int num) {         return num - (num - 1) / 9 * 9;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/31/258. Add Digits.cpp/Solution/addDigits(int)"
    },
    {
        "f": [],
        "fm": "vector<int> singleNumber(vector<int>& nums) {         sort(nums.begin(), nums.end());         vector<int> v(2);         int flag = 0;         for(int i = 0; i < nums.size() - 1; i = i + 2) {             if(nums[i] != nums[i + 1]) {                 v[0] = nums[i];                 for(int j = i + 1; j < nums.size() - 1; j = j + 2) {                     if(nums[j] != nums[j + 1]) {                         v[1] = nums[j];                         flag = 1;                         break;                     }                 }                 break;             }         }         if(flag == 0) {             v[1] = nums[nums.size() - 1];         }         return v;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_singleNumber_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_singleNumber_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/260. Single Number III.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=473926116;\nnums.push_back(nums_element0);\nint nums_element1=-1786777741;\nnums.push_back(nums_element1);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_singleNumber_vector_int_random_2\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->singleNumber(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./31/260. Single Number III.cpp/Solution/singleNumber(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/260. Single Number III.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=473926116;\nnums.push_back(nums_element0);\nint nums_element1=-1786777741;\nnums.push_back(nums_element1);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_singleNumber_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_singleNumber_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/260. Single Number III.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1104416794;\nnums.push_back(nums_element0);\nint nums_element1=-1367166283;\nnums.push_back(nums_element1);\nint nums_element2=-1919211678;\nnums.push_back(nums_element2);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_singleNumber_vector_int_random_0\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->singleNumber(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./31/260. Single Number III.cpp/Solution/singleNumber(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/260. Single Number III.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1104416794;\nnums.push_back(nums_element0);\nint nums_element1=-1367166283;\nnums.push_back(nums_element1);\nint nums_element2=-1919211678;\nnums.push_back(nums_element2);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     vector<int> singleNumber(vector<int>& nums) {         sort(nums.begin(), nums.end());         vector<int> v(2);         int flag = 0;         for(int i = 0; i < nums.size() - 1; i = i + 2) {             if(nums[i] != nums[i + 1]) {                 v[0] = nums[i];                 for(int j = i + 1; j < nums.size() - 1; j = j + 2) {                     if(nums[j] != nums[j + 1]) {                         v[1] = nums[j];                         flag = 1;                         break;                     }                 }                 break;             }         }         if(flag == 0) {             v[1] = nums[nums.size() - 1];         }         return v;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/31/260. Single Number III.cpp/Solution/singleNumber(vector<int>&)"
    },
    {
        "f": [],
        "fm": "bool isUgly(int num) {         if(num <= 0) {             return false;         }         int flag = 0;         while(num != 1) {             flag = 0;             if(num % 2 == 0) {                 num = num / 2;                 flag = 1;             }             if(num % 3 == 0) {                  num = num / 3;                  flag = 1;             }             if(num % 5 == 0) {                 num = num / 5;                 flag = 1;             }             if(flag == 0) {                 return false;             }         }         return true;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_isUgly_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_isUgly_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/263. Ugly Number.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=3;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isUgly_int_random_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isUgly(num);\nAKA_fCall++;AKA_mark(\"Return from: ./31/263. Ugly Number.cpp/Solution/isUgly(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/263. Ugly Number.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=3;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_isUgly_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_isUgly_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/263. Ugly Number.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=10;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isUgly_int_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isUgly(num);\nAKA_fCall++;AKA_mark(\"Return from: ./31/263. Ugly Number.cpp/Solution/isUgly(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/263. Ugly Number.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=10;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {},
                "td": "void AKA_TEST_Solution_isUgly_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_isUgly_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/263. Ugly Number.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=6;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isUgly_int_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isUgly(num);\nAKA_fCall++;AKA_mark(\"Return from: ./31/263. Ugly Number.cpp/Solution/isUgly(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/263. Ugly Number.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=6;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     bool isUgly(int num) {         if(num <= 0) {             return false;         }         int flag = 0;         while(num != 1) {             flag = 0;             if(num % 2 == 0) {                 num = num / 2;                 flag = 1;             }             if(num % 3 == 0) {                  num = num / 3;                  flag = 1;             }             if(num % 5 == 0) {                 num = num / 5;                 flag = 1;             }             if(flag == 0) {                 return false;             }         }         return true;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/31/263. Ugly Number.cpp/Solution/isUgly(int)"
    },
    {
        "f": [],
        "fm": "int numSquares(int n) {         vector<int> dp(n+1);         dp[1] = 1;         for(int i = 2; i <= n; i++) {             int temp = 99999999;             for(int j = 1; j * j <= i; j++) {                 if(j * j == i) {                     temp = 1;                     break;                 }                 temp = min(temp, dp[i-j*j] + 1);             }             dp[i] = temp;         }         return dp[n];     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_numSquares_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_numSquares_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/279. Perfect Squares.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=4;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_numSquares_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->numSquares(n);\nAKA_fCall++;AKA_mark(\"Return from: ./31/279. Perfect Squares.cpp/Solution/numSquares(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/279. Perfect Squares.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=4;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int numSquares(int n) {         vector<int> dp(n+1);         dp[1] = 1;         for(int i = 2; i <= n; i++) {             int temp = 99999999;             for(int j = 1; j * j <= i; j++) {                 if(j * j == i) {                     temp = 1;                     break;                 }                 temp = min(temp, dp[i-j*j] + 1);             }             dp[i] = temp;         }         return dp[n];     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/31/279. Perfect Squares.cpp/Solution/numSquares(int)"
    },
    {
        "f": [],
        "fm": "void moveZeroes(vector<int>& nums) {         int len = nums.size();         for(int i = 0; i < len - 1; i++) {             if(nums[i] == 0) {                 for(int j = i + 1; j < len; j++) {                     if(nums[j] != 0) {                         swap(nums[i], nums[j]);                         break;                     }                 }             }         }     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_moveZeroes_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_moveZeroes_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/283. Move Zeroes.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=582374961;\nnums.push_back(nums_element0);\nint nums_element1=-1462136452;\nnums.push_back(nums_element1);\nint nums_element2=1672742679;\nnums.push_back(nums_element2);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_moveZeroes_vector_int_random_2\");AKA_INSTANCE___Solution->moveZeroes(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./31/283. Move Zeroes.cpp/Solution/moveZeroes(vector<int>&)\");\n\n/* error assertion */\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/283. Move Zeroes.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=582374961;\nnums.push_back(nums_element0);\nint nums_element1=-1462136452;\nnums.push_back(nums_element1);\nint nums_element2=1672742679;\nnums.push_back(nums_element2);\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     void moveZeroes(vector<int>& nums) {         int len = nums.size();         for(int i = 0; i < len - 1; i++) {             if(nums[i] == 0) {                 for(int j = i + 1; j < len; j++) {                     if(nums[j] != 0) {                         swap(nums[i], nums[j]);                         break;                     }                 }             }         }     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/31/283. Move Zeroes.cpp/Solution/moveZeroes(vector<int>&)"
    }
]
[
    {
        "f": [],
        "fm": "vector<int> findAnagrams(string s, string p) {         vector<int> result, hash(26, 0);         int lenp = p.length(), lens = s.length();         for(int i = 0; i < lenp; i++) {             hash[p[i] - 'a']++;         }         for(int i = 0; i <= lens - lenp; i++) {             vector<int> temphash(26, 0);             for(int j = i; j < i + lenp; j++)                 temphash[s[j] - 'a']++;             if(temphash == hash)                 result.push_back(i);         }         return result;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_findAnagrams_string_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_findAnagrams_string_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/438. Find All Anagrams in a String .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName125298 = new char[2];akaRandomName125298[0] = 120;akaRandomName125298[1] = '\\0';string s=akaRandomName125298;\nchar* akaRandomName315920 = new char[2];akaRandomName315920[0] = -80;akaRandomName315920[1] = '\\0';string p=akaRandomName315920;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode p */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findAnagrams_string_string_random_3\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findAnagrams(s,p);\nAKA_fCall++;AKA_mark(\"Return from: ./25/438. Find All Anagrams in a String .cpp/Solution/findAnagrams(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/438. Find All Anagrams in a String .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName25176 = new char[2];akaRandomName25176[0] = 120;akaRandomName25176[1] = '\\0';string s=akaRandomName25176;\nchar* akaRandomName285207 = new char[2];akaRandomName285207[0] = -80;akaRandomName285207[1] = '\\0';string p=akaRandomName285207;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode p */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_findAnagrams_string_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_findAnagrams_string_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/438. Find All Anagrams in a String .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName771040 = new char[2];akaRandomName771040[0] = -115;akaRandomName771040[1] = '\\0';string s=akaRandomName771040;\nchar* akaRandomName643402 = new char[2];akaRandomName643402[0] = 50;akaRandomName643402[1] = '\\0';string p=akaRandomName643402;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode p */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findAnagrams_string_string_random_1\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findAnagrams(s,p);\nAKA_fCall++;AKA_mark(\"Return from: ./25/438. Find All Anagrams in a String .cpp/Solution/findAnagrams(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/438. Find All Anagrams in a String .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName823795 = new char[2];akaRandomName823795[0] = -115;akaRandomName823795[1] = '\\0';string s=akaRandomName823795;\nchar* akaRandomName289362 = new char[2];akaRandomName289362[0] = 50;akaRandomName289362[1] = '\\0';string p=akaRandomName289362;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode p */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     vector<int> findAnagrams(string s, string p) {         vector<int> result, hash(26, 0);         int lenp = p.length(), lens = s.length();         for(int i = 0; i < lenp; i++) {             hash[p[i] - 'a']++;         }         for(int i = 0; i <= lens - lenp; i++) {             vector<int> temphash(26, 0);             for(int j = i; j < i + lenp; j++)                 temphash[s[j] - 'a']++;             if(temphash == hash)                 result.push_back(i);         }         return result;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/25/438. Find All Anagrams in a String .cpp/Solution/findAnagrams(string,string)"
    },
    {
        "f": [],
        "fm": "int arrangeCoins(int n) {         return (int)((sqrt(8 * (long)n + 1) - 1)/ 2);     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_arrangeCoins_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_arrangeCoins_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/441. Arranging Coins .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=-627029101;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_arrangeCoins_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->arrangeCoins(n);\nAKA_fCall++;AKA_mark(\"Return from: ./25/441. Arranging Coins .cpp/Solution/arrangeCoins(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/441. Arranging Coins .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=-627029101;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int arrangeCoins(int n) {         return (int)((sqrt(8 * (long)n + 1) - 1)/ 2);     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/25/441. Arranging Coins .cpp/Solution/arrangeCoins(int)"
    },
    {
        "f": [],
        "fm": "ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {         stack<int> s1, s2, s;         while(l1 != NULL) {             s1.push(l1->val);             l1 = l1->next;         }         while(l2 != NULL) {             s2.push(l2->val);             l2 = l2->next;         }         int carry = 0;         while(!s1.empty() || !s2.empty()) {             int tempsum = carry;             if(!s1.empty()) {                 tempsum += s1.top();                 s1.pop();             }             if(!s2.empty()) {                 tempsum += s2.top();                 s2.pop();             }             carry = 0;             if(tempsum >= 10) {                 carry = 1;                 tempsum = tempsum - 10;             }             s.push(tempsum);         }         if(carry == 1)             s.push(1);         ListNode* result = new ListNode(0);         ListNode* cur = result;         while(!s.empty()) {             int top = s.top();             s.pop();             ListNode* node = new ListNode(top);             cur->next = node;             cur = cur->next;         }         return result->next;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_addTwoNumbers_ListNodemul_ListNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_addTwoNumbers_ListNodemul_ListNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/445. Add Two Numbers II.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1;\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_x=1538037549;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0 = new ::ListNode(l10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0).val=-850015137;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next0_x=-1737418395;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_0 = new ::ListNode(l10_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).val=-547067094;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next1_x=-641014166;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_1 = new ::ListNode(l10_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).val=2048841318;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_1);\n(*AKA_VECTOR_INIT_l1_0).next = AKA_VECTOR_INIT_l1_0_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_0);\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_x=1800319837;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1 = new ::ListNode(l11_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1).val=-909808504;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_next0_x=-224180178;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1_DOT_next_0 = new ::ListNode(l11_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_0).val=1080583468;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_1_DOT_next.push_back(AKA_VECTOR_INIT_l1_1_DOT_next_0);\n(*AKA_VECTOR_INIT_l1_1).next = AKA_VECTOR_INIT_l1_1_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_1);\n\nListNode* l1 = AKA_VECTOR_INIT_l1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2;\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_x=1534885032;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_0/l2/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0 = new ::ListNode(l20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0).val=-1533411864;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_next0_x=1931253592;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_0/l2/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0_DOT_next_0 = new ::ListNode(l20_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0_DOT_next_0).val=2011030832;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_0_DOT_next_0).next;\nAKA_VECTOR_INIT_l2_0_DOT_next.push_back(AKA_VECTOR_INIT_l2_0_DOT_next_0);\n(*AKA_VECTOR_INIT_l2_0).next = AKA_VECTOR_INIT_l2_0_DOT_next[0];\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_0);\n\nListNode* l2 = AKA_VECTOR_INIT_l2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode l1 */\n/* PointerStructureDataNode l2 */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_addTwoNumbers_ListNodemul_ListNodemul_random_4\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->addTwoNumbers(l1,l2);\nAKA_fCall++;AKA_mark(\"Return from: ./25/445. Add Two Numbers II.cpp/Solution/addTwoNumbers(ListNode*,ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/445. Add Two Numbers II.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1;\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_x=1538037549;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0 = new ::ListNode(l10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0).val=-850015137;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next0_x=-1737418395;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_0 = new ::ListNode(l10_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).val=-547067094;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next1_x=-641014166;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_1 = new ::ListNode(l10_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).val=2048841318;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_1);\n(*AKA_VECTOR_INIT_l1_0).next = AKA_VECTOR_INIT_l1_0_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_0);\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_x=1800319837;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1 = new ::ListNode(l11_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1).val=-909808504;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_next0_x=-224180178;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1_DOT_next_0 = new ::ListNode(l11_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_0).val=1080583468;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_1_DOT_next.push_back(AKA_VECTOR_INIT_l1_1_DOT_next_0);\n(*AKA_VECTOR_INIT_l1_1).next = AKA_VECTOR_INIT_l1_1_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_1);\n\nListNode* l1 = AKA_VECTOR_INIT_l1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2;\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_x=1534885032;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_0/l2/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0 = new ::ListNode(l20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0).val=-1533411864;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_next0_x=1931253592;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_0/l2/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0_DOT_next_0 = new ::ListNode(l20_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0_DOT_next_0).val=2011030832;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_0_DOT_next_0).next;\nAKA_VECTOR_INIT_l2_0_DOT_next.push_back(AKA_VECTOR_INIT_l2_0_DOT_next_0);\n(*AKA_VECTOR_INIT_l2_0).next = AKA_VECTOR_INIT_l2_0_DOT_next[0];\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_0);\n\nListNode* l2 = AKA_VECTOR_INIT_l2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode l1 */\n/* PointerStructureDataNode l2 */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_addTwoNumbers_ListNodemul_ListNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_addTwoNumbers_ListNodemul_ListNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/445. Add Two Numbers II.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1;\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_x=-535641023;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0 = new ::ListNode(l10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0).val=-84999307;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next0_x=-1710982553;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_0 = new ::ListNode(l10_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).val=1155045360;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next1_x=-1291239355;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_1 = new ::ListNode(l10_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).val=-1849083634;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_1);\n(*AKA_VECTOR_INIT_l1_0).next = AKA_VECTOR_INIT_l1_0_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_0);\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_x=-1454908761;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1 = new ::ListNode(l11_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1).val=904544160;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_next0_x=-1084646012;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1_DOT_next_0 = new ::ListNode(l11_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_0).val=1958406036;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_1_DOT_next.push_back(AKA_VECTOR_INIT_l1_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_next1_x=-790594611;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1_DOT_next_1 = new ::ListNode(l11_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_1).val=-547347858;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_1_DOT_next.push_back(AKA_VECTOR_INIT_l1_1_DOT_next_1);\n(*AKA_VECTOR_INIT_l1_1).next = AKA_VECTOR_INIT_l1_1_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_1);\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l12_x=-676684960;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_2/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_2 = new ::ListNode(l12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_2).val=-1461096283;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_2_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l12_next0_x=346480941;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_2/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_2_DOT_next_0 = new ::ListNode(l12_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_0).val=-2076214036;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_2_DOT_next.push_back(AKA_VECTOR_INIT_l1_2_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l12_next1_x=2122233765;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_2/l1/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_2_DOT_next_1 = new ::ListNode(l12_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_1).val=-528889055;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_2_DOT_next.push_back(AKA_VECTOR_INIT_l1_2_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l12_next2_x=-531861102;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_2/l1/next/next[2]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_2_DOT_next_2 = new ::ListNode(l12_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_2).val=-1256491282;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_2).next;\nAKA_VECTOR_INIT_l1_2_DOT_next.push_back(AKA_VECTOR_INIT_l1_2_DOT_next_2);\n(*AKA_VECTOR_INIT_l1_2).next = AKA_VECTOR_INIT_l1_2_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_2);\n\nListNode* l1 = AKA_VECTOR_INIT_l1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2;\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_x=-156590224;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_0/l2/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0 = new ::ListNode(l20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0).val=1644594084;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_0).next;\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_0);\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l21_x=330045420;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_1/l2/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_1 = new ::ListNode(l21_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_1).val=-1113219626;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_1).next;\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_1);\n\nListNode* l2 = AKA_VECTOR_INIT_l2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode l1 */\n/* PointerStructureDataNode l2 */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_addTwoNumbers_ListNodemul_ListNodemul_random_2\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->addTwoNumbers(l1,l2);\nAKA_fCall++;AKA_mark(\"Return from: ./25/445. Add Two Numbers II.cpp/Solution/addTwoNumbers(ListNode*,ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/445. Add Two Numbers II.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1;\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_x=-535641023;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0 = new ::ListNode(l10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0).val=-84999307;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next0_x=-1710982553;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_0 = new ::ListNode(l10_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).val=1155045360;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next1_x=-1291239355;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_1 = new ::ListNode(l10_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).val=-1849083634;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_1);\n(*AKA_VECTOR_INIT_l1_0).next = AKA_VECTOR_INIT_l1_0_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_0);\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_x=-1454908761;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1 = new ::ListNode(l11_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1).val=904544160;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_next0_x=-1084646012;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1_DOT_next_0 = new ::ListNode(l11_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_0).val=1958406036;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_1_DOT_next.push_back(AKA_VECTOR_INIT_l1_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_next1_x=-790594611;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1_DOT_next_1 = new ::ListNode(l11_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_1).val=-547347858;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_1_DOT_next.push_back(AKA_VECTOR_INIT_l1_1_DOT_next_1);\n(*AKA_VECTOR_INIT_l1_1).next = AKA_VECTOR_INIT_l1_1_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_1);\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l12_x=-676684960;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_2/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_2 = new ::ListNode(l12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_2).val=-1461096283;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_2_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l12_next0_x=346480941;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_2/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_2_DOT_next_0 = new ::ListNode(l12_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_0).val=-2076214036;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_2_DOT_next.push_back(AKA_VECTOR_INIT_l1_2_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l12_next1_x=2122233765;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_2/l1/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_2_DOT_next_1 = new ::ListNode(l12_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_1).val=-528889055;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_2_DOT_next.push_back(AKA_VECTOR_INIT_l1_2_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l12_next2_x=-531861102;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_2/l1/next/next[2]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_2_DOT_next_2 = new ::ListNode(l12_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_2).val=-1256491282;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_2).next;\nAKA_VECTOR_INIT_l1_2_DOT_next.push_back(AKA_VECTOR_INIT_l1_2_DOT_next_2);\n(*AKA_VECTOR_INIT_l1_2).next = AKA_VECTOR_INIT_l1_2_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_2);\n\nListNode* l1 = AKA_VECTOR_INIT_l1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2;\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_x=-156590224;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_0/l2/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0 = new ::ListNode(l20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0).val=1644594084;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_0).next;\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_0);\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l21_x=330045420;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_1/l2/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_1 = new ::ListNode(l21_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_1).val=-1113219626;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_1).next;\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_1);\n\nListNode* l2 = AKA_VECTOR_INIT_l2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode l1 */\n/* PointerStructureDataNode l2 */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {},
                "td": "void AKA_TEST_Solution_addTwoNumbers_ListNodemul_ListNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_addTwoNumbers_ListNodemul_ListNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/445. Add Two Numbers II.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1;\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_x=-1325061674;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0 = new ::ListNode(l10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0).val=-1162610204;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next0_x=-197016748;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_0 = new ::ListNode(l10_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).val=-367078016;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next1_x=2036964759;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_1 = new ::ListNode(l10_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).val=441104165;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_1);\n(*AKA_VECTOR_INIT_l1_0).next = AKA_VECTOR_INIT_l1_0_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_0);\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_x=200623363;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1 = new ::ListNode(l11_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1).val=-111540023;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_next0_x=967331314;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1_DOT_next_0 = new ::ListNode(l11_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_0).val=1470735049;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_1_DOT_next.push_back(AKA_VECTOR_INIT_l1_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_next1_x=-250637808;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1_DOT_next_1 = new ::ListNode(l11_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_1).val=-2103308289;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_1_DOT_next.push_back(AKA_VECTOR_INIT_l1_1_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_next2_x=1115378486;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/next/next[2]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1_DOT_next_2 = new ::ListNode(l11_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_2).val=821011497;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_2).next;\nAKA_VECTOR_INIT_l1_1_DOT_next.push_back(AKA_VECTOR_INIT_l1_1_DOT_next_2);\n(*AKA_VECTOR_INIT_l1_1).next = AKA_VECTOR_INIT_l1_1_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_1);\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l12_x=-969028876;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_2/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_2 = new ::ListNode(l12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_2).val=571432046;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_2_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l12_next0_x=-346743674;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_2/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_2_DOT_next_0 = new ::ListNode(l12_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_0).val=-2110876676;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_2_DOT_next.push_back(AKA_VECTOR_INIT_l1_2_DOT_next_0);\n(*AKA_VECTOR_INIT_l1_2).next = AKA_VECTOR_INIT_l1_2_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_2);\n\nListNode* l1 = AKA_VECTOR_INIT_l1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2;\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_x=1020844223;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_0/l2/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0 = new ::ListNode(l20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0).val=-464384844;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_next0_x=966159875;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_0/l2/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0_DOT_next_0 = new ::ListNode(l20_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0_DOT_next_0).val=1179177551;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_0_DOT_next_0).next;\nAKA_VECTOR_INIT_l2_0_DOT_next.push_back(AKA_VECTOR_INIT_l2_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_next1_x=1855688738;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_0/l2/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0_DOT_next_1 = new ::ListNode(l20_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0_DOT_next_1).val=-1958658889;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_0_DOT_next_1).next;\nAKA_VECTOR_INIT_l2_0_DOT_next.push_back(AKA_VECTOR_INIT_l2_0_DOT_next_1);\n(*AKA_VECTOR_INIT_l2_0).next = AKA_VECTOR_INIT_l2_0_DOT_next[0];\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_0);\n\nListNode* l2 = AKA_VECTOR_INIT_l2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode l1 */\n/* PointerStructureDataNode l2 */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_addTwoNumbers_ListNodemul_ListNodemul_random_3\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->addTwoNumbers(l1,l2);\nAKA_fCall++;AKA_mark(\"Return from: ./25/445. Add Two Numbers II.cpp/Solution/addTwoNumbers(ListNode*,ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/445. Add Two Numbers II.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1;\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_x=-1325061674;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0 = new ::ListNode(l10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0).val=-1162610204;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next0_x=-197016748;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_0 = new ::ListNode(l10_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).val=-367078016;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l10_next1_x=2036964759;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_0/l1/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_0_DOT_next_1 = new ::ListNode(l10_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).val=441104165;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_0_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_0_DOT_next.push_back(AKA_VECTOR_INIT_l1_0_DOT_next_1);\n(*AKA_VECTOR_INIT_l1_0).next = AKA_VECTOR_INIT_l1_0_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_0);\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_x=200623363;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1 = new ::ListNode(l11_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1).val=-111540023;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_next0_x=967331314;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1_DOT_next_0 = new ::ListNode(l11_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_0).val=1470735049;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_1_DOT_next.push_back(AKA_VECTOR_INIT_l1_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_next1_x=-250637808;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1_DOT_next_1 = new ::ListNode(l11_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_1).val=-2103308289;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_1).next;\nAKA_VECTOR_INIT_l1_1_DOT_next.push_back(AKA_VECTOR_INIT_l1_1_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l11_next2_x=1115378486;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_1/l1/next/next[2]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_1_DOT_next_2 = new ::ListNode(l11_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_2).val=821011497;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_1_DOT_next_2).next;\nAKA_VECTOR_INIT_l1_1_DOT_next.push_back(AKA_VECTOR_INIT_l1_1_DOT_next_2);\n(*AKA_VECTOR_INIT_l1_1).next = AKA_VECTOR_INIT_l1_1_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_1);\n\n\n/* SubStructDataNode l1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l12_x=-969028876;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_2/l1/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_2 = new ::ListNode(l12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_2).val=571432046;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l1_2_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l12_next0_x=-346743674;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l1/AKA_VECTOR_INIT_l1_2/l1/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l1_2_DOT_next_0 = new ::ListNode(l12_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_0).val=-2110876676;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l1_2_DOT_next_0).next;\nAKA_VECTOR_INIT_l1_2_DOT_next.push_back(AKA_VECTOR_INIT_l1_2_DOT_next_0);\n(*AKA_VECTOR_INIT_l1_2).next = AKA_VECTOR_INIT_l1_2_DOT_next[0];\n\nAKA_VECTOR_INIT_l1.push_back(AKA_VECTOR_INIT_l1_2);\n\nListNode* l1 = AKA_VECTOR_INIT_l1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2;\n\n\n/* SubStructDataNode l2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_x=1020844223;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_0/l2/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0 = new ::ListNode(l20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0).val=-464384844;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_l2_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_next0_x=966159875;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_0/l2/next/next[0]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0_DOT_next_0 = new ::ListNode(l20_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0_DOT_next_0).val=1179177551;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_0_DOT_next_0).next;\nAKA_VECTOR_INIT_l2_0_DOT_next.push_back(AKA_VECTOR_INIT_l2_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint l20_next1_x=1855688738;\nAKA_mark(\"Calling: ./25/445. Add Two Numbers II.cpp/ListNode/ListNode(int)|ROOT/445. Add Two Numbers II.cpp/addTwoNumbers(ListNode*,ListNode*)/l2/AKA_VECTOR_INIT_l2_0/l2/next/next[1]/next/ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l2_0_DOT_next_1 = new ::ListNode(l20_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l2_0_DOT_next_1).val=-1958658889;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_l2_0_DOT_next_1).next;\nAKA_VECTOR_INIT_l2_0_DOT_next.push_back(AKA_VECTOR_INIT_l2_0_DOT_next_1);\n(*AKA_VECTOR_INIT_l2_0).next = AKA_VECTOR_INIT_l2_0_DOT_next[0];\n\nAKA_VECTOR_INIT_l2.push_back(AKA_VECTOR_INIT_l2_0);\n\nListNode* l2 = AKA_VECTOR_INIT_l2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode l1 */\n/* PointerStructureDataNode l2 */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {         stack<int> s1, s2, s;         while(l1 != NULL) {             s1.push(l1->val);             l1 = l1->next;         }         while(l2 != NULL) {             s2.push(l2->val);             l2 = l2->next;         }         int carry = 0;         while(!s1.empty() || !s2.empty()) {             int tempsum = carry;             if(!s1.empty()) {                 tempsum += s1.top();                 s1.pop();             }             if(!s2.empty()) {                 tempsum += s2.top();                 s2.pop();             }             carry = 0;             if(tempsum >= 10) {                 carry = 1;                 tempsum = tempsum - 10;             }             s.push(tempsum);         }         if(carry == 1)             s.push(1);         ListNode* result = new ListNode(0);         ListNode* cur = result;         while(!s.empty()) {             int top = s.top();             s.pop();             ListNode* node = new ListNode(top);             cur->next = node;             cur = cur->next;         }         return result->next;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/25/445. Add Two Numbers II.cpp/Solution/addTwoNumbers(ListNode*,ListNode*)"
    },
    {
        "f": [],
        "fm": "int numberOfBoomerangs(vector<pair<int, int>>& points) {         int cnt = 0;         for(int i = 0; i < points.size(); i++) {             map<int, int> m;             int x1 = points[i].first, y1 = points[i].second;             for(int j = 0; j < points.size(); j++) {                 if(j == i) continue;                 int x2 = points[j].first, y2 = points[j].second;                 int dis = (x1 - x2)*(x1 - x2) + (y1 - y2)*(y1 - y2);                 m[dis]++;             }             for(auto it = m.begin(); it != m.end(); it++) {                 cnt += it->second * (it->second - 1);             }         }         return cnt;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_numberOfBoomerangs_vector_pair_int_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_numberOfBoomerangs_vector_pair_int_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/447. Number of Boomerangs .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<pair<int, int>> points;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode points */\npair<int, int> points_element0;\n/* NormalNumberDataNode first */\npoints_element0.first=-1507208321;\n/* NormalNumberDataNode second */\npoints_element0.second=-1331913321;\npoints.push_back(points_element0);\npair<int, int> points_element1;\n/* NormalNumberDataNode first */\npoints_element1.first=-1023147118;\n/* NormalNumberDataNode second */\npoints_element1.second=-1488592018;\npoints.push_back(points_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_numberOfBoomerangs_vector_pair_int_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->numberOfBoomerangs(points);\nAKA_fCall++;AKA_mark(\"Return from: ./25/447. Number of Boomerangs .cpp/Solution/numberOfBoomerangs(vector<pair<int,int>>&)\");\n\n\nvector<pair<int, int>> EXPECTED_points;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/447. Number of Boomerangs .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<pair<int, int>> points;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode points */\npair<int, int> points_element0;\n/* NormalNumberDataNode first */\npoints_element0.first=-1507208321;\n/* NormalNumberDataNode second */\npoints_element0.second=-1331913321;\npoints.push_back(points_element0);\npair<int, int> points_element1;\n/* NormalNumberDataNode first */\npoints_element1.first=-1023147118;\n/* NormalNumberDataNode second */\npoints_element1.second=-1488592018;\npoints.push_back(points_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_numberOfBoomerangs_vector_pair_int_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_numberOfBoomerangs_vector_pair_int_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/447. Number of Boomerangs .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<pair<int, int>> points;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode points */\npair<int, int> points_element0;\n/* NormalNumberDataNode first */\npoints_element0.first=-537877269;\n/* NormalNumberDataNode second */\npoints_element0.second=1332429448;\npoints.push_back(points_element0);\npair<int, int> points_element1;\n/* NormalNumberDataNode first */\npoints_element1.first=171067303;\n/* NormalNumberDataNode second */\npoints_element1.second=1389956484;\npoints.push_back(points_element1);\npair<int, int> points_element2;\n/* NormalNumberDataNode first */\npoints_element2.first=427609235;\n/* NormalNumberDataNode second */\npoints_element2.second=-1467574199;\npoints.push_back(points_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_numberOfBoomerangs_vector_pair_int_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->numberOfBoomerangs(points);\nAKA_fCall++;AKA_mark(\"Return from: ./25/447. Number of Boomerangs .cpp/Solution/numberOfBoomerangs(vector<pair<int,int>>&)\");\n\n\nvector<pair<int, int>> EXPECTED_points;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/447. Number of Boomerangs .cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<pair<int, int>> points;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode points */\npair<int, int> points_element0;\n/* NormalNumberDataNode first */\npoints_element0.first=-537877269;\n/* NormalNumberDataNode second */\npoints_element0.second=1332429448;\npoints.push_back(points_element0);\npair<int, int> points_element1;\n/* NormalNumberDataNode first */\npoints_element1.first=171067303;\n/* NormalNumberDataNode second */\npoints_element1.second=1389956484;\npoints.push_back(points_element1);\npair<int, int> points_element2;\n/* NormalNumberDataNode first */\npoints_element2.first=427609235;\n/* NormalNumberDataNode second */\npoints_element2.second=-1467574199;\npoints.push_back(points_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int numberOfBoomerangs(vector<pair<int, int>>& points) {         int cnt = 0;         for(int i = 0; i < points.size(); i++) {             map<int, int> m;             int x1 = points[i].first, y1 = points[i].second;             for(int j = 0; j < points.size(); j++) {                 if(j == i) continue;                 int x2 = points[j].first, y2 = points[j].second;                 int dis = (x1 - x2)*(x1 - x2) + (y1 - y2)*(y1 - y2);                 m[dis]++;             }             for(auto it = m.begin(); it != m.end(); it++) {                 cnt += it->second * (it->second - 1);             }         }         return cnt;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/25/447. Number of Boomerangs .cpp/Solution/numberOfBoomerangs(vector<pair<int,int>>&)"
    },
    {
        "f": [],
        "fm": "string frequencySort(string s) {         int cnt[256] = {0};         for(int i = 0; i < s.length(); i++)             cnt[s[i]]++;         sort(s.begin(), s.end(), [&](char a, char b) {             return cnt[a] > cnt[b] || (cnt[a] == cnt[b] && a < b);         });         return s;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_frequencySort_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_frequencySort_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/451. Sort Characters By Frequency.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName529013 = new char[2];akaRandomName529013[0] = 103;akaRandomName529013[1] = '\\0';string s=akaRandomName529013;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_frequencySort_string_random_1\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->frequencySort(s);\nAKA_fCall++;AKA_mark(\"Return from: ./25/451. Sort Characters By Frequency.cpp/Solution/frequencySort(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/451. Sort Characters By Frequency.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName740589 = new char[2];akaRandomName740589[0] = 103;akaRandomName740589[1] = '\\0';string s=akaRandomName740589;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_frequencySort_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_frequencySort_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/451. Sort Characters By Frequency.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName656057 = new char[2];akaRandomName656057[0] = 84;akaRandomName656057[1] = '\\0';string s=akaRandomName656057;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_frequencySort_string_random_0\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->frequencySort(s);\nAKA_fCall++;AKA_mark(\"Return from: ./25/451. Sort Characters By Frequency.cpp/Solution/frequencySort(string)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/451. Sort Characters By Frequency.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName513142 = new char[2];akaRandomName513142[0] = 84;akaRandomName513142[1] = '\\0';string s=akaRandomName513142;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     string frequencySort(string s) {         int cnt[256] = {0};         for(int i = 0; i < s.length(); i++)             cnt[s[i]]++;         sort(s.begin(), s.end(), [&](char a, char b) {             return cnt[a] > cnt[b] || (cnt[a] == cnt[b] && a < b);         });         return s;     }; };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/25/451. Sort Characters By Frequency.cpp/Solution/frequencySort(string)"
    },
    {
        "f": [],
        "fm": "int minMoves(vector<int>& nums) {         int minn = INT_MAX;         for(int i = 0; i < nums.size(); i++)             minn = min(minn, nums[i]);         int cnt = 0;         for(int i = 0; i < nums.size(); i++)             cnt += nums[i] - minn;         return cnt;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_minMoves_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_minMoves_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/453. Minimum Moves to Equal Array Elements.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-449116644;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minMoves_vector_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minMoves(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./25/453. Minimum Moves to Equal Array Elements.cpp/Solution/minMoves(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/453. Minimum Moves to Equal Array Elements.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-449116644;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int minMoves(vector<int>& nums) {         int minn = INT_MAX;         for(int i = 0; i < nums.size(); i++)             minn = min(minn, nums[i]);         int cnt = 0;         for(int i = 0; i < nums.size(); i++)             cnt += nums[i] - minn;         return cnt;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/25/453. Minimum Moves to Equal Array Elements.cpp/Solution/minMoves(vector<int>&)"
    },
    {
        "f": [],
        "fm": "int fourSumCount(vector<int>& A, vector<int>& B, vector<int>& C, vector<int>& D) {         map<int, int> m1, m2;         int result = 0, n = A.size();         for(int i = 0; i < n; i++) {             for(int j = 0; j < n; j++) {                 int t1 = A[i] + B[j];                 int t2 = C[i] + D[j];                 m1[t1]++;                 m2[t2]++;             }         }         for(auto it = m1.begin(); it != m1.end(); it++)             result += it->second * m2[0 - it->first];         return result;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_fourSumCount_vector_int_vector_int_vector_int_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_fourSumCount_vector_int_vector_int_vector_int_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/454. 4Sum II.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> A;\nvector<int> B;\nvector<int> C;\nvector<int> D;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode A */\nint A_element0=-386341157;\nA.push_back(A_element0);\nint A_element1=29571984;\nA.push_back(A_element1);\nint A_element2=-1012236311;\nA.push_back(A_element2);\n/* VectorDataNode B */\nint B_element0=1986687414;\nB.push_back(B_element0);\nint B_element1=994740880;\nB.push_back(B_element1);\nint B_element2=-2059930980;\nB.push_back(B_element2);\n/* VectorDataNode C */\nint C_element0=-2007403663;\nC.push_back(C_element0);\nint C_element1=1849724799;\nC.push_back(C_element1);\n/* VectorDataNode D */\nint D_element0=518769399;\nD.push_back(D_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fourSumCount_vector_int_vector_int_vector_int_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fourSumCount(A,B,C,D);\nAKA_fCall++;AKA_mark(\"Return from: ./25/454. 4Sum II.cpp/Solution/fourSumCount(vector<int>&,vector<int>&,vector<int>&,vector<int>&)\");\n\n\nvector<int> EXPECTED_A;\n\nvector<int> EXPECTED_B;\n\nvector<int> EXPECTED_C;\n\nvector<int> EXPECTED_D;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/454. 4Sum II.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> A;\nvector<int> B;\nvector<int> C;\nvector<int> D;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode A */\nint A_element0=-386341157;\nA.push_back(A_element0);\nint A_element1=29571984;\nA.push_back(A_element1);\nint A_element2=-1012236311;\nA.push_back(A_element2);\n/* VectorDataNode B */\nint B_element0=1986687414;\nB.push_back(B_element0);\nint B_element1=994740880;\nB.push_back(B_element1);\nint B_element2=-2059930980;\nB.push_back(B_element2);\n/* VectorDataNode C */\nint C_element0=-2007403663;\nC.push_back(C_element0);\nint C_element1=1849724799;\nC.push_back(C_element1);\n/* VectorDataNode D */\nint D_element0=518769399;\nD.push_back(D_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int fourSumCount(vector<int>& A, vector<int>& B, vector<int>& C, vector<int>& D) {         map<int, int> m1, m2;         int result = 0, n = A.size();         for(int i = 0; i < n; i++) {             for(int j = 0; j < n; j++) {                 int t1 = A[i] + B[j];                 int t2 = C[i] + D[j];                 m1[t1]++;                 m2[t2]++;             }         }         for(auto it = m1.begin(); it != m1.end(); it++)             result += it->second * m2[0 - it->first];         return result;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/25/454. 4Sum II.cpp/Solution/fourSumCount(vector<int>&,vector<int>&,vector<int>&,vector<int>&)"
    }
]
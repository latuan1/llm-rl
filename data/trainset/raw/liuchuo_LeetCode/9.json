[
    {
        "f": [],
        "fm": "int subarraySum(vector<int>& nums, int k) {         int n = nums.size();         vector<int> sums(n + 1, 0);         sums[0] = 0;         for (int i = 1; i <= n; i++) {             sums[i] = sums[i - 1] + nums[i - 1];         }         int count = 0;         for (int start = 0; start < n; start++) {             for (int end = start + 1; end <= n; end++) {                 if (sums[end] - sums[start] == k) count++;             }         }         return count;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_subarraySum_vector_int_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_subarraySum_vector_int_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/560-subarray-sum-equals-k.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint k=-1241829540;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1668255284;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_subarraySum_vector_int_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->subarraySum(nums,k);\nAKA_fCall++;AKA_mark(\"Return from: ./9/560-subarray-sum-equals-k.cpp/Solution/subarraySum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/560-subarray-sum-equals-k.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint k=-1241829540;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1668255284;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int subarraySum(vector<int>& nums, int k) {         int n = nums.size();         vector<int> sums(n + 1, 0);         sums[0] = 0;         for (int i = 1; i <= n; i++) {             sums[i] = sums[i - 1] + nums[i - 1];         }         int count = 0;         for (int start = 0; start < n; start++) {             for (int end = start + 1; end <= n; end++) {                 if (sums[end] - sums[start] == k) count++;             }         }         return count;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/9/560-subarray-sum-equals-k.cpp/Solution/subarraySum(vector<int>&,int)"
    },
    {
        "f": [],
        "fm": "int arrayPairSum(vector<int>& nums) {         sort(nums.begin(), nums.end());         int sum = 0;         for (int i = 0; i < nums.size(); i = i + 2) {             sum += min(nums[i], nums[i + 1]);         }         return sum;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_arrayPairSum_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_arrayPairSum_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/561-array-partition-i.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1050910450;\nnums.push_back(nums_element0);\nint nums_element1=835082612;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_arrayPairSum_vector_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->arrayPairSum(nums);\nAKA_fCall++;AKA_mark(\"Return from: ./9/561-array-partition-i.cpp/Solution/arrayPairSum(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/561-array-partition-i.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1050910450;\nnums.push_back(nums_element0);\nint nums_element1=835082612;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int arrayPairSum(vector<int>& nums) {         sort(nums.begin(), nums.end());         int sum = 0;         for (int i = 0; i < nums.size(); i = i + 2) {             sum += min(nums[i], nums[i + 1]);         }         return sum;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/9/561-array-partition-i.cpp/Solution/arrayPairSum(vector<int>&)"
    },
    {
        "f": [],
        "fm": "bool isIdentical(TreeNode* a, TreeNode* b) {         if (a == nullptr && b == nullptr) {             return true;         } else if (a != nullptr && b != nullptr) {             return a->val == b->val && isIdentical(a->left, b->left) && isIdentical(a->right, b->right);         } else {             return false;         }     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_isIdentical_TreeNodemul_TreeNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_isIdentical_TreeNodemul_TreeNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/572-subtree-of-another-tree.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_a;\n\n\n/* SubStructDataNode a */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint a0_x=-581338978;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/a/AKA_VECTOR_INIT_a_0/a/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_a_0 = new ::TreeNode(a0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_a_0).val=1724476523;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_a_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint a0_left0_x=1684333381;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/a/AKA_VECTOR_INIT_a_0/a/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_a_0_DOT_left_0 = new ::TreeNode(a0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_a_0_DOT_left_0).val=995772721;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_a_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_a_0_DOT_left_0).right;\nAKA_VECTOR_INIT_a_0_DOT_left.push_back(AKA_VECTOR_INIT_a_0_DOT_left_0);\n(*AKA_VECTOR_INIT_a_0).left = AKA_VECTOR_INIT_a_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_a_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint a0_right0_x=59929020;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/a/AKA_VECTOR_INIT_a_0/a/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_a_0_DOT_right_0 = new ::TreeNode(a0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_a_0_DOT_right_0).val=563212828;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_a_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_a_0_DOT_right_0).right;\nAKA_VECTOR_INIT_a_0_DOT_right.push_back(AKA_VECTOR_INIT_a_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint a0_right1_x=-5420145;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/a/AKA_VECTOR_INIT_a_0/a/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_a_0_DOT_right_1 = new ::TreeNode(a0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_a_0_DOT_right_1).val=-1955505916;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_a_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_a_0_DOT_right_1).right;\nAKA_VECTOR_INIT_a_0_DOT_right.push_back(AKA_VECTOR_INIT_a_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint a0_right2_x=-659969119;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/a/AKA_VECTOR_INIT_a_0/a/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_a_0_DOT_right_2 = new ::TreeNode(a0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_a_0_DOT_right_2).val=-613915775;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_a_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_a_0_DOT_right_2).right;\nAKA_VECTOR_INIT_a_0_DOT_right.push_back(AKA_VECTOR_INIT_a_0_DOT_right_2);\n(*AKA_VECTOR_INIT_a_0).right = AKA_VECTOR_INIT_a_0_DOT_right[0];\n\nAKA_VECTOR_INIT_a.push_back(AKA_VECTOR_INIT_a_0);\n\nTreeNode* a = AKA_VECTOR_INIT_a[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_b;\n\n\n/* SubStructDataNode b */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint b0_x=1274250251;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/b/AKA_VECTOR_INIT_b_0/b/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_b_0 = new ::TreeNode(b0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_b_0).val=-2050739498;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_b_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint b0_left0_x=41394868;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/b/AKA_VECTOR_INIT_b_0/b/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_b_0_DOT_left_0 = new ::TreeNode(b0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_b_0_DOT_left_0).val=395194114;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_b_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_b_0_DOT_left_0).right;\nAKA_VECTOR_INIT_b_0_DOT_left.push_back(AKA_VECTOR_INIT_b_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint b0_left1_x=21297926;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/b/AKA_VECTOR_INIT_b_0/b/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_b_0_DOT_left_1 = new ::TreeNode(b0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_b_0_DOT_left_1).val=-685272961;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_b_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_b_0_DOT_left_1).right;\nAKA_VECTOR_INIT_b_0_DOT_left.push_back(AKA_VECTOR_INIT_b_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint b0_left2_x=-1774582540;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/b/AKA_VECTOR_INIT_b_0/b/left/left[2]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_b_0_DOT_left_2 = new ::TreeNode(b0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_b_0_DOT_left_2).val=169336741;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_b_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_b_0_DOT_left_2).right;\nAKA_VECTOR_INIT_b_0_DOT_left.push_back(AKA_VECTOR_INIT_b_0_DOT_left_2);\n(*AKA_VECTOR_INIT_b_0).left = AKA_VECTOR_INIT_b_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_b_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint b0_right0_x=365426899;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/b/AKA_VECTOR_INIT_b_0/b/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_b_0_DOT_right_0 = new ::TreeNode(b0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_b_0_DOT_right_0).val=-838511275;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_b_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_b_0_DOT_right_0).right;\nAKA_VECTOR_INIT_b_0_DOT_right.push_back(AKA_VECTOR_INIT_b_0_DOT_right_0);\n(*AKA_VECTOR_INIT_b_0).right = AKA_VECTOR_INIT_b_0_DOT_right[0];\n\nAKA_VECTOR_INIT_b.push_back(AKA_VECTOR_INIT_b_0);\n\nTreeNode* b = AKA_VECTOR_INIT_b[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode a */\n/* PointerStructureDataNode b */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isIdentical_TreeNodemul_TreeNodemul_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isIdentical(a,b);\nAKA_fCall++;AKA_mark(\"Return from: ./9/572-subtree-of-another-tree.cpp/Solution/isIdentical(TreeNode*,TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/572-subtree-of-another-tree.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_a;\n\n\n/* SubStructDataNode a */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint a0_x=-581338978;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/a/AKA_VECTOR_INIT_a_0/a/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_a_0 = new ::TreeNode(a0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_a_0).val=1724476523;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_a_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint a0_left0_x=1684333381;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/a/AKA_VECTOR_INIT_a_0/a/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_a_0_DOT_left_0 = new ::TreeNode(a0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_a_0_DOT_left_0).val=995772721;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_a_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_a_0_DOT_left_0).right;\nAKA_VECTOR_INIT_a_0_DOT_left.push_back(AKA_VECTOR_INIT_a_0_DOT_left_0);\n(*AKA_VECTOR_INIT_a_0).left = AKA_VECTOR_INIT_a_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_a_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint a0_right0_x=59929020;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/a/AKA_VECTOR_INIT_a_0/a/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_a_0_DOT_right_0 = new ::TreeNode(a0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_a_0_DOT_right_0).val=563212828;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_a_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_a_0_DOT_right_0).right;\nAKA_VECTOR_INIT_a_0_DOT_right.push_back(AKA_VECTOR_INIT_a_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint a0_right1_x=-5420145;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/a/AKA_VECTOR_INIT_a_0/a/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_a_0_DOT_right_1 = new ::TreeNode(a0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_a_0_DOT_right_1).val=-1955505916;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_a_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_a_0_DOT_right_1).right;\nAKA_VECTOR_INIT_a_0_DOT_right.push_back(AKA_VECTOR_INIT_a_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint a0_right2_x=-659969119;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/a/AKA_VECTOR_INIT_a_0/a/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_a_0_DOT_right_2 = new ::TreeNode(a0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_a_0_DOT_right_2).val=-613915775;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_a_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_a_0_DOT_right_2).right;\nAKA_VECTOR_INIT_a_0_DOT_right.push_back(AKA_VECTOR_INIT_a_0_DOT_right_2);\n(*AKA_VECTOR_INIT_a_0).right = AKA_VECTOR_INIT_a_0_DOT_right[0];\n\nAKA_VECTOR_INIT_a.push_back(AKA_VECTOR_INIT_a_0);\n\nTreeNode* a = AKA_VECTOR_INIT_a[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_b;\n\n\n/* SubStructDataNode b */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint b0_x=1274250251;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/b/AKA_VECTOR_INIT_b_0/b/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_b_0 = new ::TreeNode(b0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_b_0).val=-2050739498;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_b_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint b0_left0_x=41394868;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/b/AKA_VECTOR_INIT_b_0/b/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_b_0_DOT_left_0 = new ::TreeNode(b0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_b_0_DOT_left_0).val=395194114;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_b_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_b_0_DOT_left_0).right;\nAKA_VECTOR_INIT_b_0_DOT_left.push_back(AKA_VECTOR_INIT_b_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint b0_left1_x=21297926;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/b/AKA_VECTOR_INIT_b_0/b/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_b_0_DOT_left_1 = new ::TreeNode(b0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_b_0_DOT_left_1).val=-685272961;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_b_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_b_0_DOT_left_1).right;\nAKA_VECTOR_INIT_b_0_DOT_left.push_back(AKA_VECTOR_INIT_b_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint b0_left2_x=-1774582540;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/b/AKA_VECTOR_INIT_b_0/b/left/left[2]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_b_0_DOT_left_2 = new ::TreeNode(b0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_b_0_DOT_left_2).val=169336741;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_b_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_b_0_DOT_left_2).right;\nAKA_VECTOR_INIT_b_0_DOT_left.push_back(AKA_VECTOR_INIT_b_0_DOT_left_2);\n(*AKA_VECTOR_INIT_b_0).left = AKA_VECTOR_INIT_b_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_b_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint b0_right0_x=365426899;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isIdentical(TreeNode*,TreeNode*)/b/AKA_VECTOR_INIT_b_0/b/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_b_0_DOT_right_0 = new ::TreeNode(b0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_b_0_DOT_right_0).val=-838511275;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_b_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_b_0_DOT_right_0).right;\nAKA_VECTOR_INIT_b_0_DOT_right.push_back(AKA_VECTOR_INIT_b_0_DOT_right_0);\n(*AKA_VECTOR_INIT_b_0).right = AKA_VECTOR_INIT_b_0_DOT_right[0];\n\nAKA_VECTOR_INIT_b.push_back(AKA_VECTOR_INIT_b_0);\n\nTreeNode* b = AKA_VECTOR_INIT_b[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode a */\n/* PointerStructureDataNode b */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     bool isIdentical(TreeNode* a, TreeNode* b) {         if (a == nullptr && b == nullptr) {             return true;         } else if (a != nullptr && b != nullptr) {             return a->val == b->val && isIdentical(a->left, b->left) && isIdentical(a->right, b->right);         } else {             return false;         }     }          bool isSubtree(TreeNode* s, TreeNode* t) {         if (s == nullptr && t == nullptr) {             return true;         }          if (s == nullptr || t == nullptr) {             return false;         }         if (s->val == t->val) {             return isIdentical(s, t) || isSubtree(s->left, t) || isSubtree(s->right, t);         }         return isSubtree(s->left, t) || isSubtree(s->right, t);     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/9/572-subtree-of-another-tree.cpp/Solution/isIdentical(TreeNode*,TreeNode*)"
    },
    {
        "f": [],
        "fm": "bool isSubtree(TreeNode* s, TreeNode* t) {         if (s == nullptr && t == nullptr) {             return true;         }          if (s == nullptr || t == nullptr) {             return false;         }         if (s->val == t->val) {             return isIdentical(s, t) || isSubtree(s->left, t) || isSubtree(s->right, t);         }         return isSubtree(s->left, t) || isSubtree(s->right, t);     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_isSubtree_TreeNodemul_TreeNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_isSubtree_TreeNodemul_TreeNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/572-subtree-of-another-tree.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_s;\n\n\n/* SubStructDataNode s */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint s0_x=-1617600588;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/s/AKA_VECTOR_INIT_s_0/s/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_s_0 = new ::TreeNode(s0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_s_0).val=1660268461;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_s_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint s0_left0_x=-1135203688;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/s/AKA_VECTOR_INIT_s_0/s/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_s_0_DOT_left_0 = new ::TreeNode(s0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_s_0_DOT_left_0).val=-590600230;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_s_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_s_0_DOT_left_0).right;\nAKA_VECTOR_INIT_s_0_DOT_left.push_back(AKA_VECTOR_INIT_s_0_DOT_left_0);\n(*AKA_VECTOR_INIT_s_0).left = AKA_VECTOR_INIT_s_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_s_0).right;\n\nAKA_VECTOR_INIT_s.push_back(AKA_VECTOR_INIT_s_0);\n\n\n/* SubStructDataNode s */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint s1_x=-1991483738;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/s/AKA_VECTOR_INIT_s_1/s/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_s_1 = new ::TreeNode(s1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_s_1).val=325342677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_s_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_s_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint s1_right0_x=1968654792;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/s/AKA_VECTOR_INIT_s_1/s/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_s_1_DOT_right_0 = new ::TreeNode(s1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_s_1_DOT_right_0).val=330986891;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_s_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_s_1_DOT_right_0).right;\nAKA_VECTOR_INIT_s_1_DOT_right.push_back(AKA_VECTOR_INIT_s_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint s1_right1_x=-1666846381;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/s/AKA_VECTOR_INIT_s_1/s/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_s_1_DOT_right_1 = new ::TreeNode(s1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_s_1_DOT_right_1).val=1436130257;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_s_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_s_1_DOT_right_1).right;\nAKA_VECTOR_INIT_s_1_DOT_right.push_back(AKA_VECTOR_INIT_s_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint s1_right2_x=764362659;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/s/AKA_VECTOR_INIT_s_1/s/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_s_1_DOT_right_2 = new ::TreeNode(s1_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_s_1_DOT_right_2).val=1331742635;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_s_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_s_1_DOT_right_2).right;\nAKA_VECTOR_INIT_s_1_DOT_right.push_back(AKA_VECTOR_INIT_s_1_DOT_right_2);\n(*AKA_VECTOR_INIT_s_1).right = AKA_VECTOR_INIT_s_1_DOT_right[0];\n\nAKA_VECTOR_INIT_s.push_back(AKA_VECTOR_INIT_s_1);\n\nTreeNode* s = AKA_VECTOR_INIT_s[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t;\n\n\n/* SubStructDataNode t */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t0_x=-1321564524;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/t/AKA_VECTOR_INIT_t_0/t/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t_0 = new ::TreeNode(t0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t_0).val=285920768;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t0_right0_x=-52812973;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/t/AKA_VECTOR_INIT_t_0/t/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t_0_DOT_right_0 = new ::TreeNode(t0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t_0_DOT_right_0).val=444814521;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t_0_DOT_right_0).right;\nAKA_VECTOR_INIT_t_0_DOT_right.push_back(AKA_VECTOR_INIT_t_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t0_right1_x=-152318180;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/t/AKA_VECTOR_INIT_t_0/t/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t_0_DOT_right_1 = new ::TreeNode(t0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t_0_DOT_right_1).val=-1171152565;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t_0_DOT_right_1).right;\nAKA_VECTOR_INIT_t_0_DOT_right.push_back(AKA_VECTOR_INIT_t_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t0_right2_x=851586164;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/t/AKA_VECTOR_INIT_t_0/t/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t_0_DOT_right_2 = new ::TreeNode(t0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t_0_DOT_right_2).val=525576618;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t_0_DOT_right_2).right;\nAKA_VECTOR_INIT_t_0_DOT_right.push_back(AKA_VECTOR_INIT_t_0_DOT_right_2);\n(*AKA_VECTOR_INIT_t_0).right = AKA_VECTOR_INIT_t_0_DOT_right[0];\n\nAKA_VECTOR_INIT_t.push_back(AKA_VECTOR_INIT_t_0);\n\nTreeNode* t = AKA_VECTOR_INIT_t[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode s */\n/* PointerStructureDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isSubtree_TreeNodemul_TreeNodemul_random_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isSubtree(s,t);\nAKA_fCall++;AKA_mark(\"Return from: ./9/572-subtree-of-another-tree.cpp/Solution/isSubtree(TreeNode*,TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/572-subtree-of-another-tree.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_s;\n\n\n/* SubStructDataNode s */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint s0_x=-1617600588;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/s/AKA_VECTOR_INIT_s_0/s/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_s_0 = new ::TreeNode(s0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_s_0).val=1660268461;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_s_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint s0_left0_x=-1135203688;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/s/AKA_VECTOR_INIT_s_0/s/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_s_0_DOT_left_0 = new ::TreeNode(s0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_s_0_DOT_left_0).val=-590600230;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_s_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_s_0_DOT_left_0).right;\nAKA_VECTOR_INIT_s_0_DOT_left.push_back(AKA_VECTOR_INIT_s_0_DOT_left_0);\n(*AKA_VECTOR_INIT_s_0).left = AKA_VECTOR_INIT_s_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_s_0).right;\n\nAKA_VECTOR_INIT_s.push_back(AKA_VECTOR_INIT_s_0);\n\n\n/* SubStructDataNode s */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint s1_x=-1991483738;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/s/AKA_VECTOR_INIT_s_1/s/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_s_1 = new ::TreeNode(s1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_s_1).val=325342677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_s_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_s_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint s1_right0_x=1968654792;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/s/AKA_VECTOR_INIT_s_1/s/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_s_1_DOT_right_0 = new ::TreeNode(s1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_s_1_DOT_right_0).val=330986891;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_s_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_s_1_DOT_right_0).right;\nAKA_VECTOR_INIT_s_1_DOT_right.push_back(AKA_VECTOR_INIT_s_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint s1_right1_x=-1666846381;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/s/AKA_VECTOR_INIT_s_1/s/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_s_1_DOT_right_1 = new ::TreeNode(s1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_s_1_DOT_right_1).val=1436130257;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_s_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_s_1_DOT_right_1).right;\nAKA_VECTOR_INIT_s_1_DOT_right.push_back(AKA_VECTOR_INIT_s_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint s1_right2_x=764362659;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/s/AKA_VECTOR_INIT_s_1/s/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_s_1_DOT_right_2 = new ::TreeNode(s1_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_s_1_DOT_right_2).val=1331742635;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_s_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_s_1_DOT_right_2).right;\nAKA_VECTOR_INIT_s_1_DOT_right.push_back(AKA_VECTOR_INIT_s_1_DOT_right_2);\n(*AKA_VECTOR_INIT_s_1).right = AKA_VECTOR_INIT_s_1_DOT_right[0];\n\nAKA_VECTOR_INIT_s.push_back(AKA_VECTOR_INIT_s_1);\n\nTreeNode* s = AKA_VECTOR_INIT_s[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t;\n\n\n/* SubStructDataNode t */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t0_x=-1321564524;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/t/AKA_VECTOR_INIT_t_0/t/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t_0 = new ::TreeNode(t0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t_0).val=285920768;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t0_right0_x=-52812973;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/t/AKA_VECTOR_INIT_t_0/t/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t_0_DOT_right_0 = new ::TreeNode(t0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t_0_DOT_right_0).val=444814521;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t_0_DOT_right_0).right;\nAKA_VECTOR_INIT_t_0_DOT_right.push_back(AKA_VECTOR_INIT_t_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t0_right1_x=-152318180;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/t/AKA_VECTOR_INIT_t_0/t/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t_0_DOT_right_1 = new ::TreeNode(t0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t_0_DOT_right_1).val=-1171152565;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t_0_DOT_right_1).right;\nAKA_VECTOR_INIT_t_0_DOT_right.push_back(AKA_VECTOR_INIT_t_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t0_right2_x=851586164;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/572-subtree-of-another-tree.cpp/isSubtree(TreeNode*,TreeNode*)/t/AKA_VECTOR_INIT_t_0/t/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t_0_DOT_right_2 = new ::TreeNode(t0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t_0_DOT_right_2).val=525576618;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t_0_DOT_right_2).right;\nAKA_VECTOR_INIT_t_0_DOT_right.push_back(AKA_VECTOR_INIT_t_0_DOT_right_2);\n(*AKA_VECTOR_INIT_t_0).right = AKA_VECTOR_INIT_t_0_DOT_right[0];\n\nAKA_VECTOR_INIT_t.push_back(AKA_VECTOR_INIT_t_0);\n\nTreeNode* t = AKA_VECTOR_INIT_t[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode s */\n/* PointerStructureDataNode t */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     bool isIdentical(TreeNode* a, TreeNode* b) {         if (a == nullptr && b == nullptr) {             return true;         } else if (a != nullptr && b != nullptr) {             return a->val == b->val && isIdentical(a->left, b->left) && isIdentical(a->right, b->right);         } else {             return false;         }     }          bool isSubtree(TreeNode* s, TreeNode* t) {         if (s == nullptr && t == nullptr) {             return true;         }          if (s == nullptr || t == nullptr) {             return false;         }         if (s->val == t->val) {             return isIdentical(s, t) || isSubtree(s->left, t) || isSubtree(s->right, t);         }         return isSubtree(s->left, t) || isSubtree(s->right, t);     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/9/572-subtree-of-another-tree.cpp/Solution/isSubtree(TreeNode*,TreeNode*)"
    },
    {
        "f": [],
        "fm": "TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {         if (!t1 && !t2) return NULL;         if (!t1 && t2) return t2;         if (t1 && !t2) return t1;         t1->val = t1->val + t2->val;         t1->left = mergeTrees(t1->left, t2->left);         t1->right = mergeTrees(t1->right, t2->right);         return t1;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_mergeTrees_TreeNodemul_TreeNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_mergeTrees_TreeNodemul_TreeNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/617-merge-two-binary-trees.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t1;\n\n\n/* SubStructDataNode t1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t10_x=2060279164;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_0/t1/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_0 = new ::TreeNode(t10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_0).val=-540635901;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t10_left0_x=-1483820619;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_0/t1/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_0_DOT_left_0 = new ::TreeNode(t10_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_0_DOT_left_0).val=-1747968483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_t1_0_DOT_left.push_back(AKA_VECTOR_INIT_t1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_t1_0).left = AKA_VECTOR_INIT_t1_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_0).right;\n\nAKA_VECTOR_INIT_t1.push_back(AKA_VECTOR_INIT_t1_0);\n\n\n/* SubStructDataNode t1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_x=-1894629944;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1 = new ::TreeNode(t11_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1).val=-1327817994;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_left0_x=-1291809614;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1_DOT_left_0 = new ::TreeNode(t11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_0).val=1276993013;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_t1_1_DOT_left.push_back(AKA_VECTOR_INIT_t1_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_left1_x=-254300799;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1_DOT_left_1 = new ::TreeNode(t11_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_1).val=-1248222953;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_1).right;\nAKA_VECTOR_INIT_t1_1_DOT_left.push_back(AKA_VECTOR_INIT_t1_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_left2_x=-1070063756;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/left/left[2]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1_DOT_left_2 = new ::TreeNode(t11_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_2).val=726244470;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_2).right;\nAKA_VECTOR_INIT_t1_1_DOT_left.push_back(AKA_VECTOR_INIT_t1_1_DOT_left_2);\n(*AKA_VECTOR_INIT_t1_1).left = AKA_VECTOR_INIT_t1_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t1_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_right0_x=1472873588;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1_DOT_right_0 = new ::TreeNode(t11_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_0).val=-909657223;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_0).right;\nAKA_VECTOR_INIT_t1_1_DOT_right.push_back(AKA_VECTOR_INIT_t1_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_right1_x=1243092076;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1_DOT_right_1 = new ::TreeNode(t11_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_1).val=-1967963953;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_1).right;\nAKA_VECTOR_INIT_t1_1_DOT_right.push_back(AKA_VECTOR_INIT_t1_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_right2_x=1452055367;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1_DOT_right_2 = new ::TreeNode(t11_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_2).val=2073318094;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_2).right;\nAKA_VECTOR_INIT_t1_1_DOT_right.push_back(AKA_VECTOR_INIT_t1_1_DOT_right_2);\n(*AKA_VECTOR_INIT_t1_1).right = AKA_VECTOR_INIT_t1_1_DOT_right[0];\n\nAKA_VECTOR_INIT_t1.push_back(AKA_VECTOR_INIT_t1_1);\n\n\n/* SubStructDataNode t1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_x=1012069624;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2 = new ::TreeNode(t12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2).val=-1287327887;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t1_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_left0_x=257438587;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2_DOT_left_0 = new ::TreeNode(t12_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_0).val=1572164940;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_0).right;\nAKA_VECTOR_INIT_t1_2_DOT_left.push_back(AKA_VECTOR_INIT_t1_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_left1_x=1260957700;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2_DOT_left_1 = new ::TreeNode(t12_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_1).val=1465545143;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_1).right;\nAKA_VECTOR_INIT_t1_2_DOT_left.push_back(AKA_VECTOR_INIT_t1_2_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_left2_x=1458160741;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/left/left[2]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2_DOT_left_2 = new ::TreeNode(t12_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_2).val=-1907149430;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_2).right;\nAKA_VECTOR_INIT_t1_2_DOT_left.push_back(AKA_VECTOR_INIT_t1_2_DOT_left_2);\n(*AKA_VECTOR_INIT_t1_2).left = AKA_VECTOR_INIT_t1_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_right0_x=785511966;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2_DOT_right_0 = new ::TreeNode(t12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_0).val=-1094590947;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_t1_2_DOT_right.push_back(AKA_VECTOR_INIT_t1_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_right1_x=-1544470748;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2_DOT_right_1 = new ::TreeNode(t12_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_1).val=184950150;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_1).right;\nAKA_VECTOR_INIT_t1_2_DOT_right.push_back(AKA_VECTOR_INIT_t1_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_right2_x=-920538705;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2_DOT_right_2 = new ::TreeNode(t12_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_2).val=-156350580;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_2).right;\nAKA_VECTOR_INIT_t1_2_DOT_right.push_back(AKA_VECTOR_INIT_t1_2_DOT_right_2);\n(*AKA_VECTOR_INIT_t1_2).right = AKA_VECTOR_INIT_t1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_t1.push_back(AKA_VECTOR_INIT_t1_2);\n\nTreeNode* t1 = AKA_VECTOR_INIT_t1[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t2;\n\n\n/* SubStructDataNode t2 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t20_x=1825971480;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_0/t2/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_0 = new ::TreeNode(t20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_0).val=-2043192236;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t2_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t20_left0_x=-297049384;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_0/t2/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_0_DOT_left_0 = new ::TreeNode(t20_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_0_DOT_left_0).val=1299057118;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_0_DOT_left_0).right;\nAKA_VECTOR_INIT_t2_0_DOT_left.push_back(AKA_VECTOR_INIT_t2_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t20_left1_x=782773123;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_0/t2/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_0_DOT_left_1 = new ::TreeNode(t20_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_0_DOT_left_1).val=991259735;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_0_DOT_left_1).right;\nAKA_VECTOR_INIT_t2_0_DOT_left.push_back(AKA_VECTOR_INIT_t2_0_DOT_left_1);\n(*AKA_VECTOR_INIT_t2_0).left = AKA_VECTOR_INIT_t2_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t2_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t20_right0_x=-475834844;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_0/t2/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_0_DOT_right_0 = new ::TreeNode(t20_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_0).val=1471341729;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_0).right;\nAKA_VECTOR_INIT_t2_0_DOT_right.push_back(AKA_VECTOR_INIT_t2_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t20_right1_x=2129559399;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_0/t2/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_0_DOT_right_1 = new ::TreeNode(t20_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_1).val=-1070652013;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_1).right;\nAKA_VECTOR_INIT_t2_0_DOT_right.push_back(AKA_VECTOR_INIT_t2_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t20_right2_x=1085123414;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_0/t2/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_0_DOT_right_2 = new ::TreeNode(t20_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_2).val=1992819491;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_2).right;\nAKA_VECTOR_INIT_t2_0_DOT_right.push_back(AKA_VECTOR_INIT_t2_0_DOT_right_2);\n(*AKA_VECTOR_INIT_t2_0).right = AKA_VECTOR_INIT_t2_0_DOT_right[0];\n\nAKA_VECTOR_INIT_t2.push_back(AKA_VECTOR_INIT_t2_0);\n\n\n/* SubStructDataNode t2 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t21_x=393440759;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_1/t2/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_1 = new ::TreeNode(t21_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_1).val=-72798144;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t2_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t21_left0_x=-1193393814;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_1/t2/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_1_DOT_left_0 = new ::TreeNode(t21_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_1_DOT_left_0).val=1491223185;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_1_DOT_left_0).right;\nAKA_VECTOR_INIT_t2_1_DOT_left.push_back(AKA_VECTOR_INIT_t2_1_DOT_left_0);\n(*AKA_VECTOR_INIT_t2_1).left = AKA_VECTOR_INIT_t2_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t2_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t21_right0_x=-984632149;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_1/t2/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_1_DOT_right_0 = new ::TreeNode(t21_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_0).val=-1548997209;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_0).right;\nAKA_VECTOR_INIT_t2_1_DOT_right.push_back(AKA_VECTOR_INIT_t2_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t21_right1_x=405487830;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_1/t2/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_1_DOT_right_1 = new ::TreeNode(t21_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_1).val=-116585798;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_1).right;\nAKA_VECTOR_INIT_t2_1_DOT_right.push_back(AKA_VECTOR_INIT_t2_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t21_right2_x=1290508525;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_1/t2/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_1_DOT_right_2 = new ::TreeNode(t21_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_2).val=1120271085;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_2).right;\nAKA_VECTOR_INIT_t2_1_DOT_right.push_back(AKA_VECTOR_INIT_t2_1_DOT_right_2);\n(*AKA_VECTOR_INIT_t2_1).right = AKA_VECTOR_INIT_t2_1_DOT_right[0];\n\nAKA_VECTOR_INIT_t2.push_back(AKA_VECTOR_INIT_t2_1);\n\n\n/* SubStructDataNode t2 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t22_x=383732885;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_2/t2/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_2 = new ::TreeNode(t22_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_2).val=-855679698;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t2_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t22_right0_x=-1315393461;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_2/t2/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_2_DOT_right_0 = new ::TreeNode(t22_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_2_DOT_right_0).val=-2116411411;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_2_DOT_right_0).right;\nAKA_VECTOR_INIT_t2_2_DOT_right.push_back(AKA_VECTOR_INIT_t2_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t22_right1_x=1740841840;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_2/t2/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_2_DOT_right_1 = new ::TreeNode(t22_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_2_DOT_right_1).val=1794186479;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_2_DOT_right_1).right;\nAKA_VECTOR_INIT_t2_2_DOT_right.push_back(AKA_VECTOR_INIT_t2_2_DOT_right_1);\n(*AKA_VECTOR_INIT_t2_2).right = AKA_VECTOR_INIT_t2_2_DOT_right[0];\n\nAKA_VECTOR_INIT_t2.push_back(AKA_VECTOR_INIT_t2_2);\n\nTreeNode* t2 = AKA_VECTOR_INIT_t2[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode t1 */\n/* PointerStructureDataNode t2 */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_mergeTrees_TreeNodemul_TreeNodemul_random_2\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->mergeTrees(t1,t2);\nAKA_fCall++;AKA_mark(\"Return from: ./9/617-merge-two-binary-trees.cpp/Solution/mergeTrees(TreeNode*,TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/617-merge-two-binary-trees.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t1;\n\n\n/* SubStructDataNode t1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t10_x=2060279164;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_0/t1/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_0 = new ::TreeNode(t10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_0).val=-540635901;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t10_left0_x=-1483820619;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_0/t1/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_0_DOT_left_0 = new ::TreeNode(t10_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_0_DOT_left_0).val=-1747968483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_t1_0_DOT_left.push_back(AKA_VECTOR_INIT_t1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_t1_0).left = AKA_VECTOR_INIT_t1_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_0).right;\n\nAKA_VECTOR_INIT_t1.push_back(AKA_VECTOR_INIT_t1_0);\n\n\n/* SubStructDataNode t1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_x=-1894629944;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1 = new ::TreeNode(t11_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1).val=-1327817994;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_left0_x=-1291809614;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1_DOT_left_0 = new ::TreeNode(t11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_0).val=1276993013;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_t1_1_DOT_left.push_back(AKA_VECTOR_INIT_t1_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_left1_x=-254300799;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1_DOT_left_1 = new ::TreeNode(t11_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_1).val=-1248222953;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_1).right;\nAKA_VECTOR_INIT_t1_1_DOT_left.push_back(AKA_VECTOR_INIT_t1_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_left2_x=-1070063756;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/left/left[2]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1_DOT_left_2 = new ::TreeNode(t11_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_2).val=726244470;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_1_DOT_left_2).right;\nAKA_VECTOR_INIT_t1_1_DOT_left.push_back(AKA_VECTOR_INIT_t1_1_DOT_left_2);\n(*AKA_VECTOR_INIT_t1_1).left = AKA_VECTOR_INIT_t1_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t1_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_right0_x=1472873588;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1_DOT_right_0 = new ::TreeNode(t11_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_0).val=-909657223;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_0).right;\nAKA_VECTOR_INIT_t1_1_DOT_right.push_back(AKA_VECTOR_INIT_t1_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_right1_x=1243092076;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1_DOT_right_1 = new ::TreeNode(t11_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_1).val=-1967963953;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_1).right;\nAKA_VECTOR_INIT_t1_1_DOT_right.push_back(AKA_VECTOR_INIT_t1_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t11_right2_x=1452055367;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_1/t1/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_1_DOT_right_2 = new ::TreeNode(t11_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_2).val=2073318094;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_1_DOT_right_2).right;\nAKA_VECTOR_INIT_t1_1_DOT_right.push_back(AKA_VECTOR_INIT_t1_1_DOT_right_2);\n(*AKA_VECTOR_INIT_t1_1).right = AKA_VECTOR_INIT_t1_1_DOT_right[0];\n\nAKA_VECTOR_INIT_t1.push_back(AKA_VECTOR_INIT_t1_1);\n\n\n/* SubStructDataNode t1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_x=1012069624;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2 = new ::TreeNode(t12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2).val=-1287327887;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t1_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_left0_x=257438587;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2_DOT_left_0 = new ::TreeNode(t12_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_0).val=1572164940;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_0).right;\nAKA_VECTOR_INIT_t1_2_DOT_left.push_back(AKA_VECTOR_INIT_t1_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_left1_x=1260957700;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2_DOT_left_1 = new ::TreeNode(t12_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_1).val=1465545143;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_1).right;\nAKA_VECTOR_INIT_t1_2_DOT_left.push_back(AKA_VECTOR_INIT_t1_2_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_left2_x=1458160741;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/left/left[2]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2_DOT_left_2 = new ::TreeNode(t12_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_2).val=-1907149430;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_2_DOT_left_2).right;\nAKA_VECTOR_INIT_t1_2_DOT_left.push_back(AKA_VECTOR_INIT_t1_2_DOT_left_2);\n(*AKA_VECTOR_INIT_t1_2).left = AKA_VECTOR_INIT_t1_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_right0_x=785511966;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2_DOT_right_0 = new ::TreeNode(t12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_0).val=-1094590947;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_t1_2_DOT_right.push_back(AKA_VECTOR_INIT_t1_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_right1_x=-1544470748;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2_DOT_right_1 = new ::TreeNode(t12_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_1).val=184950150;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_1).right;\nAKA_VECTOR_INIT_t1_2_DOT_right.push_back(AKA_VECTOR_INIT_t1_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t12_right2_x=-920538705;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t1/AKA_VECTOR_INIT_t1_2/t1/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t1_2_DOT_right_2 = new ::TreeNode(t12_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_2).val=-156350580;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t1_2_DOT_right_2).right;\nAKA_VECTOR_INIT_t1_2_DOT_right.push_back(AKA_VECTOR_INIT_t1_2_DOT_right_2);\n(*AKA_VECTOR_INIT_t1_2).right = AKA_VECTOR_INIT_t1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_t1.push_back(AKA_VECTOR_INIT_t1_2);\n\nTreeNode* t1 = AKA_VECTOR_INIT_t1[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t2;\n\n\n/* SubStructDataNode t2 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t20_x=1825971480;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_0/t2/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_0 = new ::TreeNode(t20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_0).val=-2043192236;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t2_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t20_left0_x=-297049384;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_0/t2/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_0_DOT_left_0 = new ::TreeNode(t20_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_0_DOT_left_0).val=1299057118;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_0_DOT_left_0).right;\nAKA_VECTOR_INIT_t2_0_DOT_left.push_back(AKA_VECTOR_INIT_t2_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t20_left1_x=782773123;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_0/t2/left/left[1]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_0_DOT_left_1 = new ::TreeNode(t20_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_0_DOT_left_1).val=991259735;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_0_DOT_left_1).right;\nAKA_VECTOR_INIT_t2_0_DOT_left.push_back(AKA_VECTOR_INIT_t2_0_DOT_left_1);\n(*AKA_VECTOR_INIT_t2_0).left = AKA_VECTOR_INIT_t2_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t2_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t20_right0_x=-475834844;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_0/t2/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_0_DOT_right_0 = new ::TreeNode(t20_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_0).val=1471341729;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_0).right;\nAKA_VECTOR_INIT_t2_0_DOT_right.push_back(AKA_VECTOR_INIT_t2_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t20_right1_x=2129559399;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_0/t2/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_0_DOT_right_1 = new ::TreeNode(t20_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_1).val=-1070652013;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_1).right;\nAKA_VECTOR_INIT_t2_0_DOT_right.push_back(AKA_VECTOR_INIT_t2_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t20_right2_x=1085123414;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_0/t2/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_0_DOT_right_2 = new ::TreeNode(t20_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_2).val=1992819491;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_0_DOT_right_2).right;\nAKA_VECTOR_INIT_t2_0_DOT_right.push_back(AKA_VECTOR_INIT_t2_0_DOT_right_2);\n(*AKA_VECTOR_INIT_t2_0).right = AKA_VECTOR_INIT_t2_0_DOT_right[0];\n\nAKA_VECTOR_INIT_t2.push_back(AKA_VECTOR_INIT_t2_0);\n\n\n/* SubStructDataNode t2 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t21_x=393440759;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_1/t2/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_1 = new ::TreeNode(t21_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_1).val=-72798144;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t2_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t21_left0_x=-1193393814;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_1/t2/left/left[0]/left/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_1_DOT_left_0 = new ::TreeNode(t21_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_1_DOT_left_0).val=1491223185;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_1_DOT_left_0).right;\nAKA_VECTOR_INIT_t2_1_DOT_left.push_back(AKA_VECTOR_INIT_t2_1_DOT_left_0);\n(*AKA_VECTOR_INIT_t2_1).left = AKA_VECTOR_INIT_t2_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t2_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t21_right0_x=-984632149;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_1/t2/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_1_DOT_right_0 = new ::TreeNode(t21_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_0).val=-1548997209;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_0).right;\nAKA_VECTOR_INIT_t2_1_DOT_right.push_back(AKA_VECTOR_INIT_t2_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t21_right1_x=405487830;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_1/t2/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_1_DOT_right_1 = new ::TreeNode(t21_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_1).val=-116585798;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_1).right;\nAKA_VECTOR_INIT_t2_1_DOT_right.push_back(AKA_VECTOR_INIT_t2_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t21_right2_x=1290508525;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_1/t2/right/right[2]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_1_DOT_right_2 = new ::TreeNode(t21_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_2).val=1120271085;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_1_DOT_right_2).right;\nAKA_VECTOR_INIT_t2_1_DOT_right.push_back(AKA_VECTOR_INIT_t2_1_DOT_right_2);\n(*AKA_VECTOR_INIT_t2_1).right = AKA_VECTOR_INIT_t2_1_DOT_right[0];\n\nAKA_VECTOR_INIT_t2.push_back(AKA_VECTOR_INIT_t2_1);\n\n\n/* SubStructDataNode t2 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t22_x=383732885;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_2/t2/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_2 = new ::TreeNode(t22_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_2).val=-855679698;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_t2_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t22_right0_x=-1315393461;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_2/t2/right/right[0]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_2_DOT_right_0 = new ::TreeNode(t22_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_2_DOT_right_0).val=-2116411411;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_2_DOT_right_0).right;\nAKA_VECTOR_INIT_t2_2_DOT_right.push_back(AKA_VECTOR_INIT_t2_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint t22_right1_x=1740841840;\nAKA_mark(\"Calling: ./9/572-subtree-of-another-tree.cpp/TreeNode/TreeNode(int)|ROOT/617-merge-two-binary-trees.cpp/mergeTrees(TreeNode*,TreeNode*)/t2/AKA_VECTOR_INIT_t2_2/t2/right/right[1]/right/TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_t2_2_DOT_right_1 = new ::TreeNode(t22_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_t2_2_DOT_right_1).val=1794186479;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_t2_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_t2_2_DOT_right_1).right;\nAKA_VECTOR_INIT_t2_2_DOT_right.push_back(AKA_VECTOR_INIT_t2_2_DOT_right_1);\n(*AKA_VECTOR_INIT_t2_2).right = AKA_VECTOR_INIT_t2_2_DOT_right[0];\n\nAKA_VECTOR_INIT_t2.push_back(AKA_VECTOR_INIT_t2_2);\n\nTreeNode* t2 = AKA_VECTOR_INIT_t2[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode t1 */\n/* PointerStructureDataNode t2 */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_mergeTrees_TreeNodemul_TreeNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_mergeTrees_TreeNodemul_TreeNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/617-merge-two-binary-trees.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* t1;\nTreeNode* t2;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode t1 */\n/* PointerStructureDataNode t2 */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_mergeTrees_TreeNodemul_TreeNodemul_random_4\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->mergeTrees(t1,t2);\nAKA_fCall++;AKA_mark(\"Return from: ./9/617-merge-two-binary-trees.cpp/Solution/mergeTrees(TreeNode*,TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/617-merge-two-binary-trees.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* t1;\nTreeNode* t2;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode t1 */\n/* PointerStructureDataNode t2 */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {         if (!t1 && !t2) return NULL;         if (!t1 && t2) return t2;         if (t1 && !t2) return t1;         t1->val = t1->val + t2->val;         t1->left = mergeTrees(t1->left, t2->left);         t1->right = mergeTrees(t1->right, t2->right);         return t1;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/9/617-merge-two-binary-trees.cpp/Solution/mergeTrees(TreeNode*,TreeNode*)"
    },
    {
        "f": [],
        "fm": "vector<vector<int>> imageSmoother(vector<vector<int>>& M) {         int rows = M.size();         int cols = M[0].size();         vector<vector<int>> neighbors = {{-1,-1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1}};         vector<vector<int>> result(rows, vector<int>(cols, 0));         for (int i = 0; i < rows; i++) {             for (int j = 0; j < cols; j++) {                 int sum = 0;                 int num = 0;                 for (vector<int>& n : neighbors) {                     int x = i + n[0];                     int y = j + n[1];                     if (x >= 0 && y >= 0 && x < rows && y < cols) {                         sum += M[x][y];                         num++;                     }                 }                 result[i][j] = sum/num;             }         }         return result;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_imageSmoother_vector_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_imageSmoother_vector_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/661-image-smoother.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> M;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode M */\nvector<int> M_element0;\nint M_element0_element0=1058796383;\nM_element0.push_back(M_element0_element0);\nint M_element0_element1=-345476731;\nM_element0.push_back(M_element0_element1);\nint M_element0_element2=-621176633;\nM_element0.push_back(M_element0_element2);\nM.push_back(M_element0);\nvector<int> M_element1;\nint M_element1_element0=-266586485;\nM_element1.push_back(M_element1_element0);\nint M_element1_element1=575211604;\nM_element1.push_back(M_element1_element1);\nint M_element1_element2=589051742;\nM_element1.push_back(M_element1_element2);\nM.push_back(M_element1);\nvector<int> M_element2;\nint M_element2_element0=321308708;\nM_element2.push_back(M_element2_element0);\nint M_element2_element1=-1123754775;\nM_element2.push_back(M_element2_element1);\nint M_element2_element2=485246985;\nM_element2.push_back(M_element2_element2);\nM.push_back(M_element2);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_imageSmoother_vector_vector_int_random_1\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->imageSmoother(M);\nAKA_fCall++;AKA_mark(\"Return from: ./9/661-image-smoother.cpp/Solution/imageSmoother(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_M;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/661-image-smoother.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> M;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode M */\nvector<int> M_element0;\nint M_element0_element0=1058796383;\nM_element0.push_back(M_element0_element0);\nint M_element0_element1=-345476731;\nM_element0.push_back(M_element0_element1);\nint M_element0_element2=-621176633;\nM_element0.push_back(M_element0_element2);\nM.push_back(M_element0);\nvector<int> M_element1;\nint M_element1_element0=-266586485;\nM_element1.push_back(M_element1_element0);\nint M_element1_element1=575211604;\nM_element1.push_back(M_element1_element1);\nint M_element1_element2=589051742;\nM_element1.push_back(M_element1_element2);\nM.push_back(M_element1);\nvector<int> M_element2;\nint M_element2_element0=321308708;\nM_element2.push_back(M_element2_element0);\nint M_element2_element1=-1123754775;\nM_element2.push_back(M_element2_element1);\nint M_element2_element2=485246985;\nM_element2.push_back(M_element2_element2);\nM.push_back(M_element2);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     vector<vector<int>> imageSmoother(vector<vector<int>>& M) {         int rows = M.size();         int cols = M[0].size();         vector<vector<int>> neighbors = {{-1,-1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1}};         vector<vector<int>> result(rows, vector<int>(cols, 0));         for (int i = 0; i < rows; i++) {             for (int j = 0; j < cols; j++) {                 int sum = 0;                 int num = 0;                 for (vector<int>& n : neighbors) {                     int x = i + n[0];                     int y = j + n[1];                     if (x >= 0 && y >= 0 && x < rows && y < cols) {                         sum += M[x][y];                         num++;                     }                 }                 result[i][j] = sum/num;             }         }         return result;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/9/661-image-smoother.cpp/Solution/imageSmoother(vector<vector<int>>&)"
    },
    {
        "f": [],
        "fm": "vector<string> topKFrequent(vector<string>& words, int k) {                  map<string, int> counts;         for (string word : words) {             auto it = counts.find(word);             if (it != counts.end()) {                 it->second++;             } else {                 counts[word] = 1;             }         }                  priority_queue<KeyWithFreq, vector<KeyWithFreq>, function<bool(KeyWithFreq, KeyWithFreq)>>             min_heap([](const KeyWithFreq& a, const KeyWithFreq& b) {                 if (a.times < b.times) {                     return true;                 } else if (a.times == b.times) {                     if (a.key > b.key) {                         return true;                     }                  }                 return false;             });                  auto it = counts.begin();         while (it != counts.end()) {             min_heap.emplace(KeyWithFreq(it->first, it->second));             it++;         }                  vector<string> result;                  for (int i = 0; i < k; i++) {             result.push_back(min_heap.top().key);             min_heap.pop();         }         return result;     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_topKFrequent_vector_string_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_topKFrequent_vector_string_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/692-top-k-frequent-words.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint k=3;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName16932 = new char[2];akaRandomName16932[0] = -30;akaRandomName16932[1] = '\\0';string words_element0=akaRandomName16932;\nwords.push_back(words_element0);\nchar* akaRandomName243625 = new char[2];akaRandomName243625[0] = -120;akaRandomName243625[1] = '\\0';string words_element1=akaRandomName243625;\nwords.push_back(words_element1);\nchar* akaRandomName851926 = new char[2];akaRandomName851926[0] = 100;akaRandomName851926[1] = '\\0';string words_element2=akaRandomName851926;\nwords.push_back(words_element2);\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_topKFrequent_vector_string_int_random_3\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->topKFrequent(words,k);\nAKA_fCall++;AKA_mark(\"Return from: ./9/692-top-k-frequent-words.cpp/Solution/topKFrequent(vector<string>&,int)\");\n\n\nvector<string> EXPECTED_words;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/692-top-k-frequent-words.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> words;\n\n\nint k=3;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode words */\nchar* akaRandomName904531 = new char[2];akaRandomName904531[0] = -30;akaRandomName904531[1] = '\\0';string words_element0=akaRandomName904531;\nwords.push_back(words_element0);\nchar* akaRandomName900403 = new char[2];akaRandomName900403[0] = -120;akaRandomName900403[1] = '\\0';string words_element1=akaRandomName900403;\nwords.push_back(words_element1);\nchar* akaRandomName974008 = new char[2];akaRandomName974008[0] = 100;akaRandomName974008[1] = '\\0';string words_element2=akaRandomName974008;\nwords.push_back(words_element2);\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     struct KeyWithFreq {         string key;         int times;         KeyWithFreq(string a, int b) : key(a), times(b) {};     };          vector<string> topKFrequent(vector<string>& words, int k) {                  map<string, int> counts;         for (string word : words) {             auto it = counts.find(word);             if (it != counts.end()) {                 it->second++;             } else {                 counts[word] = 1;             }         }                  priority_queue<KeyWithFreq, vector<KeyWithFreq>, function<bool(KeyWithFreq, KeyWithFreq)>>             min_heap([](const KeyWithFreq& a, const KeyWithFreq& b) {                 if (a.times < b.times) {                     return true;                 } else if (a.times == b.times) {                     if (a.key > b.key) {                         return true;                     }                  }                 return false;             });                  auto it = counts.begin();         while (it != counts.end()) {             min_heap.emplace(KeyWithFreq(it->first, it->second));             it++;         }                  vector<string> result;                  for (int i = 0; i < k; i++) {             result.push_back(min_heap.top().key);             min_heap.pop();         }         return result;     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/9/692-top-k-frequent-words.cpp/Solution/topKFrequent(vector<string>&,int)"
    },
    {
        "f": [],
        "fm": "int minCostClimbingStairs(vector<int>& cost) {         int steps = cost.size();         vector<int> minCost(steps, 0);         minCost[0] = cost[0];         minCost[1] = min(cost[0] + cost[1], cost[1]);         for (int i = 2; i < steps; i++) {             minCost[i] = cost[i] + min(minCost[i - 1], minCost[i - 2]);         }         return min(minCost[steps - 1], minCost[steps - 2]);     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_minCostClimbingStairs_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_minCostClimbingStairs_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/746-min-cost-climbing-stairs.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\nint cost_element0=-1559615547;\ncost.push_back(cost_element0);\nint cost_element1=208975862;\ncost.push_back(cost_element1);\nint cost_element2=-1917537172;\ncost.push_back(cost_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minCostClimbingStairs_vector_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minCostClimbingStairs(cost);\nAKA_fCall++;AKA_mark(\"Return from: ./9/746-min-cost-climbing-stairs.cpp/Solution/minCostClimbingStairs(vector<int>&)\");\n\n\nvector<int> EXPECTED_cost;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: /Solution()|ROOT/746-min-cost-climbing-stairs.cpp/GLOBAL/AKA_INSTANCE___Solution/AKA_INSTANCE___Solution/Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> cost;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode cost */\nint cost_element0=-1559615547;\ncost.push_back(cost_element0);\nint cost_element1=208975862;\ncost.push_back(cost_element1);\nint cost_element2=-1917537172;\ncost.push_back(cost_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution { public:     int minCostClimbingStairs(vector<int>& cost) {         int steps = cost.size();         vector<int> minCost(steps, 0);         minCost[0] = cost[0];         minCost[1] = min(cost[0] + cost[1], cost[1]);         for (int i = 2; i < steps; i++) {             minCost[i] = cost[i] + min(minCost[i - 1], minCost[i - 2]);         }         return min(minCost[steps - 1], minCost[steps - 2]);     } };",
        "c": [
            ""
        ],
        "path_fm": "/mnt/sdb2/LAB/test/9/746-min-cost-climbing-stairs.cpp/Solution/minCostClimbingStairs(vector<int>&)"
    }
]
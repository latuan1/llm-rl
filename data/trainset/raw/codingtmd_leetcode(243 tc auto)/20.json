[
    {
        "f": [],
        "fm": "vector<vector<string>> partition(string s) {\r         vector<vector<string>> result;\r         vector<string> output;\r         DFS(s, 0, output, result);\r         return result;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Palindrome_Partitioning.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Palindrome_Partitioning.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\partition(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "partition(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<vector<string>>",
                            "realType": "vector<vector<string>>",
                            "functionNode": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\partition(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\partition(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\partition(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\partition(string)\\s",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\partition(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "-6"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<vector<string>>",
                                    "realType": "vector<vector<string>>",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\partition(string)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<string>"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_partition_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_partition_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Palindrome_Partitioning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName235941 = new char[2];akaRandomName235941[0] = -6;akaRandomName235941[1] = '\\0';string s=akaRandomName235941;\nvector<vector<string>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_partition_string_random_2\");vector<vector<string>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->partition(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\eleven\\\\Palindrome_Partitioning.cpp\\\\Solution\\\\partition(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Palindrome_Partitioning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName983178 = new char[2];akaRandomName983178[0] = -6;akaRandomName983178[1] = '\\0';string s=akaRandomName983178;\nvector<vector<string>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<vector<string>> partition(string s) {\r         vector<vector<string>> result;\r         vector<string> output;\r         DFS(s, 0, output, result);\r         return result;\r     }\r     void DFS(string &s, int start, vector<string>& output,\r              vector<vector<string>> &result)\r     {\r         if (start == s.size())\r         {\r             result.push_back(output);\r             return;\r         }\r         for (int i = start; i < s.size(); i++)\r         {\r             if (isPalindrome(s, start, i))\r             {\r                 output.push_back(s.substr(start, i - start + 1));\r                 DFS(s, i + 1, output, result);\r                 output.pop_back();\r             }\r         }\r     }\r     bool isPalindrome(string &s, int start, int end)\r     {\r         while (start < end)\r         {\r             if (s[start] != s[end])\r                 return false;\r             start++; end--;\r         }\r         return true;\r     }\r \r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\eleven\\Palindrome_Partitioning.cpp\\Solution\\partition(string)"
    },
    {
        "f": [],
        "fm": "void DFS(string &s, int start, vector<string>& output,\r              vector<vector<string>> &result)\r     {\r         if (start == s.size())\r         {\r             result.push_back(output);\r             return;\r         }\r         for (int i = start; i < s.size(); i++)\r         {\r             if (isPalindrome(s, start, i))\r             {\r                 output.push_back(s.substr(start, i - start + 1));\r                 DFS(s, i + 1, output, result);\r                 output.pop_back();\r             }\r         }\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Palindrome_Partitioning.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Palindrome_Partitioning.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "DFS(string&,int,vector<string>&,vector<vector<string>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "output",
                                    "virtual_name": "EXPECTED_output",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\output",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\s",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "vector<vector<string>>",
                                    "realType": "vector<vector<string>>&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<string>"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\s",
                                    "correspondingType": "string&",
                                    "value": "2",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "117"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\start",
                                    "correspondingType": "int",
                                    "value": "2"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "output",
                                    "virtual_name": "output",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\output",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "output_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\output\\element #0",
                                            "correspondingType": "string",
                                            "value": "1",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "output_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\output\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "20"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "vector<vector<string>>",
                                    "realType": "vector<vector<string>>&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<string>",
                                    "size": 2,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "result_element0",
                                            "dataType": "vector<string>",
                                            "realType": "vector<string>",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "string",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "result_element0_element0",
                                                    "dataType": "string",
                                                    "realType": "string",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #0\\element #0",
                                                    "correspondingType": "string",
                                                    "value": "1",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                            "name": "element #0[0]",
                                                            "virtual_name": "result_element0_element0[0]",
                                                            "dataType": "char",
                                                            "realType": "char",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #0\\element #0\\element #0[0]",
                                                            "correspondingType": "char",
                                                            "value": "31"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "result_element0_element1",
                                                    "dataType": "string",
                                                    "realType": "string",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #0\\element #1",
                                                    "correspondingType": "string",
                                                    "value": "1",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                            "name": "element #1[0]",
                                                            "virtual_name": "result_element0_element1[0]",
                                                            "dataType": "char",
                                                            "realType": "char",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #0\\element #1\\element #1[0]",
                                                            "correspondingType": "char",
                                                            "value": "-82"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "result_element1",
                                            "dataType": "vector<string>",
                                            "realType": "vector<string>",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "string",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "result_element1_element0",
                                                    "dataType": "string",
                                                    "realType": "string",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #1\\element #0",
                                                    "correspondingType": "string",
                                                    "value": "1",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                            "name": "element #0[0]",
                                                            "virtual_name": "result_element1_element0[0]",
                                                            "dataType": "char",
                                                            "realType": "char",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #1\\element #0\\element #0[0]",
                                                            "correspondingType": "char",
                                                            "value": "-112"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "result_element1_element1",
                                                    "dataType": "string",
                                                    "realType": "string",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #1\\element #1",
                                                    "correspondingType": "string",
                                                    "value": "3",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                            "name": "element #1[0]",
                                                            "virtual_name": "result_element1_element1[0]",
                                                            "dataType": "char",
                                                            "realType": "char",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #1\\element #1\\element #1[0]",
                                                            "correspondingType": "char",
                                                            "value": "-31"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_DFS_string_int_vector_string_vector_vector_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_DFS_string_int_vector_string_vector_vector_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Palindrome_Partitioning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName864556 = new char[2];akaRandomName864556[0] = 117;akaRandomName864556[1] = '\\0';string s=akaRandomName864556;\n\n\nint start=2;\nvector<string> output;\nvector<vector<string>> result;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode start */\n/* VectorDataNode output */\nchar* akaRandomName763412 = new char[2];akaRandomName763412[0] = 20;akaRandomName763412[1] = '\\0';string output_element0=akaRandomName763412;\noutput.push_back(output_element0);\n/* VectorDataNode result */\nvector<string> result_element0;\nchar* akaRandomName389945 = new char[2];akaRandomName389945[0] = 31;akaRandomName389945[1] = '\\0';string result_element0_element0=akaRandomName389945;\nresult_element0.push_back(result_element0_element0);\nchar* akaRandomName816517 = new char[2];akaRandomName816517[0] = -82;akaRandomName816517[1] = '\\0';string result_element0_element1=akaRandomName816517;\nresult_element0.push_back(result_element0_element1);\nresult.push_back(result_element0);\nvector<string> result_element1;\nchar* akaRandomName974209 = new char[2];akaRandomName974209[0] = -112;akaRandomName974209[1] = '\\0';string result_element1_element0=akaRandomName974209;\nresult_element1.push_back(result_element1_element0);\nchar* akaRandomName276922 = new char[2];akaRandomName276922[0] = -31;akaRandomName276922[1] = '\\0';string result_element1_element1=akaRandomName276922;\nresult_element1.push_back(result_element1_element1);\nresult.push_back(result_element1);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_DFS_string_int_vector_string_vector_vector_string_random_1\");AKA_INSTANCE___Solution->DFS(s,start,output,result);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\eleven\\\\Palindrome_Partitioning.cpp\\\\Solution\\\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\");\n\n/* error assertion */\nvector<string> EXPECTED_output;\n\nvector<vector<string>> EXPECTED_result;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Palindrome_Partitioning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName158418 = new char[2];akaRandomName158418[0] = 117;akaRandomName158418[1] = '\\0';string s=akaRandomName158418;\n\n\nint start=2;\nvector<string> output;\nvector<vector<string>> result;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode start */\n/* VectorDataNode output */\nchar* akaRandomName223176 = new char[2];akaRandomName223176[0] = 20;akaRandomName223176[1] = '\\0';string output_element0=akaRandomName223176;\noutput.push_back(output_element0);\n/* VectorDataNode result */\nvector<string> result_element0;\nchar* akaRandomName219595 = new char[2];akaRandomName219595[0] = 31;akaRandomName219595[1] = '\\0';string result_element0_element0=akaRandomName219595;\nresult_element0.push_back(result_element0_element0);\nchar* akaRandomName323645 = new char[2];akaRandomName323645[0] = -82;akaRandomName323645[1] = '\\0';string result_element0_element1=akaRandomName323645;\nresult_element0.push_back(result_element0_element1);\nresult.push_back(result_element0);\nvector<string> result_element1;\nchar* akaRandomName750136 = new char[2];akaRandomName750136[0] = -112;akaRandomName750136[1] = '\\0';string result_element1_element0=akaRandomName750136;\nresult_element1.push_back(result_element1_element0);\nchar* akaRandomName653818 = new char[2];akaRandomName653818[0] = -31;akaRandomName653818[1] = '\\0';string result_element1_element1=akaRandomName653818;\nresult_element1.push_back(result_element1_element1);\nresult.push_back(result_element1);\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Palindrome_Partitioning.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Palindrome_Partitioning.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "DFS(string&,int,vector<string>&,vector<vector<string>>&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "void",
                            "realType": "void",
                            "functionNode": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "result",
                                    "virtual_name": "EXPECTED_result",
                                    "dataType": "vector<vector<string>>",
                                    "realType": "vector<vector<string>>&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<string>"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\s",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "output",
                                    "virtual_name": "EXPECTED_output",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\output",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\s",
                                    "correspondingType": "string&",
                                    "value": "1",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "-29"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\start",
                                    "correspondingType": "int",
                                    "value": "1"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "output",
                                    "virtual_name": "output",
                                    "dataType": "vector<string>",
                                    "realType": "vector<string>&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\output",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "string",
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalStringDataNode",
                                            "name": "element #0",
                                            "virtual_name": "output_element0",
                                            "dataType": "string",
                                            "realType": "string",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\output\\element #0",
                                            "correspondingType": "string",
                                            "value": "3",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                    "name": "element #0[0]",
                                                    "virtual_name": "output_element0[0]",
                                                    "dataType": "char",
                                                    "realType": "char",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\output\\element #0\\element #0[0]",
                                                    "correspondingType": "char",
                                                    "value": "63"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "result",
                                    "virtual_name": "result",
                                    "dataType": "vector<vector<string>>",
                                    "realType": "vector<vector<string>>&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "vector<string>",
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #0",
                                            "virtual_name": "result_element0",
                                            "dataType": "vector<string>",
                                            "realType": "vector<string>",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #0",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "string",
                                            "size": 1,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "result_element0_element0",
                                                    "dataType": "string",
                                                    "realType": "string",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #0\\element #0",
                                                    "correspondingType": "string",
                                                    "value": "2",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                            "name": "element #0[0]",
                                                            "virtual_name": "result_element0_element0[0]",
                                                            "dataType": "char",
                                                            "realType": "char",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #0\\element #0\\element #0[0]",
                                                            "correspondingType": "char",
                                                            "value": "110"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #1",
                                            "virtual_name": "result_element1",
                                            "dataType": "vector<string>",
                                            "realType": "vector<string>",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #1",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "string",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "result_element1_element0",
                                                    "dataType": "string",
                                                    "realType": "string",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #1\\element #0",
                                                    "correspondingType": "string",
                                                    "value": "1",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                            "name": "element #0[0]",
                                                            "virtual_name": "result_element1_element0[0]",
                                                            "dataType": "char",
                                                            "realType": "char",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #1\\element #0\\element #0[0]",
                                                            "correspondingType": "char",
                                                            "value": "109"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "result_element1_element1",
                                                    "dataType": "string",
                                                    "realType": "string",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #1\\element #1",
                                                    "correspondingType": "string",
                                                    "value": "3",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                            "name": "element #1[0]",
                                                            "virtual_name": "result_element1_element1[0]",
                                                            "dataType": "char",
                                                            "realType": "char",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #1\\element #1\\element #1[0]",
                                                            "correspondingType": "char",
                                                            "value": "49"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                            "name": "element #2",
                                            "virtual_name": "result_element2",
                                            "dataType": "vector<string>",
                                            "realType": "vector<string>",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #2",
                                            "correspondingType": "STLListBaseType",
                                            "templateArg": "string",
                                            "size": 2,
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                                    "name": "element #0",
                                                    "virtual_name": "result_element2_element0",
                                                    "dataType": "string",
                                                    "realType": "string",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #2\\element #0",
                                                    "correspondingType": "string",
                                                    "value": "1",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                            "name": "element #0[0]",
                                                            "virtual_name": "result_element2_element0[0]",
                                                            "dataType": "char",
                                                            "realType": "char",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #2\\element #0\\element #0[0]",
                                                            "correspondingType": "char",
                                                            "value": "26"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                                    "name": "element #1",
                                                    "virtual_name": "result_element2_element1",
                                                    "dataType": "string",
                                                    "realType": "string",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #2\\element #1",
                                                    "correspondingType": "string",
                                                    "value": "3",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                                            "name": "element #1[0]",
                                                            "virtual_name": "result_element2_element1[0]",
                                                            "dataType": "char",
                                                            "realType": "char",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\\result\\element #2\\element #1\\element #1[0]",
                                                            "correspondingType": "char",
                                                            "value": "120"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_DFS_string_int_vector_string_vector_vector_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_DFS_string_int_vector_string_vector_vector_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Palindrome_Partitioning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName900379 = new char[2];akaRandomName900379[0] = -29;akaRandomName900379[1] = '\\0';string s=akaRandomName900379;\n\n\nint start=1;\nvector<string> output;\nvector<vector<string>> result;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode start */\n/* VectorDataNode output */\nchar* akaRandomName931841 = new char[2];akaRandomName931841[0] = 63;akaRandomName931841[1] = '\\0';string output_element0=akaRandomName931841;\noutput.push_back(output_element0);\n/* VectorDataNode result */\nvector<string> result_element0;\nchar* akaRandomName400713 = new char[2];akaRandomName400713[0] = 110;akaRandomName400713[1] = '\\0';string result_element0_element0=akaRandomName400713;\nresult_element0.push_back(result_element0_element0);\nresult.push_back(result_element0);\nvector<string> result_element1;\nchar* akaRandomName551776 = new char[2];akaRandomName551776[0] = 109;akaRandomName551776[1] = '\\0';string result_element1_element0=akaRandomName551776;\nresult_element1.push_back(result_element1_element0);\nchar* akaRandomName702146 = new char[2];akaRandomName702146[0] = 49;akaRandomName702146[1] = '\\0';string result_element1_element1=akaRandomName702146;\nresult_element1.push_back(result_element1_element1);\nresult.push_back(result_element1);\nvector<string> result_element2;\nchar* akaRandomName128342 = new char[2];akaRandomName128342[0] = 26;akaRandomName128342[1] = '\\0';string result_element2_element0=akaRandomName128342;\nresult_element2.push_back(result_element2_element0);\nchar* akaRandomName414978 = new char[2];akaRandomName414978[0] = 120;akaRandomName414978[1] = '\\0';string result_element2_element1=akaRandomName414978;\nresult_element2.push_back(result_element2_element1);\nresult.push_back(result_element2);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_DFS_string_int_vector_string_vector_vector_string_random_4\");AKA_INSTANCE___Solution->DFS(s,start,output,result);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\eleven\\\\Palindrome_Partitioning.cpp\\\\Solution\\\\DFS(string&,int,vector<string>&,vector<vector<string>>&)\");\n\n/* error assertion */\nvector<string> EXPECTED_output;\n\nvector<vector<string>> EXPECTED_result;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Palindrome_Partitioning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName825261 = new char[2];akaRandomName825261[0] = -29;akaRandomName825261[1] = '\\0';string s=akaRandomName825261;\n\n\nint start=1;\nvector<string> output;\nvector<vector<string>> result;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode start */\n/* VectorDataNode output */\nchar* akaRandomName35470 = new char[2];akaRandomName35470[0] = 63;akaRandomName35470[1] = '\\0';string output_element0=akaRandomName35470;\noutput.push_back(output_element0);\n/* VectorDataNode result */\nvector<string> result_element0;\nchar* akaRandomName740750 = new char[2];akaRandomName740750[0] = 110;akaRandomName740750[1] = '\\0';string result_element0_element0=akaRandomName740750;\nresult_element0.push_back(result_element0_element0);\nresult.push_back(result_element0);\nvector<string> result_element1;\nchar* akaRandomName307005 = new char[2];akaRandomName307005[0] = 109;akaRandomName307005[1] = '\\0';string result_element1_element0=akaRandomName307005;\nresult_element1.push_back(result_element1_element0);\nchar* akaRandomName211632 = new char[2];akaRandomName211632[0] = 49;akaRandomName211632[1] = '\\0';string result_element1_element1=akaRandomName211632;\nresult_element1.push_back(result_element1_element1);\nresult.push_back(result_element1);\nvector<string> result_element2;\nchar* akaRandomName278944 = new char[2];akaRandomName278944[0] = 26;akaRandomName278944[1] = '\\0';string result_element2_element0=akaRandomName278944;\nresult_element2.push_back(result_element2_element0);\nchar* akaRandomName425405 = new char[2];akaRandomName425405[0] = 120;akaRandomName425405[1] = '\\0';string result_element2_element1=akaRandomName425405;\nresult_element2.push_back(result_element2_element1);\nresult.push_back(result_element2);\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<vector<string>> partition(string s) {\r         vector<vector<string>> result;\r         vector<string> output;\r         DFS(s, 0, output, result);\r         return result;\r     }\r     void DFS(string &s, int start, vector<string>& output,\r              vector<vector<string>> &result)\r     {\r         if (start == s.size())\r         {\r             result.push_back(output);\r             return;\r         }\r         for (int i = start; i < s.size(); i++)\r         {\r             if (isPalindrome(s, start, i))\r             {\r                 output.push_back(s.substr(start, i - start + 1));\r                 DFS(s, i + 1, output, result);\r                 output.pop_back();\r             }\r         }\r     }\r     bool isPalindrome(string &s, int start, int end)\r     {\r         while (start < end)\r         {\r             if (s[start] != s[end])\r                 return false;\r             start++; end--;\r         }\r         return true;\r     }\r \r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\eleven\\Palindrome_Partitioning.cpp\\Solution\\DFS(string&,int,vector<string>&,vector<vector<string>>&)"
    },
    {
        "f": [],
        "fm": "bool isPalindrome(string &s, int start, int end)\r     {\r         while (start < end)\r         {\r             if (s[start] != s[end])\r                 return false;\r             start++; end--;\r         }\r         return true;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Palindrome_Partitioning.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Palindrome_Partitioning.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\isPalindrome(string&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "isPalindrome(string&,int,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\isPalindrome(string&,int,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "EXPECTED_start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\isPalindrome(string&,int,int)\\start",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\isPalindrome(string&,int,int)\\s",
                                    "correspondingType": "string&",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "end",
                                    "virtual_name": "EXPECTED_end",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\isPalindrome(string&,int,int)\\end",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\isPalindrome(string&,int,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string&",
                                    "realType": "string&",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\isPalindrome(string&,int,int)\\s",
                                    "correspondingType": "string&",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\isPalindrome(string&,int,int)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "88"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "start",
                                    "virtual_name": "start",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\isPalindrome(string&,int,int)\\start",
                                    "correspondingType": "int",
                                    "value": "6"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "end",
                                    "virtual_name": "end",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\isPalindrome(string&,int,int)\\end",
                                    "correspondingType": "int",
                                    "value": "9"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning.cpp\\Solution\\isPalindrome(string&,int,int)\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_isPalindrome_string_int_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_string_int_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Palindrome_Partitioning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName721674 = new char[2];akaRandomName721674[0] = 88;akaRandomName721674[1] = '\\0';string s=akaRandomName721674;\n\n\nint start=6;\n\n\nint end=9;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode start */\n/* NormalNumberDataNode end */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_string_int_int_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(s,start,end);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\eleven\\\\Palindrome_Partitioning.cpp\\\\Solution\\\\isPalindrome(string&,int,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Palindrome_Partitioning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName634025 = new char[2];akaRandomName634025[0] = 88;akaRandomName634025[1] = '\\0';string s=akaRandomName634025;\n\n\nint start=6;\n\n\nint end=9;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode start */\n/* NormalNumberDataNode end */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<vector<string>> partition(string s) {\r         vector<vector<string>> result;\r         vector<string> output;\r         DFS(s, 0, output, result);\r         return result;\r     }\r     void DFS(string &s, int start, vector<string>& output,\r              vector<vector<string>> &result)\r     {\r         if (start == s.size())\r         {\r             result.push_back(output);\r             return;\r         }\r         for (int i = start; i < s.size(); i++)\r         {\r             if (isPalindrome(s, start, i))\r             {\r                 output.push_back(s.substr(start, i - start + 1));\r                 DFS(s, i + 1, output, result);\r                 output.pop_back();\r             }\r         }\r     }\r     bool isPalindrome(string &s, int start, int end)\r     {\r         while (start < end)\r         {\r             if (s[start] != s[end])\r                 return false;\r             start++; end--;\r         }\r         return true;\r     }\r \r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\eleven\\Palindrome_Partitioning.cpp\\Solution\\isPalindrome(string&,int,int)"
    },
    {
        "f": [],
        "fm": "int minCut(string s) {\r         int len = s.size();\r         int D[len + 1];\r         bool P[len][len];\r         //the worst case is cutting by each char\r         for (int i = 0; i <= len; i++)\r             D[i] = len - i;\r         for (int i = 0; i < len; i++)\r             for (int j = 0; j < len; j++)\r                 P[i][j] = false;\r         for (int i = len - 1; i >= 0; i--) {\r             for (int j = i; j < len; j++) {\r                 if (s[i] == s[j] && (j - i < 2 || P[i + 1][j - 1])) {\r                     P[i][j] = true;\r                     D[i] = min(D[i], D[j + 1] + 1);\r                 }\r             }\r         }\r         return D[0] - 1;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Palindrome_Partitioning_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Palindrome_Partitioning_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution\\minCut(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "minCut(string)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution\\minCut(string)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "EXPECTED_s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution\\minCut(string)\\s",
                                    "correspondingType": "string",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution\\minCut(string)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalStringDataNode",
                                    "name": "s",
                                    "virtual_name": "s",
                                    "dataType": "string",
                                    "realType": "string",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution\\minCut(string)\\s",
                                    "correspondingType": "string",
                                    "value": "3",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.NormalCharacterDataNode",
                                            "name": "s[0]",
                                            "virtual_name": "s[0]",
                                            "dataType": "char",
                                            "realType": "char",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution\\minCut(string)\\s\\s[0]",
                                            "correspondingType": "char",
                                            "value": "-57"
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Palindrome_Partitioning_II.cpp\\Solution\\minCut(string)\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_minCut_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_minCut_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Palindrome_Partitioning_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName681171 = new char[2];akaRandomName681171[0] = -57;akaRandomName681171[1] = '\\0';string s=akaRandomName681171;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minCut_string_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minCut(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\eleven\\\\Palindrome_Partitioning_II.cpp\\\\Solution\\\\minCut(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Palindrome_Partitioning_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName12861 = new char[2];akaRandomName12861[0] = -57;akaRandomName12861[1] = '\\0';string s=akaRandomName12861;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int minCut(string s) {\r         int len = s.size();\r         int D[len + 1];\r         bool P[len][len];\r         //the worst case is cutting by each char\r         for (int i = 0; i <= len; i++)\r             D[i] = len - i;\r         for (int i = 0; i < len; i++)\r             for (int j = 0; j < len; j++)\r                 P[i][j] = false;\r         for (int i = len - 1; i >= 0; i--) {\r             for (int j = i; j < len; j++) {\r                 if (s[i] == s[j] && (j - i < 2 || P[i + 1][j - 1])) {\r                     P[i][j] = true;\r                     D[i] = min(D[i], D[j + 1] + 1);\r                 }\r             }\r         }\r         return D[0] - 1;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\eleven\\Palindrome_Partitioning_II.cpp\\Solution\\minCut(string)"
    },
    {
        "f": [],
        "fm": "ListNode(int x) : val(x), next(NULL) {}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Partition_List.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Partition_List.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___ListNode",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                    "dataType": "::ListNode",
                                    "realType": "::ListNode",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___ListNode",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                            "dataType": "::ListNode",
                                            "realType": "::ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                            "rawType": "::ListNode",
                                            "selectedConstructor": "ListNode(int)",
                                            "variableType": "::ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "ListNode(int)",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "functionNode": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "next",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___ListNode->next",
                                                    "dataType": "ListNode*",
                                                    "realType": "ListNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next",
                                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.StructDataNode",
                                    "name": "AKA_INSTANCE___ListNode",
                                    "virtual_name": "AKA_INSTANCE___ListNode",
                                    "dataType": "::ListNode",
                                    "realType": "::ListNode",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                            "name": "AKA_INSTANCE___ListNode",
                                            "virtual_name": "AKA_INSTANCE___ListNode",
                                            "dataType": "::ListNode",
                                            "realType": "::ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\AKA_INSTANCE___ListNode",
                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                            "rawType": "::ListNode",
                                            "selectedConstructor": "ListNode(int)",
                                            "variableType": "::ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "ListNode(int)",
                                                    "virtual_name": "AKA_INSTANCE___ListNode",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "functionNode": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "x",
                                                            "virtual_name": "AKA_INSTANCE___ListNode_x",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)\\x",
                                                            "correspondingType": "int",
                                                            "value": "-237120932"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                    "name": "val",
                                                    "virtual_name": "AKA_INSTANCE___ListNode->val",
                                                    "dataType": "int",
                                                    "realType": "int",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\val",
                                                    "correspondingType": "int",
                                                    "value": "null"
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "next",
                                                    "virtual_name": "AKA_INSTANCE___ListNode->next",
                                                    "dataType": "ListNode*",
                                                    "realType": "ListNode*",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next",
                                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "ListNode(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)"
                        }
                    ]
                },
                "td": "void AKA_TEST_ListNode_int_random_0(void) {\n{\nAKA_test_case_name=\"ListNode_int_random_0\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___ListNode */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___ListNode_x=-237120932;\nAKA_mark(\"<<PRE-CALLING>> Test ListNode_int_random_0\");AKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___ListNode\\\\AKA_INSTANCE___ListNode\\\\ListNode(int)\");AKA_fCall++;AKA_INSTANCE___ListNode = new ::ListNode(AKA_INSTANCE___ListNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nAKA_INSTANCE___ListNode->next;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___ListNode */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___ListNode_x=-237120932;\nAKA_mark(\"<<PRE-CALLING>> Test ListNode_int_random_0\");AKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___ListNode\\\\AKA_INSTANCE___ListNode\\\\ListNode(int)\");AKA_fCall++;AKA_INSTANCE___ListNode = new ::ListNode(AKA_INSTANCE___ListNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nAKA_INSTANCE___ListNode->next;\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)"
    },
    {
        "f": [],
        "fm": "ListNode *partition(ListNode *head, int x) {\r         ListNode* p = new ListNode(x - 1);\r         p->next = head;\r         head = p;\r         ListNode* pre;\r         while (p != NULL && p->val < x)\r         {\r             pre = p;\r             p = p->next;\r         }\r         if (p != NULL)\r         {\r             //Track the insert position.\r             ListNode* cur = pre;\r             while (p != NULL)\r             {\r                 if (p->val < x)\r                 {\r                     ListNode* temp = cur->next;\r                     pre->next = p->next;\r                     cur->next = p;\r                     cur = p;\r                     p->next = temp;\r                     p = pre;\r                 }\r                 pre = p;\r                 p = p->next;\r             }\r         }\r         ListNode* temp = head;\r         head = head->next;\r         delete temp;\r         return head;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Partition_List.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Partition_List.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "partition(ListNode*,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "ListNode*",
                            "realType": "ListNode*",
                            "functionNode": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "EXPECTED_x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\x",
                                    "correspondingType": "int",
                                    "value": "null"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "EXPECTED_head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\head",
                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                    "level": 1
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\head",
                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                    "level": 1,
                                    "size": 3,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "head[0]",
                                            "virtual_name": "head[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\head\\head[0]",
                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "head",
                                                    "virtual_name": "head[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\head\\head",
                                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "head[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "head0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "9"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "head[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "head[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "head[1]",
                                            "virtual_name": "head[1]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\head\\head[1]",
                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "head",
                                                    "virtual_name": "head[1]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\head\\head",
                                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "head[1]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "head1_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "9"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "head[1].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "head[1].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "head[2]",
                                            "virtual_name": "head[2]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\head\\head[2]",
                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "head",
                                                    "virtual_name": "head[2]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\head\\head",
                                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "head[2]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "head2_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "2"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "head[2].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "head[2].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                            "level": 1
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\x",
                                    "correspondingType": "int",
                                    "value": "10"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\RETURN",
                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_partition_ListNodemul_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_partition_ListNodemul_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Partition_List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=9;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=9;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=2;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nint x=10;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode x */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_partition_ListNodemul_int_random_1\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->partition(head,x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\eleven\\\\Partition_List.cpp\\\\Solution\\\\partition(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Partition_List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=9;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=9;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=2;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nint x=10;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode x */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Partition_List.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Partition_List.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "partition(ListNode*,int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "ListNode*",
                            "realType": "ListNode*",
                            "functionNode": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "EXPECTED_head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\head",
                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                    "level": 1
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "EXPECTED_x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\x",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "head",
                                    "virtual_name": "head",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\head",
                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                    "level": 1,
                                    "size": 1,
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.StructDataNode",
                                            "name": "head[0]",
                                            "virtual_name": "head[0]",
                                            "dataType": "ListNode",
                                            "realType": "ListNode",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\head\\head[0]",
                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.SubStructDataNode",
                                                    "name": "head",
                                                    "virtual_name": "head[0]",
                                                    "dataType": "::ListNode",
                                                    "realType": "::ListNode",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\head\\head",
                                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                    "rawType": "::ListNode",
                                                    "selectedConstructor": "ListNode(int)",
                                                    "variableType": "::ListNode",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.ConstructorDataNode",
                                                            "name": "ListNode(int)",
                                                            "virtual_name": "head[0]",
                                                            "dataType": "::ListNode",
                                                            "realType": "::ListNode",
                                                            "functionNode": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)",
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "x",
                                                                    "virtual_name": "head0_x",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)\\x",
                                                                    "correspondingType": "int",
                                                                    "value": "4"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                            "name": "val",
                                                            "virtual_name": "head[0].val",
                                                            "dataType": "int",
                                                            "realType": "int",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\val",
                                                            "correspondingType": "int",
                                                            "value": "null"
                                                        },
                                                        {
                                                            "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                            "name": "next",
                                                            "virtual_name": "head[0].next",
                                                            "dataType": "ListNode*",
                                                            "realType": "ListNode*",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next",
                                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                            "level": 1,
                                                            "size": 3,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "next[0]",
                                                                    "virtual_name": "head[0].next[0]",
                                                                    "dataType": "ListNode",
                                                                    "realType": "ListNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next\\next[0]",
                                                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "next",
                                                                            "virtual_name": "head[0].next[0]",
                                                                            "dataType": "::ListNode",
                                                                            "realType": "::ListNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next\\next",
                                                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                                            "rawType": "::ListNode",
                                                                            "selectedConstructor": "ListNode(int)",
                                                                            "variableType": "::ListNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "ListNode(int)",
                                                                                    "virtual_name": "head[0].next[0]",
                                                                                    "dataType": "::ListNode",
                                                                                    "realType": "::ListNode",
                                                                                    "functionNode": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "head0_next0_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "head[0].next[0].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "null"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "next",
                                                                                    "virtual_name": "head[0].next[0].next",
                                                                                    "dataType": "ListNode*",
                                                                                    "realType": "ListNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next",
                                                                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "next[1]",
                                                                    "virtual_name": "head[0].next[1]",
                                                                    "dataType": "ListNode",
                                                                    "realType": "ListNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next\\next[1]",
                                                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "next",
                                                                            "virtual_name": "head[0].next[1]",
                                                                            "dataType": "::ListNode",
                                                                            "realType": "::ListNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next\\next",
                                                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                                            "rawType": "::ListNode",
                                                                            "selectedConstructor": "ListNode(int)",
                                                                            "variableType": "::ListNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "ListNode(int)",
                                                                                    "virtual_name": "head[0].next[1]",
                                                                                    "dataType": "::ListNode",
                                                                                    "realType": "::ListNode",
                                                                                    "functionNode": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "head0_next1_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "3"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "head[0].next[1].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "null"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "next",
                                                                                    "virtual_name": "head[0].next[1].next",
                                                                                    "dataType": "ListNode*",
                                                                                    "realType": "ListNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next",
                                                                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "com.dse.testdata.object.StructDataNode",
                                                                    "name": "next[2]",
                                                                    "virtual_name": "head[0].next[2]",
                                                                    "dataType": "ListNode",
                                                                    "realType": "ListNode",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next\\next[2]",
                                                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                                    "children": [
                                                                        {
                                                                            "type": "com.dse.testdata.object.SubStructDataNode",
                                                                            "name": "next",
                                                                            "virtual_name": "head[0].next[2]",
                                                                            "dataType": "::ListNode",
                                                                            "realType": "::ListNode",
                                                                            "external": false,
                                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next\\next",
                                                                            "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                                            "rawType": "::ListNode",
                                                                            "selectedConstructor": "ListNode(int)",
                                                                            "variableType": "::ListNode",
                                                                            "children": [
                                                                                {
                                                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                                                    "name": "ListNode(int)",
                                                                                    "virtual_name": "head[0].next[2]",
                                                                                    "dataType": "::ListNode",
                                                                                    "realType": "::ListNode",
                                                                                    "functionNode": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                            "name": "x",
                                                                                            "virtual_name": "head0_next2_x",
                                                                                            "dataType": "int",
                                                                                            "realType": "int",
                                                                                            "external": false,
                                                                                            "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\ListNode(int)\\x",
                                                                                            "correspondingType": "int",
                                                                                            "value": "3"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                                    "name": "val",
                                                                                    "virtual_name": "head[0].next[2].val",
                                                                                    "dataType": "int",
                                                                                    "realType": "int",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\val",
                                                                                    "correspondingType": "int",
                                                                                    "value": "null"
                                                                                },
                                                                                {
                                                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                                                    "name": "next",
                                                                                    "virtual_name": "head[0].next[2].next",
                                                                                    "dataType": "ListNode*",
                                                                                    "realType": "ListNode*",
                                                                                    "external": false,
                                                                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\ListNode\\next",
                                                                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                                                                    "level": 1
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "x",
                                    "virtual_name": "x",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\x",
                                    "correspondingType": "int",
                                    "value": "3"
                                },
                                {
                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "ListNode*",
                                    "realType": "ListNode*",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)\\RETURN",
                                    "correspondingType": ".\\eleven\\Partition_List.cpp\\ListNode",
                                    "level": 1
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_partition_ListNodemul_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_partition_ListNodemul_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Partition_List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=4;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=1;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=3;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next2_x=3;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_2 = new ::ListNode(head0_next2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_2).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_2);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nint x=3;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode x */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_partition_ListNodemul_int_random_3\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->partition(head,x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\eleven\\\\Partition_List.cpp\\\\Solution\\\\partition(ListNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Partition_List.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=4;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=1;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=3;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next2_x=3;\nAKA_mark(\"Calling: .\\\\eleven\\\\Partition_List.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\Partition_List.cpp\\\\partition(ListNode*,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_2 = new ::ListNode(head0_next2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_2).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_2);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nint x=3;\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode x */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r \r     ListNode *partition(ListNode *head, int x) {\r         ListNode* p = new ListNode(x - 1);\r         p->next = head;\r         head = p;\r         ListNode* pre;\r         while (p != NULL && p->val < x)\r         {\r             pre = p;\r             p = p->next;\r         }\r         if (p != NULL)\r         {\r             //Track the insert position.\r             ListNode* cur = pre;\r             while (p != NULL)\r             {\r                 if (p->val < x)\r                 {\r                     ListNode* temp = cur->next;\r                     pre->next = p->next;\r                     cur->next = p;\r                     cur = p;\r                     p->next = temp;\r                     p = pre;\r                 }\r                 pre = p;\r                 p = p->next;\r             }\r         }\r         ListNode* temp = head;\r         head = head->next;\r         delete temp;\r         return head;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\eleven\\Partition_List.cpp\\Solution\\partition(ListNode*,int)"
    },
    {
        "f": [],
        "fm": "vector<int> getRow(int rowIndex) {\r         vector<int> result;\r         result.resize(rowIndex + 2);\r         for (int i = 0; i < rowIndex + 2; i++)\r             result[i] = 0;\r         result[1] = 1;\r         for (int i = 0; i < rowIndex; i++)\r         {\r             //from right to left. avoid duplicate add\r             for (int j = rowIndex + 1; j > 0; j--)\r             {\r                 result[j] = result[j - 1] + result[j];\r             }\r         }\r         result.erase(result.begin());\r         return result;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Pascal's_Triangle_II.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Pascal's_Triangle_II.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Pascal's_Triangle_II.cpp\\Solution\\getRow(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Pascal's_Triangle_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Pascal's_Triangle_II.cpp\\Solution"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___Solution",
                                    "virtual_name": "AKA_INSTANCE___Solution",
                                    "dataType": "::Solution",
                                    "realType": "::Solution",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Pascal's_Triangle_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                    "correspondingType": ".\\eleven\\Pascal's_Triangle_II.cpp\\Solution",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___Solution",
                                            "virtual_name": "AKA_INSTANCE___Solution",
                                            "dataType": "::Solution",
                                            "realType": "::Solution",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Pascal's_Triangle_II.cpp\\Solution\\AKA_INSTANCE___Solution",
                                            "correspondingType": ".\\eleven\\Pascal's_Triangle_II.cpp\\Solution",
                                            "rawType": "::Solution",
                                            "selectedConstructor": "Solution()",
                                            "variableType": "::Solution",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "Solution()",
                                                    "virtual_name": "AKA_INSTANCE___Solution",
                                                    "dataType": "::Solution",
                                                    "realType": "::Solution",
                                                    "functionNode": "\\Solution()"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "getRow(int)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "vector<int>",
                            "realType": "vector<int>",
                            "functionNode": ".\\eleven\\Pascal's_Triangle_II.cpp\\Solution\\getRow(int)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "rowIndex",
                                    "virtual_name": "EXPECTED_rowIndex",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Pascal's_Triangle_II.cpp\\Solution\\getRow(int)\\rowIndex",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ],
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\eleven\\Pascal's_Triangle_II.cpp\\Solution\\getRow(int)",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "rowIndex",
                                    "virtual_name": "rowIndex",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Pascal's_Triangle_II.cpp\\Solution\\getRow(int)\\rowIndex",
                                    "correspondingType": "int",
                                    "value": "10"
                                },
                                {
                                    "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "vector<int>",
                                    "realType": "vector<int>",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Pascal's_Triangle_II.cpp\\Solution\\getRow(int)\\RETURN",
                                    "correspondingType": "STLListBaseType",
                                    "templateArg": "int"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_Solution_getRow_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_getRow_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Pascal's_Triangle_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rowIndex=10;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rowIndex */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_getRow_int_random_3\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->getRow(rowIndex);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\eleven\\\\Pascal's_Triangle_II.cpp\\\\Solution\\\\getRow(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\Pascal's_Triangle_II.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rowIndex=10;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rowIndex */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<int> getRow(int rowIndex) {\r         vector<int> result;\r         result.resize(rowIndex + 2);\r         for (int i = 0; i < rowIndex + 2; i++)\r             result[i] = 0;\r         result[1] = 1;\r         for (int i = 0; i < rowIndex; i++)\r         {\r             //from right to left. avoid duplicate add\r             for (int j = rowIndex + 1; j > 0; j--)\r             {\r                 result[j] = result[j - 1] + result[j];\r             }\r         }\r         result.erase(result.begin());\r         return result;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\eleven\\Pascal's_Triangle_II.cpp\\Solution\\getRow(int)"
    },
    {
        "f": [
            "int currentIndex = 0;",
            "int length = 0;",
            "const vector<int> * nums = NULL;"
        ],
        "fm": "PeekingIterator(const vector<int>& nums) : Iterator(nums) {\r \t    // Initialize any member here.\r \t    // **DO NOT** save a copy of nums and manipulate it directly.\r \t    // You should only use the Iterator interface methods.\r \t    this->length = nums.size();\r \t    this->nums = &nums;\r \t}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Peeking_Iterator.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Peeking_Iterator.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___PeekingIterator",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___PeekingIterator",
                                    "dataType": "::PeekingIterator",
                                    "realType": "::PeekingIterator",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___PeekingIterator",
                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___PeekingIterator",
                                            "dataType": "::PeekingIterator",
                                            "realType": "::PeekingIterator",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                            "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator",
                                            "rawType": "::PeekingIterator",
                                            "selectedConstructor": "PeekingIterator(vector<int>const&)",
                                            "variableType": "::PeekingIterator",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "PeekingIterator(vector<int>const&)",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___PeekingIterator",
                                                    "dataType": "::PeekingIterator",
                                                    "realType": "::PeekingIterator",
                                                    "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                            "name": "nums",
                                                            "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___PeekingIterator_nums",
                                                            "dataType": "vector<int>const",
                                                            "realType": "vector<int>const&",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)\\nums",
                                                            "correspondingType": "STLListBaseType",
                                                            "templateArg": "int"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "data",
                                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___PeekingIterator->data",
                                                    "dataType": "Data*",
                                                    "realType": "Data*",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\Iterator\\data",
                                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\Iterator\\Data",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___PeekingIterator",
                                    "virtual_name": "AKA_INSTANCE___PeekingIterator",
                                    "dataType": "::PeekingIterator",
                                    "realType": "::PeekingIterator",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___PeekingIterator",
                                            "virtual_name": "AKA_INSTANCE___PeekingIterator",
                                            "dataType": "::PeekingIterator",
                                            "realType": "::PeekingIterator",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                            "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator",
                                            "rawType": "::PeekingIterator",
                                            "selectedConstructor": "PeekingIterator(vector<int>const&)",
                                            "variableType": "::PeekingIterator",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "PeekingIterator(vector<int>const&)",
                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator",
                                                    "dataType": "::PeekingIterator",
                                                    "realType": "::PeekingIterator",
                                                    "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                            "name": "nums",
                                                            "virtual_name": "AKA_INSTANCE___PeekingIterator_nums",
                                                            "dataType": "vector<int>const",
                                                            "realType": "vector<int>const&",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)\\nums",
                                                            "correspondingType": "STLListBaseType",
                                                            "templateArg": "int",
                                                            "size": 3,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "element #0",
                                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator_nums_element0",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)\\nums\\element #0",
                                                                    "correspondingType": "int",
                                                                    "value": "1128176410"
                                                                },
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "element #1",
                                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator_nums_element1",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)\\nums\\element #1",
                                                                    "correspondingType": "int",
                                                                    "value": "-946805241"
                                                                },
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "element #2",
                                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator_nums_element2",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)\\nums\\element #2",
                                                                    "correspondingType": "int",
                                                                    "value": "1174461125"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "data",
                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator->data",
                                                    "dataType": "Data*",
                                                    "realType": "Data*",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\Iterator\\data",
                                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\Iterator\\Data",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "PeekingIterator(vector<int>const&)",
                            "virtual_name": "NON_VALUE",
                            "dataType": "",
                            "realType": "",
                            "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)"
                        }
                    ]
                },
                "td": "void AKA_TEST_PeekingIterator_PeekingIterator_vector_int_const_random_0(void) {\n{\nAKA_test_case_name=\"PeekingIterator_PeekingIterator_vector_int_const_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___PeekingIterator */\n/* ConstructorDataNode PeekingIterator(vector<int>const&) */\n/* VectorDataNode nums */\nvector<int>AKA_INSTANCE___PeekingIterator_nums;\nint AKA_INSTANCE___PeekingIterator_nums_element0=1128176410;\nAKA_INSTANCE___PeekingIterator_nums.push_back(AKA_INSTANCE___PeekingIterator_nums_element0);\nint AKA_INSTANCE___PeekingIterator_nums_element1=-946805241;\nAKA_INSTANCE___PeekingIterator_nums.push_back(AKA_INSTANCE___PeekingIterator_nums_element1);\nint AKA_INSTANCE___PeekingIterator_nums_element2=1174461125;\nAKA_INSTANCE___PeekingIterator_nums.push_back(AKA_INSTANCE___PeekingIterator_nums_element2);\nAKA_mark(\"<<PRE-CALLING>> Test PeekingIterator_PeekingIterator_vector_int_const_random_0\");AKA_mark(\"Calling: .\\\\eleven\\\\Peeking_Iterator.cpp\\\\PeekingIterator\\\\PeekingIterator(vector<int>const&)|ROOT\\\\Peeking_Iterator.cpp\\\\GLOBAL\\\\AKA_INSTANCE___PeekingIterator\\\\AKA_INSTANCE___PeekingIterator\\\\PeekingIterator(vector<int>const&)\");AKA_fCall++;AKA_INSTANCE___PeekingIterator = new ::PeekingIterator(AKA_INSTANCE___PeekingIterator_nums);\n/* PointerStructureDataNode data */\nAKA_INSTANCE___PeekingIterator->data;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n/* SubClassDataNode AKA_INSTANCE___PeekingIterator */\n/* ConstructorDataNode PeekingIterator(vector<int>const&) */\n/* VectorDataNode nums */\nvector<int>const EXPECTED_AKA_GLOBAL_AKA_INSTANCE___PeekingIterator_nums;\nAKA_mark(\"<<PRE-CALLING>>\");AKA_mark(\"Calling: .\\\\eleven\\\\Peeking_Iterator.cpp\\\\PeekingIterator\\\\PeekingIterator(vector<int>const&)|ROOT\\\\Peeking_Iterator.cpp\\\\GLOBAL\\\\AKA_INSTANCE___PeekingIterator\\\\AKA_INSTANCE___PeekingIterator\\\\PeekingIterator(vector<int>const&)\");AKA_fCall++;auto EXPECTED_AKA_GLOBAL_AKA_INSTANCE___PeekingIterator = new ::PeekingIterator(EXPECTED_AKA_GLOBAL_AKA_INSTANCE___PeekingIterator_nums);\n/* PointerStructureDataNode data */\nEXPECTED_AKA_GLOBAL_AKA_INSTANCE___PeekingIterator->data;\n\n\n\n\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___PeekingIterator */\n/* ConstructorDataNode PeekingIterator(vector<int>const&) */\n/* VectorDataNode nums */\nvector<int>AKA_INSTANCE___PeekingIterator_nums;\nint AKA_INSTANCE___PeekingIterator_nums_element0=1128176410;\nAKA_INSTANCE___PeekingIterator_nums.push_back(AKA_INSTANCE___PeekingIterator_nums_element0);\nint AKA_INSTANCE___PeekingIterator_nums_element1=-946805241;\nAKA_INSTANCE___PeekingIterator_nums.push_back(AKA_INSTANCE___PeekingIterator_nums_element1);\nint AKA_INSTANCE___PeekingIterator_nums_element2=1174461125;\nAKA_INSTANCE___PeekingIterator_nums.push_back(AKA_INSTANCE___PeekingIterator_nums_element2);\nAKA_mark(\"<<PRE-CALLING>> Test PeekingIterator_PeekingIterator_vector_int_const_random_0\");AKA_mark(\"Calling: .\\\\eleven\\\\Peeking_Iterator.cpp\\\\PeekingIterator\\\\PeekingIterator(vector<int>const&)|ROOT\\\\Peeking_Iterator.cpp\\\\GLOBAL\\\\AKA_INSTANCE___PeekingIterator\\\\AKA_INSTANCE___PeekingIterator\\\\PeekingIterator(vector<int>const&)\");AKA_fCall++;AKA_INSTANCE___PeekingIterator = new ::PeekingIterator(AKA_INSTANCE___PeekingIterator_nums);\n/* PointerStructureDataNode data */\nAKA_INSTANCE___PeekingIterator->data;\n\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class PeekingIterator : public Iterator {\r public:\r \tPeekingIterator(const vector<int>& nums) : Iterator(nums) {\r \t    // Initialize any member here.\r \t    // **DO NOT** save a copy of nums and manipulate it directly.\r \t    // You should only use the Iterator interface methods.\r \t    this->length = nums.size();\r \t    this->nums = &nums;\r \t}\r \r     // Returns the next element in the iteration without advancing the iterator.\r \tint peek() {\r         if(currentIndex < length) {\r \t        return (*this->nums)[currentIndex];\r \t    }\r \t    return -1;\r \t}\r \r \t// hasNext() and next() should behave the same as in the Iterator interface.\r \t// Override them if needed.\r \tint next() {\r \t    if(currentIndex < length) {\r \t        currentIndex ++;\r \t        return (*this->nums)[currentIndex-1];\r \t    }\r \t    return -1;\r \t}\r \r \tbool hasNext() const {\r \t    return currentIndex < length;\r \t}\r \t\r private:\r     int currentIndex = 0;\r     int length = 0;\r     const vector<int>* nums = NULL;\r };",
        "c": [
            "PeekingIterator(const vector<int>& nums) : Iterator(nums) {\r\n\t    // Initialize any member here.\r\n\t    // **DO NOT** save a copy of nums and manipulate it directly.\r\n\t    // You should only use the Iterator interface methods.\r\n\t    this->length = nums.size();\r\n\t    this->nums = &nums;\r\n\t}"
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)"
    },
    {
        "f": [
            "int currentIndex = 0;",
            "int length = 0;",
            "const vector<int> * nums = NULL;"
        ],
        "fm": "int peek() {\r         if(currentIndex < length) {\r \t        return (*this->nums)[currentIndex];\r \t    }\r \t    return -1;\r \t}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Peeking_Iterator.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Peeking_Iterator.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\peek()",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___PeekingIterator",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___PeekingIterator",
                                    "dataType": "::PeekingIterator",
                                    "realType": "::PeekingIterator",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___PeekingIterator",
                                    "virtual_name": "AKA_INSTANCE___PeekingIterator",
                                    "dataType": "::PeekingIterator",
                                    "realType": "::PeekingIterator",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___PeekingIterator",
                                            "virtual_name": "AKA_INSTANCE___PeekingIterator",
                                            "dataType": "::PeekingIterator",
                                            "realType": "::PeekingIterator",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                            "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator",
                                            "rawType": "::PeekingIterator",
                                            "selectedConstructor": "PeekingIterator(vector<int>const&)",
                                            "variableType": "::PeekingIterator",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "PeekingIterator(vector<int>const&)",
                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator",
                                                    "dataType": "::PeekingIterator",
                                                    "realType": "::PeekingIterator",
                                                    "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                            "name": "nums",
                                                            "virtual_name": "AKA_INSTANCE___PeekingIterator_nums",
                                                            "dataType": "vector<int>const",
                                                            "realType": "vector<int>const&",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)\\nums",
                                                            "correspondingType": "STLListBaseType",
                                                            "templateArg": "int",
                                                            "size": 1,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "element #0",
                                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator_nums_element0",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)\\nums\\element #0",
                                                                    "correspondingType": "int",
                                                                    "value": "-1917993104"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "data",
                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator->data",
                                                    "dataType": "Data*",
                                                    "realType": "Data*",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\Iterator\\data",
                                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\Iterator\\Data",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "peek()",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\peek()",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\peek()",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\peek()\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_PeekingIterator_peek_random_0(void) {\n{\nAKA_test_case_name=\"PeekingIterator_peek_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___PeekingIterator */\n/* ConstructorDataNode PeekingIterator(vector<int>const&) */\n/* VectorDataNode nums */\nvector<int>AKA_INSTANCE___PeekingIterator_nums;\nint AKA_INSTANCE___PeekingIterator_nums_element0=-1917993104;\nAKA_INSTANCE___PeekingIterator_nums.push_back(AKA_INSTANCE___PeekingIterator_nums_element0);\nAKA_mark(\"Calling: .\\\\eleven\\\\Peeking_Iterator.cpp\\\\PeekingIterator\\\\PeekingIterator(vector<int>const&)|ROOT\\\\Peeking_Iterator.cpp\\\\GLOBAL\\\\AKA_INSTANCE___PeekingIterator\\\\AKA_INSTANCE___PeekingIterator\\\\PeekingIterator(vector<int>const&)\");AKA_fCall++;AKA_INSTANCE___PeekingIterator = new ::PeekingIterator(AKA_INSTANCE___PeekingIterator_nums);\n/* PointerStructureDataNode data */\nAKA_INSTANCE___PeekingIterator->data;\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test PeekingIterator_peek_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___PeekingIterator->peek();\nAKA_fCall++;AKA_mark(\"Return from: .\\\\eleven\\\\Peeking_Iterator.cpp\\\\PeekingIterator\\\\peek()\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___PeekingIterator */\n/* ConstructorDataNode PeekingIterator(vector<int>const&) */\n/* VectorDataNode nums */\nvector<int>AKA_INSTANCE___PeekingIterator_nums;\nint AKA_INSTANCE___PeekingIterator_nums_element0=-1917993104;\nAKA_INSTANCE___PeekingIterator_nums.push_back(AKA_INSTANCE___PeekingIterator_nums_element0);\nAKA_mark(\"Calling: .\\\\eleven\\\\Peeking_Iterator.cpp\\\\PeekingIterator\\\\PeekingIterator(vector<int>const&)|ROOT\\\\Peeking_Iterator.cpp\\\\GLOBAL\\\\AKA_INSTANCE___PeekingIterator\\\\AKA_INSTANCE___PeekingIterator\\\\PeekingIterator(vector<int>const&)\");AKA_fCall++;AKA_INSTANCE___PeekingIterator = new ::PeekingIterator(AKA_INSTANCE___PeekingIterator_nums);\n/* PointerStructureDataNode data */\nAKA_INSTANCE___PeekingIterator->data;\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class PeekingIterator : public Iterator {\r public:\r \tPeekingIterator(const vector<int>& nums) : Iterator(nums) {\r \t    // Initialize any member here.\r \t    // **DO NOT** save a copy of nums and manipulate it directly.\r \t    // You should only use the Iterator interface methods.\r \t    this->length = nums.size();\r \t    this->nums = &nums;\r \t}\r \r     // Returns the next element in the iteration without advancing the iterator.\r \tint peek() {\r         if(currentIndex < length) {\r \t        return (*this->nums)[currentIndex];\r \t    }\r \t    return -1;\r \t}\r \r \t// hasNext() and next() should behave the same as in the Iterator interface.\r \t// Override them if needed.\r \tint next() {\r \t    if(currentIndex < length) {\r \t        currentIndex ++;\r \t        return (*this->nums)[currentIndex-1];\r \t    }\r \t    return -1;\r \t}\r \r \tbool hasNext() const {\r \t    return currentIndex < length;\r \t}\r \t\r private:\r     int currentIndex = 0;\r     int length = 0;\r     const vector<int>* nums = NULL;\r };",
        "c": [
            "PeekingIterator(const vector<int>& nums) : Iterator(nums) {\r\n\t    // Initialize any member here.\r\n\t    // **DO NOT** save a copy of nums and manipulate it directly.\r\n\t    // You should only use the Iterator interface methods.\r\n\t    this->length = nums.size();\r\n\t    this->nums = &nums;\r\n\t}"
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\peek()"
    },
    {
        "f": [
            "int currentIndex = 0;",
            "int length = 0;",
            "const vector<int> * nums = NULL;"
        ],
        "fm": "int next() {\r \t    if(currentIndex < length) {\r \t        currentIndex ++;\r \t        return (*this->nums)[currentIndex-1];\r \t    }\r \t    return -1;\r \t}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Peeking_Iterator.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Peeking_Iterator.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\next()",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___PeekingIterator",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___PeekingIterator",
                                    "dataType": "::PeekingIterator",
                                    "realType": "::PeekingIterator",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___PeekingIterator",
                                    "virtual_name": "AKA_INSTANCE___PeekingIterator",
                                    "dataType": "::PeekingIterator",
                                    "realType": "::PeekingIterator",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___PeekingIterator",
                                            "virtual_name": "AKA_INSTANCE___PeekingIterator",
                                            "dataType": "::PeekingIterator",
                                            "realType": "::PeekingIterator",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                            "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator",
                                            "rawType": "::PeekingIterator",
                                            "selectedConstructor": "PeekingIterator(vector<int>const&)",
                                            "variableType": "::PeekingIterator",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "PeekingIterator(vector<int>const&)",
                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator",
                                                    "dataType": "::PeekingIterator",
                                                    "realType": "::PeekingIterator",
                                                    "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                            "name": "nums",
                                                            "virtual_name": "AKA_INSTANCE___PeekingIterator_nums",
                                                            "dataType": "vector<int>const",
                                                            "realType": "vector<int>const&",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)\\nums",
                                                            "correspondingType": "STLListBaseType",
                                                            "templateArg": "int",
                                                            "size": 1,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "element #0",
                                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator_nums_element0",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)\\nums\\element #0",
                                                                    "correspondingType": "int",
                                                                    "value": "-663253149"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "data",
                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator->data",
                                                    "dataType": "Data*",
                                                    "realType": "Data*",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\Iterator\\data",
                                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\Iterator\\Data",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "next()",
                            "virtual_name": "NON_VALUE",
                            "dataType": "int",
                            "realType": "int",
                            "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\next()",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\next()",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "int",
                                    "realType": "int",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\next()\\RETURN",
                                    "correspondingType": "int",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_PeekingIterator_next_random_0(void) {\n{\nAKA_test_case_name=\"PeekingIterator_next_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___PeekingIterator */\n/* ConstructorDataNode PeekingIterator(vector<int>const&) */\n/* VectorDataNode nums */\nvector<int>AKA_INSTANCE___PeekingIterator_nums;\nint AKA_INSTANCE___PeekingIterator_nums_element0=-663253149;\nAKA_INSTANCE___PeekingIterator_nums.push_back(AKA_INSTANCE___PeekingIterator_nums_element0);\nAKA_mark(\"Calling: .\\\\eleven\\\\Peeking_Iterator.cpp\\\\PeekingIterator\\\\PeekingIterator(vector<int>const&)|ROOT\\\\Peeking_Iterator.cpp\\\\GLOBAL\\\\AKA_INSTANCE___PeekingIterator\\\\AKA_INSTANCE___PeekingIterator\\\\PeekingIterator(vector<int>const&)\");AKA_fCall++;AKA_INSTANCE___PeekingIterator = new ::PeekingIterator(AKA_INSTANCE___PeekingIterator_nums);\n/* PointerStructureDataNode data */\nAKA_INSTANCE___PeekingIterator->data;\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test PeekingIterator_next_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___PeekingIterator->next();\nAKA_fCall++;AKA_mark(\"Return from: .\\\\eleven\\\\Peeking_Iterator.cpp\\\\PeekingIterator\\\\next()\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___PeekingIterator */\n/* ConstructorDataNode PeekingIterator(vector<int>const&) */\n/* VectorDataNode nums */\nvector<int>AKA_INSTANCE___PeekingIterator_nums;\nint AKA_INSTANCE___PeekingIterator_nums_element0=-663253149;\nAKA_INSTANCE___PeekingIterator_nums.push_back(AKA_INSTANCE___PeekingIterator_nums_element0);\nAKA_mark(\"Calling: .\\\\eleven\\\\Peeking_Iterator.cpp\\\\PeekingIterator\\\\PeekingIterator(vector<int>const&)|ROOT\\\\Peeking_Iterator.cpp\\\\GLOBAL\\\\AKA_INSTANCE___PeekingIterator\\\\AKA_INSTANCE___PeekingIterator\\\\PeekingIterator(vector<int>const&)\");AKA_fCall++;AKA_INSTANCE___PeekingIterator = new ::PeekingIterator(AKA_INSTANCE___PeekingIterator_nums);\n/* PointerStructureDataNode data */\nAKA_INSTANCE___PeekingIterator->data;\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class PeekingIterator : public Iterator {\r public:\r \tPeekingIterator(const vector<int>& nums) : Iterator(nums) {\r \t    // Initialize any member here.\r \t    // **DO NOT** save a copy of nums and manipulate it directly.\r \t    // You should only use the Iterator interface methods.\r \t    this->length = nums.size();\r \t    this->nums = &nums;\r \t}\r \r     // Returns the next element in the iteration without advancing the iterator.\r \tint peek() {\r         if(currentIndex < length) {\r \t        return (*this->nums)[currentIndex];\r \t    }\r \t    return -1;\r \t}\r \r \t// hasNext() and next() should behave the same as in the Iterator interface.\r \t// Override them if needed.\r \tint next() {\r \t    if(currentIndex < length) {\r \t        currentIndex ++;\r \t        return (*this->nums)[currentIndex-1];\r \t    }\r \t    return -1;\r \t}\r \r \tbool hasNext() const {\r \t    return currentIndex < length;\r \t}\r \t\r private:\r     int currentIndex = 0;\r     int length = 0;\r     const vector<int>* nums = NULL;\r };",
        "c": [
            "PeekingIterator(const vector<int>& nums) : Iterator(nums) {\r\n\t    // Initialize any member here.\r\n\t    // **DO NOT** save a copy of nums and manipulate it directly.\r\n\t    // You should only use the Iterator interface methods.\r\n\t    this->length = nums.size();\r\n\t    this->nums = &nums;\r\n\t}"
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\next()"
    },
    {
        "f": [
            "int currentIndex = 0;",
            "int length = 0;",
            "const vector<int> * nums = NULL;"
        ],
        "fm": "bool hasNext() const {\r \t    return currentIndex < length;\r \t}",
        "datatest": [
            {
                "id": 0,
                "dt": {
                    "type": "com.dse.testdata.object.UnitUnderTestNode",
                    "name": "Peeking_Iterator.cpp",
                    "virtual_name": "NON_VALUE",
                    "sourceNode": ".\\eleven\\Peeking_Iterator.cpp",
                    "children": [
                        {
                            "type": "com.dse.testdata.object.GlobalRootDataNode",
                            "name": "GLOBAL",
                            "virtual_name": "NON_VALUE",
                            "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\hasNext()",
                            "paramExpectedOuputs": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___PeekingIterator",
                                    "virtual_name": "EXPECTED_AKA_GLOBAL_AKA_INSTANCE___PeekingIterator",
                                    "dataType": "::PeekingIterator",
                                    "realType": "::PeekingIterator",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator"
                                }
                            ],
                            "level": "GLOBAL",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.ClassDataNode",
                                    "name": "AKA_INSTANCE___PeekingIterator",
                                    "virtual_name": "AKA_INSTANCE___PeekingIterator",
                                    "dataType": "::PeekingIterator",
                                    "realType": "::PeekingIterator",
                                    "external": true,
                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator",
                                    "children": [
                                        {
                                            "type": "com.dse.testdata.object.SubClassDataNode",
                                            "name": "AKA_INSTANCE___PeekingIterator",
                                            "virtual_name": "AKA_INSTANCE___PeekingIterator",
                                            "dataType": "::PeekingIterator",
                                            "realType": "::PeekingIterator",
                                            "external": false,
                                            "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\AKA_INSTANCE___PeekingIterator",
                                            "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator",
                                            "rawType": "::PeekingIterator",
                                            "selectedConstructor": "PeekingIterator(vector<int>const&)",
                                            "variableType": "::PeekingIterator",
                                            "children": [
                                                {
                                                    "type": "com.dse.testdata.object.ConstructorDataNode",
                                                    "name": "PeekingIterator(vector<int>const&)",
                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator",
                                                    "dataType": "::PeekingIterator",
                                                    "realType": "::PeekingIterator",
                                                    "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)",
                                                    "children": [
                                                        {
                                                            "type": "com.dse.testdata.object.stl.containers.sequence.VectorDataNode",
                                                            "name": "nums",
                                                            "virtual_name": "AKA_INSTANCE___PeekingIterator_nums",
                                                            "dataType": "vector<int>const",
                                                            "realType": "vector<int>const&",
                                                            "external": false,
                                                            "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)\\nums",
                                                            "correspondingType": "STLListBaseType",
                                                            "templateArg": "int",
                                                            "size": 1,
                                                            "children": [
                                                                {
                                                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                                                    "name": "element #0",
                                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator_nums_element0",
                                                                    "dataType": "int",
                                                                    "realType": "int",
                                                                    "external": false,
                                                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\PeekingIterator(vector<int>const&)\\nums\\element #0",
                                                                    "correspondingType": "int",
                                                                    "value": "-1287183890"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "com.dse.testdata.object.PointerStructureDataNode",
                                                    "name": "data",
                                                    "virtual_name": "AKA_INSTANCE___PeekingIterator->data",
                                                    "dataType": "Data*",
                                                    "realType": "Data*",
                                                    "external": false,
                                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\Iterator\\data",
                                                    "correspondingType": ".\\eleven\\Peeking_Iterator.cpp\\Iterator\\Data",
                                                    "level": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "com.dse.testdata.object.SubprogramNode",
                            "name": "hasNext()",
                            "virtual_name": "NON_VALUE",
                            "dataType": "bool",
                            "realType": "bool",
                            "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\hasNext()",
                            "children": [
                                {
                                    "type": "com.dse.testdata.object.RootDataNode",
                                    "name": "STATIC",
                                    "virtual_name": "NON_VALUE",
                                    "functionNode": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\hasNext()",
                                    "level": "STATIC"
                                },
                                {
                                    "type": "com.dse.testdata.object.NormalNumberDataNode",
                                    "name": "RETURN",
                                    "virtual_name": "AKA_EXPECTED_OUTPUT",
                                    "dataType": "bool",
                                    "realType": "bool",
                                    "external": false,
                                    "correspondingVar": ".\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\hasNext()\\RETURN",
                                    "correspondingType": "bool",
                                    "value": "null"
                                }
                            ]
                        }
                    ]
                },
                "td": "void AKA_TEST_PeekingIterator_hasNext_random_0(void) {\n{\nAKA_test_case_name=\"PeekingIterator_hasNext_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___PeekingIterator */\n/* ConstructorDataNode PeekingIterator(vector<int>const&) */\n/* VectorDataNode nums */\nvector<int>AKA_INSTANCE___PeekingIterator_nums;\nint AKA_INSTANCE___PeekingIterator_nums_element0=-1287183890;\nAKA_INSTANCE___PeekingIterator_nums.push_back(AKA_INSTANCE___PeekingIterator_nums_element0);\nAKA_mark(\"Calling: .\\\\eleven\\\\Peeking_Iterator.cpp\\\\PeekingIterator\\\\PeekingIterator(vector<int>const&)|ROOT\\\\Peeking_Iterator.cpp\\\\GLOBAL\\\\AKA_INSTANCE___PeekingIterator\\\\AKA_INSTANCE___PeekingIterator\\\\PeekingIterator(vector<int>const&)\");AKA_fCall++;AKA_INSTANCE___PeekingIterator = new ::PeekingIterator(AKA_INSTANCE___PeekingIterator_nums);\n/* PointerStructureDataNode data */\nAKA_INSTANCE___PeekingIterator->data;\n\n\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test PeekingIterator_hasNext_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___PeekingIterator->hasNext();\nAKA_fCall++;AKA_mark(\"Return from: .\\\\eleven\\\\Peeking_Iterator.cpp\\\\PeekingIterator\\\\hasNext()\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___PeekingIterator */\n/* ConstructorDataNode PeekingIterator(vector<int>const&) */\n/* VectorDataNode nums */\nvector<int>AKA_INSTANCE___PeekingIterator_nums;\nint AKA_INSTANCE___PeekingIterator_nums_element0=-1287183890;\nAKA_INSTANCE___PeekingIterator_nums.push_back(AKA_INSTANCE___PeekingIterator_nums_element0);\nAKA_mark(\"Calling: .\\\\eleven\\\\Peeking_Iterator.cpp\\\\PeekingIterator\\\\PeekingIterator(vector<int>const&)|ROOT\\\\Peeking_Iterator.cpp\\\\GLOBAL\\\\AKA_INSTANCE___PeekingIterator\\\\AKA_INSTANCE___PeekingIterator\\\\PeekingIterator(vector<int>const&)\");AKA_fCall++;AKA_INSTANCE___PeekingIterator = new ::PeekingIterator(AKA_INSTANCE___PeekingIterator_nums);\n/* PointerStructureDataNode data */\nAKA_INSTANCE___PeekingIterator->data;\n\n\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": true,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class PeekingIterator : public Iterator {\r public:\r \tPeekingIterator(const vector<int>& nums) : Iterator(nums) {\r \t    // Initialize any member here.\r \t    // **DO NOT** save a copy of nums and manipulate it directly.\r \t    // You should only use the Iterator interface methods.\r \t    this->length = nums.size();\r \t    this->nums = &nums;\r \t}\r \r     // Returns the next element in the iteration without advancing the iterator.\r \tint peek() {\r         if(currentIndex < length) {\r \t        return (*this->nums)[currentIndex];\r \t    }\r \t    return -1;\r \t}\r \r \t// hasNext() and next() should behave the same as in the Iterator interface.\r \t// Override them if needed.\r \tint next() {\r \t    if(currentIndex < length) {\r \t        currentIndex ++;\r \t        return (*this->nums)[currentIndex-1];\r \t    }\r \t    return -1;\r \t}\r \r \tbool hasNext() const {\r \t    return currentIndex < length;\r \t}\r \t\r private:\r     int currentIndex = 0;\r     int length = 0;\r     const vector<int>* nums = NULL;\r };",
        "c": [
            "PeekingIterator(const vector<int>& nums) : Iterator(nums) {\r\n\t    // Initialize any member here.\r\n\t    // **DO NOT** save a copy of nums and manipulate it directly.\r\n\t    // You should only use the Iterator interface methods.\r\n\t    this->length = nums.size();\r\n\t    this->nums = &nums;\r\n\t}"
        ],
        "path_fm": "D:\\prj-data\\codingtmd_leetcode\\src\\eleven\\Peeking_Iterator.cpp\\PeekingIterator\\hasNext()"
    }
]
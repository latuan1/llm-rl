[
    {
        "f": [],
        "fm": "vector<int> twoSum(vector<int> &nums, int target) {\r         unordered_map<int, int> u;\r         for (int i = 0; i < nums.size(); ++i) {\r             int &&temp = target - nums[i];\r             if (u.find(temp) != u.end())\r                 return {u[temp], i};\r             u.insert(pair<int, int>(nums[i], i));\r         }\r         return {};\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_twoSum_vector_int_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_twoSum_vector_int_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=-1994634811;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1391316585;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_twoSum_vector_int_int_random_2\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->twoSum(nums,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_1\\\\1.cpp\\\\Solution\\\\twoSum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=-1994634811;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1391316585;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_twoSum_vector_int_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_twoSum_vector_int_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=33249740;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1329706104;\nnums.push_back(nums_element0);\nint nums_element1=-90787105;\nnums.push_back(nums_element1);\nint nums_element2=-427617516;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_twoSum_vector_int_int_random_1\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->twoSum(nums,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_1\\\\1.cpp\\\\Solution\\\\twoSum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint target=33249740;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1329706104;\nnums.push_back(nums_element0);\nint nums_element1=-90787105;\nnums.push_back(nums_element1);\nint nums_element2=-427617516;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<int> twoSum(vector<int> &nums, int target) {\r         unordered_map<int, int> u;\r         for (int i = 0; i < nums.size(); ++i) {\r             int &&temp = target - nums[i];\r             if (u.find(temp) != u.end())\r                 return {u[temp], i};\r             u.insert(pair<int, int>(nums[i], i));\r         }\r         return {};\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\py\\test\\chr1sc2y\\folder_1\\1.cpp\\Solution\\twoSum(vector<int>&,int)"
    },
    {
        "f": [],
        "fm": "bool isSameTree(TreeNode* p, TreeNode* q) {\r         if (!p && !q)\r             return true;\r         else if (!p || !q)\r             return false;\r         return p->val == q->val && isSameTree(p->left, q->left) && isSameTree(p->right, q->right);\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_isSameTree_TreeNodemul_TreeNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_isSameTree_TreeNodemul_TreeNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\100.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p;\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_x=127804878;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0 = new ::TreeNode(p0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0).val=-1476373176;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_left0_x=-986132661;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_0 = new ::TreeNode(p0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).val=1459979116;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_left1_x=1001843906;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_1 = new ::TreeNode(p0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).val=191311380;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_left2_x=1024124742;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_2 = new ::TreeNode(p0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_2).val=1162362261;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_2).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_2);\n(*AKA_VECTOR_INIT_p_0).left = AKA_VECTOR_INIT_p_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_right0_x=-274153121;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_0 = new ::TreeNode(p0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).val=525519283;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_right1_x=-415476263;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_1 = new ::TreeNode(p0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_1).val=-2124359990;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_1).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_right2_x=1650096260;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_2 = new ::TreeNode(p0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_2).val=-1524957572;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_2).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_2);\n(*AKA_VECTOR_INIT_p_0).right = AKA_VECTOR_INIT_p_0_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_0);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_x=783433128;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1 = new ::TreeNode(p1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1).val=-273818112;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left0_x=846258247;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_0 = new ::TreeNode(p1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).val=1276782362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left1_x=-1958574134;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_1 = new ::TreeNode(p1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).val=-937726551;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_1);\n(*AKA_VECTOR_INIT_p_1).left = AKA_VECTOR_INIT_p_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_right0_x=1791553054;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_0 = new ::TreeNode(p1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).val=2136923714;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_right1_x=1087249840;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_1 = new ::TreeNode(p1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_1).val=-1774392108;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_1).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_right2_x=614856745;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_2 = new ::TreeNode(p1_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_2).val=2116844732;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_2).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_2);\n(*AKA_VECTOR_INIT_p_1).right = AKA_VECTOR_INIT_p_1_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_1);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_x=1331796334;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2 = new ::TreeNode(p2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2).val=-50176265;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_left0_x=1396750480;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2_DOT_left_0 = new ::TreeNode(p2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2_DOT_left_0).val=1234371418;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_2_DOT_left_0).right;\nAKA_VECTOR_INIT_p_2_DOT_left.push_back(AKA_VECTOR_INIT_p_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_left1_x=-1593662068;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2_DOT_left_1 = new ::TreeNode(p2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2_DOT_left_1).val=1777557288;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_2_DOT_left_1).right;\nAKA_VECTOR_INIT_p_2_DOT_left.push_back(AKA_VECTOR_INIT_p_2_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_left2_x=326653336;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2_DOT_left_2 = new ::TreeNode(p2_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2_DOT_left_2).val=328243937;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_2_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_2_DOT_left_2).right;\nAKA_VECTOR_INIT_p_2_DOT_left.push_back(AKA_VECTOR_INIT_p_2_DOT_left_2);\n(*AKA_VECTOR_INIT_p_2).left = AKA_VECTOR_INIT_p_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_right0_x=-1423753376;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2_DOT_right_0 = new ::TreeNode(p2_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2_DOT_right_0).val=-1432219439;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_2_DOT_right_0).right;\nAKA_VECTOR_INIT_p_2_DOT_right.push_back(AKA_VECTOR_INIT_p_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_right1_x=-1766483312;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2_DOT_right_1 = new ::TreeNode(p2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2_DOT_right_1).val=-473748841;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_2_DOT_right_1).right;\nAKA_VECTOR_INIT_p_2_DOT_right.push_back(AKA_VECTOR_INIT_p_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_right2_x=211393591;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2_DOT_right_2 = new ::TreeNode(p2_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2_DOT_right_2).val=1214605193;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_2_DOT_right_2).right;\nAKA_VECTOR_INIT_p_2_DOT_right.push_back(AKA_VECTOR_INIT_p_2_DOT_right_2);\n(*AKA_VECTOR_INIT_p_2).right = AKA_VECTOR_INIT_p_2_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_2);\n\nTreeNode* p = AKA_VECTOR_INIT_p[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_q;\n\n\n/* SubStructDataNode q */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_x=1836618022;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0 = new ::TreeNode(q0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0).val=425719107;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_q_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_left0_x=-427777711;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_left_0 = new ::TreeNode(q0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_left_0).val=999253784;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_left_0).right;\nAKA_VECTOR_INIT_q_0_DOT_left.push_back(AKA_VECTOR_INIT_q_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_left1_x=897344539;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_left_1 = new ::TreeNode(q0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_left_1).val=253822116;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_left_1).right;\nAKA_VECTOR_INIT_q_0_DOT_left.push_back(AKA_VECTOR_INIT_q_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_left2_x=-670477367;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_left_2 = new ::TreeNode(q0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_left_2).val=259465164;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_left_2).right;\nAKA_VECTOR_INIT_q_0_DOT_left.push_back(AKA_VECTOR_INIT_q_0_DOT_left_2);\n(*AKA_VECTOR_INIT_q_0).left = AKA_VECTOR_INIT_q_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_q_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_right0_x=848729374;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_right_0 = new ::TreeNode(q0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_right_0).val=-361697161;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_right_0).right;\nAKA_VECTOR_INIT_q_0_DOT_right.push_back(AKA_VECTOR_INIT_q_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_right1_x=1982687560;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_right_1 = new ::TreeNode(q0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_right_1).val=1066247503;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_right_1).right;\nAKA_VECTOR_INIT_q_0_DOT_right.push_back(AKA_VECTOR_INIT_q_0_DOT_right_1);\n(*AKA_VECTOR_INIT_q_0).right = AKA_VECTOR_INIT_q_0_DOT_right[0];\n\nAKA_VECTOR_INIT_q.push_back(AKA_VECTOR_INIT_q_0);\n\nTreeNode* q = AKA_VECTOR_INIT_q[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode p */\n/* PointerStructureDataNode q */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isSameTree_TreeNodemul_TreeNodemul_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isSameTree(p,q);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_1\\\\100.cpp\\\\Solution\\\\isSameTree(TreeNode*,TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\100.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p;\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_x=127804878;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0 = new ::TreeNode(p0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0).val=-1476373176;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_left0_x=-986132661;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_0 = new ::TreeNode(p0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).val=1459979116;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_left1_x=1001843906;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_1 = new ::TreeNode(p0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).val=191311380;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_left2_x=1024124742;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_2 = new ::TreeNode(p0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_2).val=1162362261;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_2).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_2);\n(*AKA_VECTOR_INIT_p_0).left = AKA_VECTOR_INIT_p_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_right0_x=-274153121;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_0 = new ::TreeNode(p0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).val=525519283;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_right1_x=-415476263;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_1 = new ::TreeNode(p0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_1).val=-2124359990;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_1).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_right2_x=1650096260;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_2 = new ::TreeNode(p0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_2).val=-1524957572;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_2).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_2);\n(*AKA_VECTOR_INIT_p_0).right = AKA_VECTOR_INIT_p_0_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_0);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_x=783433128;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1 = new ::TreeNode(p1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1).val=-273818112;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left0_x=846258247;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_0 = new ::TreeNode(p1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).val=1276782362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left1_x=-1958574134;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_1 = new ::TreeNode(p1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).val=-937726551;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_1);\n(*AKA_VECTOR_INIT_p_1).left = AKA_VECTOR_INIT_p_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_right0_x=1791553054;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_0 = new ::TreeNode(p1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).val=2136923714;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_right1_x=1087249840;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_1 = new ::TreeNode(p1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_1).val=-1774392108;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_1).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_right2_x=614856745;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_2 = new ::TreeNode(p1_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_2).val=2116844732;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_2).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_2);\n(*AKA_VECTOR_INIT_p_1).right = AKA_VECTOR_INIT_p_1_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_1);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_x=1331796334;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2 = new ::TreeNode(p2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2).val=-50176265;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_left0_x=1396750480;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2_DOT_left_0 = new ::TreeNode(p2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2_DOT_left_0).val=1234371418;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_2_DOT_left_0).right;\nAKA_VECTOR_INIT_p_2_DOT_left.push_back(AKA_VECTOR_INIT_p_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_left1_x=-1593662068;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2_DOT_left_1 = new ::TreeNode(p2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2_DOT_left_1).val=1777557288;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_2_DOT_left_1).right;\nAKA_VECTOR_INIT_p_2_DOT_left.push_back(AKA_VECTOR_INIT_p_2_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_left2_x=326653336;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2_DOT_left_2 = new ::TreeNode(p2_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2_DOT_left_2).val=328243937;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_2_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_2_DOT_left_2).right;\nAKA_VECTOR_INIT_p_2_DOT_left.push_back(AKA_VECTOR_INIT_p_2_DOT_left_2);\n(*AKA_VECTOR_INIT_p_2).left = AKA_VECTOR_INIT_p_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_right0_x=-1423753376;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2_DOT_right_0 = new ::TreeNode(p2_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2_DOT_right_0).val=-1432219439;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_2_DOT_right_0).right;\nAKA_VECTOR_INIT_p_2_DOT_right.push_back(AKA_VECTOR_INIT_p_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_right1_x=-1766483312;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2_DOT_right_1 = new ::TreeNode(p2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2_DOT_right_1).val=-473748841;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_2_DOT_right_1).right;\nAKA_VECTOR_INIT_p_2_DOT_right.push_back(AKA_VECTOR_INIT_p_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p2_right2_x=211393591;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_2\\\\p\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_2_DOT_right_2 = new ::TreeNode(p2_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_2_DOT_right_2).val=1214605193;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_2_DOT_right_2).right;\nAKA_VECTOR_INIT_p_2_DOT_right.push_back(AKA_VECTOR_INIT_p_2_DOT_right_2);\n(*AKA_VECTOR_INIT_p_2).right = AKA_VECTOR_INIT_p_2_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_2);\n\nTreeNode* p = AKA_VECTOR_INIT_p[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_q;\n\n\n/* SubStructDataNode q */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_x=1836618022;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0 = new ::TreeNode(q0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0).val=425719107;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_q_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_left0_x=-427777711;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_left_0 = new ::TreeNode(q0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_left_0).val=999253784;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_left_0).right;\nAKA_VECTOR_INIT_q_0_DOT_left.push_back(AKA_VECTOR_INIT_q_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_left1_x=897344539;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_left_1 = new ::TreeNode(q0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_left_1).val=253822116;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_left_1).right;\nAKA_VECTOR_INIT_q_0_DOT_left.push_back(AKA_VECTOR_INIT_q_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_left2_x=-670477367;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_left_2 = new ::TreeNode(q0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_left_2).val=259465164;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_left_2).right;\nAKA_VECTOR_INIT_q_0_DOT_left.push_back(AKA_VECTOR_INIT_q_0_DOT_left_2);\n(*AKA_VECTOR_INIT_q_0).left = AKA_VECTOR_INIT_q_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_q_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_right0_x=848729374;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_right_0 = new ::TreeNode(q0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_right_0).val=-361697161;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_right_0).right;\nAKA_VECTOR_INIT_q_0_DOT_right.push_back(AKA_VECTOR_INIT_q_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_right1_x=1982687560;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_right_1 = new ::TreeNode(q0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_right_1).val=1066247503;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_right_1).right;\nAKA_VECTOR_INIT_q_0_DOT_right.push_back(AKA_VECTOR_INIT_q_0_DOT_right_1);\n(*AKA_VECTOR_INIT_q_0).right = AKA_VECTOR_INIT_q_0_DOT_right[0];\n\nAKA_VECTOR_INIT_q.push_back(AKA_VECTOR_INIT_q_0);\n\nTreeNode* q = AKA_VECTOR_INIT_q[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode p */\n/* PointerStructureDataNode q */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_isSameTree_TreeNodemul_TreeNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_isSameTree_TreeNodemul_TreeNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\100.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p;\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_x=-1674064504;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0 = new ::TreeNode(p0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0).val=-2061560130;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_left0_x=-1247198279;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_0 = new ::TreeNode(p0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).val=-1289905361;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_left1_x=-1196463856;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_1 = new ::TreeNode(p0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).val=2022389319;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_1);\n(*AKA_VECTOR_INIT_p_0).left = AKA_VECTOR_INIT_p_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0).right;\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_0);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_x=-2020459030;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1 = new ::TreeNode(p1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1).val=257414517;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left0_x=-1019047310;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_0 = new ::TreeNode(p1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).val=-2078712690;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left1_x=-1984785085;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_1 = new ::TreeNode(p1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).val=1114511925;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left2_x=380681020;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_2 = new ::TreeNode(p1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).val=-618698924;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_2);\n(*AKA_VECTOR_INIT_p_1).left = AKA_VECTOR_INIT_p_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_right0_x=159998498;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_0 = new ::TreeNode(p1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).val=-1264782461;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_right1_x=-1579713605;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_1 = new ::TreeNode(p1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_1).val=1652007988;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_1).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_1);\n(*AKA_VECTOR_INIT_p_1).right = AKA_VECTOR_INIT_p_1_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_1);\n\nTreeNode* p = AKA_VECTOR_INIT_p[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_q;\n\n\n/* SubStructDataNode q */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_x=31407732;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0 = new ::TreeNode(q0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0).val=1177589172;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_q_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_left0_x=126370044;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_left_0 = new ::TreeNode(q0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_left_0).val=-271352590;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_left_0).right;\nAKA_VECTOR_INIT_q_0_DOT_left.push_back(AKA_VECTOR_INIT_q_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_left1_x=-1794297220;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_left_1 = new ::TreeNode(q0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_left_1).val=-1084074590;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_left_1).right;\nAKA_VECTOR_INIT_q_0_DOT_left.push_back(AKA_VECTOR_INIT_q_0_DOT_left_1);\n(*AKA_VECTOR_INIT_q_0).left = AKA_VECTOR_INIT_q_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0).right;\n\nAKA_VECTOR_INIT_q.push_back(AKA_VECTOR_INIT_q_0);\n\nTreeNode* q = AKA_VECTOR_INIT_q[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode p */\n/* PointerStructureDataNode q */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isSameTree_TreeNodemul_TreeNodemul_random_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isSameTree(p,q);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_1\\\\100.cpp\\\\Solution\\\\isSameTree(TreeNode*,TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\100.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p;\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_x=-1674064504;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0 = new ::TreeNode(p0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0).val=-2061560130;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_left0_x=-1247198279;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_0 = new ::TreeNode(p0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).val=-1289905361;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_left1_x=-1196463856;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_1 = new ::TreeNode(p0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).val=2022389319;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_1);\n(*AKA_VECTOR_INIT_p_0).left = AKA_VECTOR_INIT_p_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0).right;\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_0);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_x=-2020459030;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1 = new ::TreeNode(p1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1).val=257414517;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left0_x=-1019047310;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_0 = new ::TreeNode(p1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).val=-2078712690;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left1_x=-1984785085;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_1 = new ::TreeNode(p1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).val=1114511925;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left2_x=380681020;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_2 = new ::TreeNode(p1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).val=-618698924;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_2);\n(*AKA_VECTOR_INIT_p_1).left = AKA_VECTOR_INIT_p_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_right0_x=159998498;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_0 = new ::TreeNode(p1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).val=-1264782461;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_right1_x=-1579713605;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_1 = new ::TreeNode(p1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_1).val=1652007988;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_1).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_1);\n(*AKA_VECTOR_INIT_p_1).right = AKA_VECTOR_INIT_p_1_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_1);\n\nTreeNode* p = AKA_VECTOR_INIT_p[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_q;\n\n\n/* SubStructDataNode q */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_x=31407732;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0 = new ::TreeNode(q0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0).val=1177589172;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_q_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_left0_x=126370044;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_left_0 = new ::TreeNode(q0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_left_0).val=-271352590;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_left_0).right;\nAKA_VECTOR_INIT_q_0_DOT_left.push_back(AKA_VECTOR_INIT_q_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint q0_left1_x=-1794297220;\nAKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\q\\\\AKA_VECTOR_INIT_q_0\\\\q\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_q_0_DOT_left_1 = new ::TreeNode(q0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_q_0_DOT_left_1).val=-1084074590;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_q_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0_DOT_left_1).right;\nAKA_VECTOR_INIT_q_0_DOT_left.push_back(AKA_VECTOR_INIT_q_0_DOT_left_1);\n(*AKA_VECTOR_INIT_q_0).left = AKA_VECTOR_INIT_q_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_q_0).right;\n\nAKA_VECTOR_INIT_q.push_back(AKA_VECTOR_INIT_q_0);\n\nTreeNode* q = AKA_VECTOR_INIT_q[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode p */\n/* PointerStructureDataNode q */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isSameTree(TreeNode* p, TreeNode* q) {\r         if (!p && !q)\r             return true;\r         else if (!p || !q)\r             return false;\r         return p->val == q->val && isSameTree(p->left, q->left) && isSameTree(p->right, q->right);\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\py\\test\\chr1sc2y\\folder_1\\100.cpp\\Solution\\isSameTree(TreeNode*,TreeNode*)"
    },
    {
        "f": [],
        "fm": "TreeNode(int x) : val(x), left(NULL), right(NULL) {}",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_TreeNode_int_random_0(void) {\n{\nAKA_test_case_name=\"TreeNode_int_random_0\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=-399087725;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_0\");AKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=-399087725;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_0\");AKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_TreeNode_int_random_1(void) {\n{\nAKA_test_case_name=\"TreeNode_int_random_1\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=-496373512;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_1\");AKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=-496373512;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_1\");AKA_mark(\"Calling: .\\\\folder_1\\\\100.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "D:\\py\\test\\chr1sc2y\\folder_1\\100.cpp\\TreeNode\\TreeNode(int)"
    },
    {
        "f": [],
        "fm": "vector<int> gridIllumination(int N, vector<vector<int>> &lamps, vector<vector<int>> &queries) {\r         unordered_map<int, int> row, col, up_diagonal, down_diagonal;\r         unordered_map<int, unordered_map<int, int>> lamp;\r         vector<int> ret;\r         for (auto &l: lamps) {\r             int r = l[0], c = l[1];\r             ++row[r], ++col[c], ++up_diagonal[r + c], ++down_diagonal[r - c];\r             lamp[r][c] = 1;\r         }\r         for (auto &q:queries) {\r             int r = q[0], c = q[1];\r             if (row[r] || col[c] || up_diagonal[r + c] || down_diagonal[r - c]) {\r                 ret.push_back(1);\r                 for (int i = -1; i <= 1 && r + i >= 0 && r + i < N; ++i) {\r                     for (int j = -1; j <= 1 && j + c >= 0 && j + c < N; ++j) {\r                         if (lamp[r + i][c + j] == 1) {\r                             --row[r + i];\r                             --col[c + j];\r                             --up_diagonal[r + i + c + j];\r                             --down_diagonal[r + i - c - j];\r                             lamp[r + i][c + j] = 0;\r                         }\r                     }\r                 }\r             } else\r                 ret.push_back(0);\r         }\r         return ret;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_gridIllumination_int_vector_vector_int_vector_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_gridIllumination_int_vector_vector_int_vector_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1001.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint N=1;\nvector<vector<int>> lamps;\nvector<vector<int>> queries;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode N */\n/* VectorDataNode lamps */\nvector<int> lamps_element0;\nint lamps_element0_element0=17873137;\nlamps_element0.push_back(lamps_element0_element0);\nint lamps_element0_element1=-1667957752;\nlamps_element0.push_back(lamps_element0_element1);\nlamps.push_back(lamps_element0);\nvector<int> lamps_element1;\nint lamps_element1_element0=454460571;\nlamps_element1.push_back(lamps_element1_element0);\nint lamps_element1_element1=1900687752;\nlamps_element1.push_back(lamps_element1_element1);\nint lamps_element1_element2=-1163698212;\nlamps_element1.push_back(lamps_element1_element2);\nlamps.push_back(lamps_element1);\nvector<int> lamps_element2;\nint lamps_element2_element0=-2134055676;\nlamps_element2.push_back(lamps_element2_element0);\nint lamps_element2_element1=1279619662;\nlamps_element2.push_back(lamps_element2_element1);\nint lamps_element2_element2=1585625727;\nlamps_element2.push_back(lamps_element2_element2);\nlamps.push_back(lamps_element2);\n/* VectorDataNode queries */\nvector<int> queries_element0;\nint queries_element0_element0=1392030188;\nqueries_element0.push_back(queries_element0_element0);\nint queries_element0_element1=-1822923874;\nqueries_element0.push_back(queries_element0_element1);\nqueries.push_back(queries_element0);\nvector<int> queries_element1;\nint queries_element1_element0=-1436205896;\nqueries_element1.push_back(queries_element1_element0);\nint queries_element1_element1=744855429;\nqueries_element1.push_back(queries_element1_element1);\nqueries.push_back(queries_element1);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_gridIllumination_int_vector_vector_int_vector_vector_int_random_4\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->gridIllumination(N,lamps,queries);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_1\\\\1001.cpp\\\\Solution\\\\gridIllumination(int,vector<vector<int>>&,vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_lamps;\n\nvector<vector<int>> EXPECTED_queries;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1001.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint N=1;\nvector<vector<int>> lamps;\nvector<vector<int>> queries;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode N */\n/* VectorDataNode lamps */\nvector<int> lamps_element0;\nint lamps_element0_element0=17873137;\nlamps_element0.push_back(lamps_element0_element0);\nint lamps_element0_element1=-1667957752;\nlamps_element0.push_back(lamps_element0_element1);\nlamps.push_back(lamps_element0);\nvector<int> lamps_element1;\nint lamps_element1_element0=454460571;\nlamps_element1.push_back(lamps_element1_element0);\nint lamps_element1_element1=1900687752;\nlamps_element1.push_back(lamps_element1_element1);\nint lamps_element1_element2=-1163698212;\nlamps_element1.push_back(lamps_element1_element2);\nlamps.push_back(lamps_element1);\nvector<int> lamps_element2;\nint lamps_element2_element0=-2134055676;\nlamps_element2.push_back(lamps_element2_element0);\nint lamps_element2_element1=1279619662;\nlamps_element2.push_back(lamps_element2_element1);\nint lamps_element2_element2=1585625727;\nlamps_element2.push_back(lamps_element2_element2);\nlamps.push_back(lamps_element2);\n/* VectorDataNode queries */\nvector<int> queries_element0;\nint queries_element0_element0=1392030188;\nqueries_element0.push_back(queries_element0_element0);\nint queries_element0_element1=-1822923874;\nqueries_element0.push_back(queries_element0_element1);\nqueries.push_back(queries_element0);\nvector<int> queries_element1;\nint queries_element1_element0=-1436205896;\nqueries_element1.push_back(queries_element1_element0);\nint queries_element1_element1=744855429;\nqueries_element1.push_back(queries_element1_element1);\nqueries.push_back(queries_element1);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_gridIllumination_int_vector_vector_int_vector_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_gridIllumination_int_vector_vector_int_vector_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1001.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint N=9;\nvector<vector<int>> lamps;\nvector<vector<int>> queries;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode N */\n/* VectorDataNode lamps */\nvector<int> lamps_element0;\nint lamps_element0_element0=-1394497155;\nlamps_element0.push_back(lamps_element0_element0);\nlamps.push_back(lamps_element0);\nvector<int> lamps_element1;\nint lamps_element1_element0=1776317217;\nlamps_element1.push_back(lamps_element1_element0);\nint lamps_element1_element1=28581663;\nlamps_element1.push_back(lamps_element1_element1);\nint lamps_element1_element2=-2075751714;\nlamps_element1.push_back(lamps_element1_element2);\nlamps.push_back(lamps_element1);\n/* VectorDataNode queries */\nvector<int> queries_element0;\nint queries_element0_element0=-838458670;\nqueries_element0.push_back(queries_element0_element0);\nqueries.push_back(queries_element0);\nvector<int> queries_element1;\nint queries_element1_element0=523550015;\nqueries_element1.push_back(queries_element1_element0);\nqueries.push_back(queries_element1);\nvector<int> queries_element2;\nint queries_element2_element0=1092418492;\nqueries_element2.push_back(queries_element2_element0);\nint queries_element2_element1=-5923143;\nqueries_element2.push_back(queries_element2_element1);\nint queries_element2_element2=-1680248212;\nqueries_element2.push_back(queries_element2_element2);\nqueries.push_back(queries_element2);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_gridIllumination_int_vector_vector_int_vector_vector_int_random_1\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->gridIllumination(N,lamps,queries);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_1\\\\1001.cpp\\\\Solution\\\\gridIllumination(int,vector<vector<int>>&,vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_lamps;\n\nvector<vector<int>> EXPECTED_queries;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1001.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint N=9;\nvector<vector<int>> lamps;\nvector<vector<int>> queries;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode N */\n/* VectorDataNode lamps */\nvector<int> lamps_element0;\nint lamps_element0_element0=-1394497155;\nlamps_element0.push_back(lamps_element0_element0);\nlamps.push_back(lamps_element0);\nvector<int> lamps_element1;\nint lamps_element1_element0=1776317217;\nlamps_element1.push_back(lamps_element1_element0);\nint lamps_element1_element1=28581663;\nlamps_element1.push_back(lamps_element1_element1);\nint lamps_element1_element2=-2075751714;\nlamps_element1.push_back(lamps_element1_element2);\nlamps.push_back(lamps_element1);\n/* VectorDataNode queries */\nvector<int> queries_element0;\nint queries_element0_element0=-838458670;\nqueries_element0.push_back(queries_element0_element0);\nqueries.push_back(queries_element0);\nvector<int> queries_element1;\nint queries_element1_element0=523550015;\nqueries_element1.push_back(queries_element1_element0);\nqueries.push_back(queries_element1);\nvector<int> queries_element2;\nint queries_element2_element0=1092418492;\nqueries_element2.push_back(queries_element2_element0);\nint queries_element2_element1=-5923143;\nqueries_element2.push_back(queries_element2_element1);\nint queries_element2_element2=-1680248212;\nqueries_element2.push_back(queries_element2_element2);\nqueries.push_back(queries_element2);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<int> gridIllumination(int N, vector<vector<int>> &lamps, vector<vector<int>> &queries) {\r         unordered_map<int, int> row, col, up_diagonal, down_diagonal;\r         unordered_map<int, unordered_map<int, int>> lamp;\r         vector<int> ret;\r         for (auto &l: lamps) {\r             int r = l[0], c = l[1];\r             ++row[r], ++col[c], ++up_diagonal[r + c], ++down_diagonal[r - c];\r             lamp[r][c] = 1;\r         }\r         for (auto &q:queries) {\r             int r = q[0], c = q[1];\r             if (row[r] || col[c] || up_diagonal[r + c] || down_diagonal[r - c]) {\r                 ret.push_back(1);\r                 for (int i = -1; i <= 1 && r + i >= 0 && r + i < N; ++i) {\r                     for (int j = -1; j <= 1 && j + c >= 0 && j + c < N; ++j) {\r                         if (lamp[r + i][c + j] == 1) {\r                             --row[r + i];\r                             --col[c + j];\r                             --up_diagonal[r + i + c + j];\r                             --down_diagonal[r + i - c - j];\r                             lamp[r + i][c + j] = 0;\r                         }\r                     }\r                 }\r             } else\r                 ret.push_back(0);\r         }\r         return ret;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\py\\test\\chr1sc2y\\folder_1\\1001.cpp\\Solution\\gridIllumination(int,vector<vector<int>>&,vector<vector<int>>&)"
    },
    {
        "f": [],
        "fm": "vector<string> commonChars(vector<string> &A) {\r         int n = A.size();\r         if (n == 0)\r             return {};\r         vector<vector<int>> chars(n, vector<int>(26, 0));\r         for (int i = 0; i < n; ++i) {\r             string a = A[i];\r             for (char c:a)\r                 ++chars[i][c - 'a'];\r         }\r         vector<int> res = chars[0];\r         for (int i = 1; i < n; ++i) {\r             for (int j = 0; j < chars[i].size(); ++j)\r                 res[j] = min(res[j], chars[i][j]);\r         }\r         vector<string> ret;\r         for (int i = 0; i < res.size(); ++i) {\r             for (int j = 0; j < res[i]; ++j)\r                 ret.emplace_back(string(1, i + 'a'));\r         }\r         return ret;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_commonChars_vector_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_commonChars_vector_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1002.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> A;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode A */\nchar* akaRandomName894397 = new char[2];akaRandomName894397[0] = 98;akaRandomName894397[1] = '\\0';string A_element0=akaRandomName894397;\nA.push_back(A_element0);\nchar* akaRandomName351184 = new char[2];akaRandomName351184[0] = 118;akaRandomName351184[1] = '\\0';string A_element1=akaRandomName351184;\nA.push_back(A_element1);\nchar* akaRandomName439573 = new char[2];akaRandomName439573[0] = 105;akaRandomName439573[1] = '\\0';string A_element2=akaRandomName439573;\nA.push_back(A_element2);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_commonChars_vector_string_random_0\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->commonChars(A);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_1\\\\1002.cpp\\\\Solution\\\\commonChars(vector<string>&)\");\n\n\nvector<string> EXPECTED_A;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1002.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> A;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode A */\nchar* akaRandomName888972 = new char[2];akaRandomName888972[0] = 98;akaRandomName888972[1] = '\\0';string A_element0=akaRandomName888972;\nA.push_back(A_element0);\nchar* akaRandomName799307 = new char[2];akaRandomName799307[0] = 118;akaRandomName799307[1] = '\\0';string A_element1=akaRandomName799307;\nA.push_back(A_element1);\nchar* akaRandomName804012 = new char[2];akaRandomName804012[0] = 105;akaRandomName804012[1] = '\\0';string A_element2=akaRandomName804012;\nA.push_back(A_element2);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_commonChars_vector_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_commonChars_vector_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1002.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> A;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode A */\nchar* akaRandomName941594 = new char[2];akaRandomName941594[0] = 88;akaRandomName941594[1] = '\\0';string A_element0=akaRandomName941594;\nA.push_back(A_element0);\nchar* akaRandomName595247 = new char[2];akaRandomName595247[0] = -73;akaRandomName595247[1] = '\\0';string A_element1=akaRandomName595247;\nA.push_back(A_element1);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_commonChars_vector_string_random_1\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->commonChars(A);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_1\\\\1002.cpp\\\\Solution\\\\commonChars(vector<string>&)\");\n\n\nvector<string> EXPECTED_A;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1002.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> A;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode A */\nchar* akaRandomName734692 = new char[2];akaRandomName734692[0] = 88;akaRandomName734692[1] = '\\0';string A_element0=akaRandomName734692;\nA.push_back(A_element0);\nchar* akaRandomName853502 = new char[2];akaRandomName853502[0] = -73;akaRandomName853502[1] = '\\0';string A_element1=akaRandomName853502;\nA.push_back(A_element1);\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<string> commonChars(vector<string> &A) {\r         int n = A.size();\r         if (n == 0)\r             return {};\r         vector<vector<int>> chars(n, vector<int>(26, 0));\r         for (int i = 0; i < n; ++i) {\r             string a = A[i];\r             for (char c:a)\r                 ++chars[i][c - 'a'];\r         }\r         vector<int> res = chars[0];\r         for (int i = 1; i < n; ++i) {\r             for (int j = 0; j < chars[i].size(); ++j)\r                 res[j] = min(res[j], chars[i][j]);\r         }\r         vector<string> ret;\r         for (int i = 0; i < res.size(); ++i) {\r             for (int j = 0; j < res[i]; ++j)\r                 ret.emplace_back(string(1, i + 'a'));\r         }\r         return ret;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\py\\test\\chr1sc2y\\folder_1\\1002.cpp\\Solution\\commonChars(vector<string>&)"
    },
    {
        "f": [],
        "fm": "bool isValid(string &S) {\r         auto iter = S.find(\"abc\");\r         while (iter != string::npos) {\r             S.erase(iter, 3);\r             iter = S.find(\"abc\");\r         }\r         return S.empty();\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_isValid_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1003.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName479924 = new char[2];akaRandomName479924[0] = -38;akaRandomName479924[1] = '\\0';string S=akaRandomName479924;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode S */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(S);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_1\\\\1003.cpp\\\\Solution\\\\isValid(string&)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1003.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName546825 = new char[2];akaRandomName546825[0] = -38;akaRandomName546825[1] = '\\0';string S=akaRandomName546825;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode S */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_isValid_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1003.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName275685 = new char[2];akaRandomName275685[0] = 107;akaRandomName275685[1] = '\\0';string S=akaRandomName275685;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode S */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(S);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_1\\\\1003.cpp\\\\Solution\\\\isValid(string&)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1003.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName298096 = new char[2];akaRandomName298096[0] = 107;akaRandomName298096[1] = '\\0';string S=akaRandomName298096;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode S */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isValid(string &S) {\r         auto iter = S.find(\"abc\");\r         while (iter != string::npos) {\r             S.erase(iter, 3);\r             iter = S.find(\"abc\");\r         }\r         return S.empty();\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "D:\\py\\test\\chr1sc2y\\folder_1\\1003.cpp\\Solution\\isValid(string&)"
    }
]
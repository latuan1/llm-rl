[
    {
        "f": [],
        "fm": "vector<int> numMovesStones(int a, int b, int c) {\r         vector<int> res{0, 0};\r         if (a > b) swap(a, b);\r         if (a > c) swap(a, c);\r         if (b > c) swap(b, c);\r         if (a == b - 1) {\r             res[0] = (b == c - 1 ? 0 : 1);\r             res[1] = c - b - 1;\r         } else if (c == b + 1) {\r             res[0] = 1;\r             res[1] = b - a - 1;\r         } else {\r             res[0] = (b == a + 2 || c == b + 2 ? 1 : 2);\r             res[1] = c - b - 1 + b - a - 1;\r         }\r         return res;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_numMovesStones_int_int_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_numMovesStones_int_int_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1033.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint a=1985617159;\n\n\nint b=1931874224;\n\n\nint c=682246108;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode b */\n/* NormalNumberDataNode c */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_numMovesStones_int_int_int_random_1\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->numMovesStones(a,b,c);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_8\\\\1033.cpp\\\\Solution\\\\numMovesStones(int,int,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1033.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint a=1985617159;\n\n\nint b=1931874224;\n\n\nint c=682246108;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode b */\n/* NormalNumberDataNode c */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_numMovesStones_int_int_int_random_5(void) {\n{\nAKA_test_case_name=\"Solution_numMovesStones_int_int_int_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1033.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint a=-279417599;\n\n\nint b=57300389;\n\n\nint c=1874122801;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode b */\n/* NormalNumberDataNode c */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_numMovesStones_int_int_int_random_5\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->numMovesStones(a,b,c);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_8\\\\1033.cpp\\\\Solution\\\\numMovesStones(int,int,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1033.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint a=-279417599;\n\n\nint b=57300389;\n\n\nint c=1874122801;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode b */\n/* NormalNumberDataNode c */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     vector<int> numMovesStones(int a, int b, int c) {\r         vector<int> res{0, 0};\r         if (a > b) swap(a, b);\r         if (a > c) swap(a, c);\r         if (b > c) swap(b, c);\r         if (a == b - 1) {\r             res[0] = (b == c - 1 ? 0 : 1);\r             res[1] = c - b - 1;\r         } else if (c == b + 1) {\r             res[0] = 1;\r             res[1] = b - a - 1;\r         } else {\r             res[0] = (b == a + 2 || c == b + 2 ? 1 : 2);\r             res[1] = c - b - 1 + b - a - 1;\r         }\r         return res;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "C:\\Users\\min\\OneDrive - vnu.edu.vn\\test\\folder_8\\1033.cpp\\Solution\\numMovesStones(int,int,int)"
    },
    {
        "f": [
            "int dir[4][2] = {{0,  1},\r\n                     {1,  0},\r\n                     {0,  -1},\r\n                     {-1, 0}};",
            "int m;",
            "int n;"
        ],
        "fm": "vector<vector<int>> colorBorder(vector<vector<int>> &grid, int r0, int c0, int color) {\r         m = grid.size(), n = grid[0].size();\r         vector<vector<int>> res = grid;\r         vector<vector<bool>> visited(m, vector<bool>(n, false));\r         visited[r0][c0] = true;\r         DFS(grid, res, visited, r0, c0, color);\r         return res;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_colorBorder_vector_vector_int_int_int_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_colorBorder_vector_vector_int_int_int_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1034.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* MultipleDimensionNumberDataNode dir */\n/* NormalNumberDataNode dir[0][0] */\n/* dir[0][0] : null value -> no code */\n/* NormalNumberDataNode dir[0][1] */\n/* dir[0][1] : null value -> no code */\n/* NormalNumberDataNode dir[1][0] */\n/* dir[1][0] : null value -> no code */\n/* NormalNumberDataNode dir[1][1] */\n/* dir[1][1] : null value -> no code */\n/* NormalNumberDataNode dir[2][0] */\n/* dir[2][0] : null value -> no code */\n/* NormalNumberDataNode dir[2][1] */\n/* dir[2][1] : null value -> no code */\n/* NormalNumberDataNode dir[3][0] */\n/* dir[3][0] : null value -> no code */\n/* NormalNumberDataNode dir[3][1] */\n/* dir[3][1] : null value -> no code */\n/* NormalNumberDataNode m */\n/* m : null value -> no code */\n/* NormalNumberDataNode n */\n/* n : null value -> no code */\n\n\nvector<vector<int>> grid;\n\n\nint r0=-2064873354;\n\n\nint c0=-1633017871;\n\n\nint color=-1956062537;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\nvector<int> grid_element0;\nint grid_element0_element0=297202221;\ngrid_element0.push_back(grid_element0_element0);\nint grid_element0_element1=-1465422130;\ngrid_element0.push_back(grid_element0_element1);\nint grid_element0_element2=717486216;\ngrid_element0.push_back(grid_element0_element2);\ngrid.push_back(grid_element0);\n/* NormalNumberDataNode r0 */\n/* NormalNumberDataNode c0 */\n/* NormalNumberDataNode color */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_colorBorder_vector_vector_int_int_int_int_random_4\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->colorBorder(grid,r0,c0,color);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_8\\\\1034.cpp\\\\Solution\\\\colorBorder(vector<vector<int>>&,int,int,int)\");\n\n\nvector<vector<int>> EXPECTED_grid;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1034.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* MultipleDimensionNumberDataNode dir */\n/* NormalNumberDataNode dir[0][0] */\n/* dir[0][0] : null value -> no code */\n/* NormalNumberDataNode dir[0][1] */\n/* dir[0][1] : null value -> no code */\n/* NormalNumberDataNode dir[1][0] */\n/* dir[1][0] : null value -> no code */\n/* NormalNumberDataNode dir[1][1] */\n/* dir[1][1] : null value -> no code */\n/* NormalNumberDataNode dir[2][0] */\n/* dir[2][0] : null value -> no code */\n/* NormalNumberDataNode dir[2][1] */\n/* dir[2][1] : null value -> no code */\n/* NormalNumberDataNode dir[3][0] */\n/* dir[3][0] : null value -> no code */\n/* NormalNumberDataNode dir[3][1] */\n/* dir[3][1] : null value -> no code */\n/* NormalNumberDataNode m */\n/* m : null value -> no code */\n/* NormalNumberDataNode n */\n/* n : null value -> no code */\n\n\nvector<vector<int>> grid;\n\n\nint r0=-2064873354;\n\n\nint c0=-1633017871;\n\n\nint color=-1956062537;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\nvector<int> grid_element0;\nint grid_element0_element0=297202221;\ngrid_element0.push_back(grid_element0_element0);\nint grid_element0_element1=-1465422130;\ngrid_element0.push_back(grid_element0_element1);\nint grid_element0_element2=717486216;\ngrid_element0.push_back(grid_element0_element2);\ngrid.push_back(grid_element0);\n/* NormalNumberDataNode r0 */\n/* NormalNumberDataNode c0 */\n/* NormalNumberDataNode color */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r     int dir[4][2] = {{0,  1},\r                      {1,  0},\r                      {0,  -1},\r                      {-1, 0}};\r     int m, n;\r public:\r     vector<vector<int>> colorBorder(vector<vector<int>> &grid, int r0, int c0, int color) {\r         m = grid.size(), n = grid[0].size();\r         vector<vector<int>> res = grid;\r         vector<vector<bool>> visited(m, vector<bool>(n, false));\r         visited[r0][c0] = true;\r         DFS(grid, res, visited, r0, c0, color);\r         return res;\r     }\r \r     bool DFS(vector<vector<int>> &grid, vector<vector<int>> &res, vector<vector<bool>> &visited, int r0, int c0,\r              const int &color) {\r         int count = 0;\r         for (int i = 0; i < 4; ++i) {\r             int x = r0 + dir[i][0];\r             int y = c0 + dir[i][1];\r             if (x >= 0 && x < m && y >= 0 && y < n && grid[x][y] == grid[r0][c0]) {\r                 ++count;\r                 if (!visited[x][y]) {\r                     visited[x][y] = true;\r                     DFS(grid, res, visited, x, y, color);\r                 }\r             }\r         }\r         if (count < 4)\r             res[r0][c0] = color;\r         return true;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "C:\\Users\\min\\OneDrive - vnu.edu.vn\\test\\folder_8\\1034.cpp\\Solution\\colorBorder(vector<vector<int>>&,int,int,int)"
    },
    {
        "f": [
            "int dir[4][2] = {{0,  1},\r\n                     {1,  0},\r\n                     {0,  -1},\r\n                     {-1, 0}};",
            "int m;",
            "int n;"
        ],
        "fm": "bool DFS(vector<vector<int>> &grid, vector<vector<int>> &res, vector<vector<bool>> &visited, int r0, int c0,\r              const int &color) {\r         int count = 0;\r         for (int i = 0; i < 4; ++i) {\r             int x = r0 + dir[i][0];\r             int y = c0 + dir[i][1];\r             if (x >= 0 && x < m && y >= 0 && y < n && grid[x][y] == grid[r0][c0]) {\r                 ++count;\r                 if (!visited[x][y]) {\r                     visited[x][y] = true;\r                     DFS(grid, res, visited, x, y, color);\r                 }\r             }\r         }\r         if (count < 4)\r             res[r0][c0] = color;\r         return true;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_DFS_vector_vector_int_vector_vector_int_vector_vector_bool_int_int_int_const_random_4(void) {\n{\nAKA_test_case_name=\"Solution_DFS_vector_vector_int_vector_vector_int_vector_vector_bool_int_int_int_const_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1034.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* MultipleDimensionNumberDataNode dir */\n/* NormalNumberDataNode dir[0][0] */\n/* dir[0][0] : null value -> no code */\n/* NormalNumberDataNode dir[0][1] */\n/* dir[0][1] : null value -> no code */\n/* NormalNumberDataNode dir[1][0] */\n/* dir[1][0] : null value -> no code */\n/* NormalNumberDataNode dir[1][1] */\n/* dir[1][1] : null value -> no code */\n/* NormalNumberDataNode dir[2][0] */\n/* dir[2][0] : null value -> no code */\n/* NormalNumberDataNode dir[2][1] */\n/* dir[2][1] : null value -> no code */\n/* NormalNumberDataNode dir[3][0] */\n/* dir[3][0] : null value -> no code */\n/* NormalNumberDataNode dir[3][1] */\n/* dir[3][1] : null value -> no code */\n/* NormalNumberDataNode m */\n/* m : null value -> no code */\n/* NormalNumberDataNode n */\n/* n : null value -> no code */\n\n\nvector<vector<int>> grid;\nvector<vector<int>> res;\nvector<vector<bool>> visited;\n\n\nint r0=-557541964;\n\n\nint c0=1857518253;\n\n\nint color=-908131829;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\nvector<int> grid_element0;\nint grid_element0_element0=-1009131617;\ngrid_element0.push_back(grid_element0_element0);\ngrid.push_back(grid_element0);\n/* VectorDataNode res */\nvector<int> res_element0;\nint res_element0_element0=15050741;\nres_element0.push_back(res_element0_element0);\nint res_element0_element1=-226796093;\nres_element0.push_back(res_element0_element1);\nres.push_back(res_element0);\n/* VectorDataNode visited */\nvector<bool> visited_element0;\nbool visited_element0_element0=true;\nvisited_element0.push_back(visited_element0_element0);\nbool visited_element0_element1=true;\nvisited_element0.push_back(visited_element0_element1);\nvisited.push_back(visited_element0);\nvector<bool> visited_element1;\nbool visited_element1_element0=true;\nvisited_element1.push_back(visited_element1_element0);\nbool visited_element1_element1=true;\nvisited_element1.push_back(visited_element1_element1);\nvisited.push_back(visited_element1);\nvector<bool> visited_element2;\nbool visited_element2_element0=true;\nvisited_element2.push_back(visited_element2_element0);\nbool visited_element2_element1=true;\nvisited_element2.push_back(visited_element2_element1);\nvisited.push_back(visited_element2);\n/* NormalNumberDataNode r0 */\n/* NormalNumberDataNode c0 */\n/* NormalNumberDataNode color */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_DFS_vector_vector_int_vector_vector_int_vector_vector_bool_int_int_int_const_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->DFS(grid,res,visited,r0,c0,color);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_8\\\\1034.cpp\\\\Solution\\\\DFS(vector<vector<int>>&,vector<vector<int>>&,vector<vector<bool>>&,int,int,int const&)\");\n\n\nvector<vector<int>> EXPECTED_grid;\n\nvector<vector<int>> EXPECTED_res;\n\nvector<vector<bool>> EXPECTED_visited;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1034.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* MultipleDimensionNumberDataNode dir */\n/* NormalNumberDataNode dir[0][0] */\n/* dir[0][0] : null value -> no code */\n/* NormalNumberDataNode dir[0][1] */\n/* dir[0][1] : null value -> no code */\n/* NormalNumberDataNode dir[1][0] */\n/* dir[1][0] : null value -> no code */\n/* NormalNumberDataNode dir[1][1] */\n/* dir[1][1] : null value -> no code */\n/* NormalNumberDataNode dir[2][0] */\n/* dir[2][0] : null value -> no code */\n/* NormalNumberDataNode dir[2][1] */\n/* dir[2][1] : null value -> no code */\n/* NormalNumberDataNode dir[3][0] */\n/* dir[3][0] : null value -> no code */\n/* NormalNumberDataNode dir[3][1] */\n/* dir[3][1] : null value -> no code */\n/* NormalNumberDataNode m */\n/* m : null value -> no code */\n/* NormalNumberDataNode n */\n/* n : null value -> no code */\n\n\nvector<vector<int>> grid;\nvector<vector<int>> res;\nvector<vector<bool>> visited;\n\n\nint r0=-557541964;\n\n\nint c0=1857518253;\n\n\nint color=-908131829;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\nvector<int> grid_element0;\nint grid_element0_element0=-1009131617;\ngrid_element0.push_back(grid_element0_element0);\ngrid.push_back(grid_element0);\n/* VectorDataNode res */\nvector<int> res_element0;\nint res_element0_element0=15050741;\nres_element0.push_back(res_element0_element0);\nint res_element0_element1=-226796093;\nres_element0.push_back(res_element0_element1);\nres.push_back(res_element0);\n/* VectorDataNode visited */\nvector<bool> visited_element0;\nbool visited_element0_element0=true;\nvisited_element0.push_back(visited_element0_element0);\nbool visited_element0_element1=true;\nvisited_element0.push_back(visited_element0_element1);\nvisited.push_back(visited_element0);\nvector<bool> visited_element1;\nbool visited_element1_element0=true;\nvisited_element1.push_back(visited_element1_element0);\nbool visited_element1_element1=true;\nvisited_element1.push_back(visited_element1_element1);\nvisited.push_back(visited_element1);\nvector<bool> visited_element2;\nbool visited_element2_element0=true;\nvisited_element2.push_back(visited_element2_element0);\nbool visited_element2_element1=true;\nvisited_element2.push_back(visited_element2_element1);\nvisited.push_back(visited_element2);\n/* NormalNumberDataNode r0 */\n/* NormalNumberDataNode c0 */\n/* NormalNumberDataNode color */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_DFS_vector_vector_int_vector_vector_int_vector_vector_bool_int_int_int_const_random_0(void) {\n{\nAKA_test_case_name=\"Solution_DFS_vector_vector_int_vector_vector_int_vector_vector_bool_int_int_int_const_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1034.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* MultipleDimensionNumberDataNode dir */\n/* NormalNumberDataNode dir[0][0] */\n/* dir[0][0] : null value -> no code */\n/* NormalNumberDataNode dir[0][1] */\n/* dir[0][1] : null value -> no code */\n/* NormalNumberDataNode dir[1][0] */\n/* dir[1][0] : null value -> no code */\n/* NormalNumberDataNode dir[1][1] */\n/* dir[1][1] : null value -> no code */\n/* NormalNumberDataNode dir[2][0] */\n/* dir[2][0] : null value -> no code */\n/* NormalNumberDataNode dir[2][1] */\n/* dir[2][1] : null value -> no code */\n/* NormalNumberDataNode dir[3][0] */\n/* dir[3][0] : null value -> no code */\n/* NormalNumberDataNode dir[3][1] */\n/* dir[3][1] : null value -> no code */\n/* NormalNumberDataNode m */\n/* m : null value -> no code */\n/* NormalNumberDataNode n */\n/* n : null value -> no code */\n\n\nvector<vector<int>> grid;\nvector<vector<int>> res;\nvector<vector<bool>> visited;\n\n\nint r0=1347922847;\n\n\nint c0=1710142837;\n\n\nint color=-1135267165;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\nvector<int> grid_element0;\nint grid_element0_element0=-1835238432;\ngrid_element0.push_back(grid_element0_element0);\nint grid_element0_element1=1579693125;\ngrid_element0.push_back(grid_element0_element1);\ngrid.push_back(grid_element0);\nvector<int> grid_element1;\nint grid_element1_element0=-1927259744;\ngrid_element1.push_back(grid_element1_element0);\ngrid.push_back(grid_element1);\nvector<int> grid_element2;\nint grid_element2_element0=-1622465921;\ngrid_element2.push_back(grid_element2_element0);\ngrid.push_back(grid_element2);\n/* VectorDataNode res */\nvector<int> res_element0;\nint res_element0_element0=158096827;\nres_element0.push_back(res_element0_element0);\nint res_element0_element1=1535084803;\nres_element0.push_back(res_element0_element1);\nint res_element0_element2=1528796254;\nres_element0.push_back(res_element0_element2);\nres.push_back(res_element0);\n/* VectorDataNode visited */\nvector<bool> visited_element0;\nbool visited_element0_element0=false;\nvisited_element0.push_back(visited_element0_element0);\nbool visited_element0_element1=true;\nvisited_element0.push_back(visited_element0_element1);\nvisited.push_back(visited_element0);\nvector<bool> visited_element1;\nbool visited_element1_element0=true;\nvisited_element1.push_back(visited_element1_element0);\nbool visited_element1_element1=true;\nvisited_element1.push_back(visited_element1_element1);\nvisited.push_back(visited_element1);\n/* NormalNumberDataNode r0 */\n/* NormalNumberDataNode c0 */\n/* NormalNumberDataNode color */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_DFS_vector_vector_int_vector_vector_int_vector_vector_bool_int_int_int_const_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->DFS(grid,res,visited,r0,c0,color);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_8\\\\1034.cpp\\\\Solution\\\\DFS(vector<vector<int>>&,vector<vector<int>>&,vector<vector<bool>>&,int,int,int const&)\");\n\n\nvector<vector<int>> EXPECTED_grid;\n\nvector<vector<int>> EXPECTED_res;\n\nvector<vector<bool>> EXPECTED_visited;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1034.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* MultipleDimensionNumberDataNode dir */\n/* NormalNumberDataNode dir[0][0] */\n/* dir[0][0] : null value -> no code */\n/* NormalNumberDataNode dir[0][1] */\n/* dir[0][1] : null value -> no code */\n/* NormalNumberDataNode dir[1][0] */\n/* dir[1][0] : null value -> no code */\n/* NormalNumberDataNode dir[1][1] */\n/* dir[1][1] : null value -> no code */\n/* NormalNumberDataNode dir[2][0] */\n/* dir[2][0] : null value -> no code */\n/* NormalNumberDataNode dir[2][1] */\n/* dir[2][1] : null value -> no code */\n/* NormalNumberDataNode dir[3][0] */\n/* dir[3][0] : null value -> no code */\n/* NormalNumberDataNode dir[3][1] */\n/* dir[3][1] : null value -> no code */\n/* NormalNumberDataNode m */\n/* m : null value -> no code */\n/* NormalNumberDataNode n */\n/* n : null value -> no code */\n\n\nvector<vector<int>> grid;\nvector<vector<int>> res;\nvector<vector<bool>> visited;\n\n\nint r0=1347922847;\n\n\nint c0=1710142837;\n\n\nint color=-1135267165;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode grid */\nvector<int> grid_element0;\nint grid_element0_element0=-1835238432;\ngrid_element0.push_back(grid_element0_element0);\nint grid_element0_element1=1579693125;\ngrid_element0.push_back(grid_element0_element1);\ngrid.push_back(grid_element0);\nvector<int> grid_element1;\nint grid_element1_element0=-1927259744;\ngrid_element1.push_back(grid_element1_element0);\ngrid.push_back(grid_element1);\nvector<int> grid_element2;\nint grid_element2_element0=-1622465921;\ngrid_element2.push_back(grid_element2_element0);\ngrid.push_back(grid_element2);\n/* VectorDataNode res */\nvector<int> res_element0;\nint res_element0_element0=158096827;\nres_element0.push_back(res_element0_element0);\nint res_element0_element1=1535084803;\nres_element0.push_back(res_element0_element1);\nint res_element0_element2=1528796254;\nres_element0.push_back(res_element0_element2);\nres.push_back(res_element0);\n/* VectorDataNode visited */\nvector<bool> visited_element0;\nbool visited_element0_element0=false;\nvisited_element0.push_back(visited_element0_element0);\nbool visited_element0_element1=true;\nvisited_element0.push_back(visited_element0_element1);\nvisited.push_back(visited_element0);\nvector<bool> visited_element1;\nbool visited_element1_element0=true;\nvisited_element1.push_back(visited_element1_element0);\nbool visited_element1_element1=true;\nvisited_element1.push_back(visited_element1_element1);\nvisited.push_back(visited_element1);\n/* NormalNumberDataNode r0 */\n/* NormalNumberDataNode c0 */\n/* NormalNumberDataNode color */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r     int dir[4][2] = {{0,  1},\r                      {1,  0},\r                      {0,  -1},\r                      {-1, 0}};\r     int m, n;\r public:\r     vector<vector<int>> colorBorder(vector<vector<int>> &grid, int r0, int c0, int color) {\r         m = grid.size(), n = grid[0].size();\r         vector<vector<int>> res = grid;\r         vector<vector<bool>> visited(m, vector<bool>(n, false));\r         visited[r0][c0] = true;\r         DFS(grid, res, visited, r0, c0, color);\r         return res;\r     }\r \r     bool DFS(vector<vector<int>> &grid, vector<vector<int>> &res, vector<vector<bool>> &visited, int r0, int c0,\r              const int &color) {\r         int count = 0;\r         for (int i = 0; i < 4; ++i) {\r             int x = r0 + dir[i][0];\r             int y = c0 + dir[i][1];\r             if (x >= 0 && x < m && y >= 0 && y < n && grid[x][y] == grid[r0][c0]) {\r                 ++count;\r                 if (!visited[x][y]) {\r                     visited[x][y] = true;\r                     DFS(grid, res, visited, x, y, color);\r                 }\r             }\r         }\r         if (count < 4)\r             res[r0][c0] = color;\r         return true;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "C:\\Users\\min\\OneDrive - vnu.edu.vn\\test\\folder_8\\1034.cpp\\Solution\\DFS(vector<vector<int>>&,vector<vector<int>>&,vector<vector<bool>>&,int,int,int const&)"
    },
    {
        "f": [],
        "fm": "int maxUncrossedLines(vector<int> &A, vector<int> &B) {\r         int m = A.size(), n = B.size();\r         vector<vector<int>> dp(m + 1, vector<int>(n + 1, 0));\r         for (int i = 1; i <= m; ++i) {\r             for (int j = 1; j <= n; ++j) {\r                 if (A[i - 1] == B[j - 1])\r                     dp[i][j] = dp[i - 1][j - 1] + 1;\r                 else\r                     dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);\r             }\r         }\r         return dp[m][n];\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_maxUncrossedLines_vector_int_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_maxUncrossedLines_vector_int_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1035.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> A;\nvector<int> B;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode A */\nint A_element0=1739201175;\nA.push_back(A_element0);\nint A_element1=1830784719;\nA.push_back(A_element1);\n/* VectorDataNode B */\nint B_element0=-715488215;\nB.push_back(B_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxUncrossedLines_vector_int_vector_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxUncrossedLines(A,B);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_8\\\\1035.cpp\\\\Solution\\\\maxUncrossedLines(vector<int>&,vector<int>&)\");\n\n\nvector<int> EXPECTED_A;\n\nvector<int> EXPECTED_B;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1035.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> A;\nvector<int> B;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode A */\nint A_element0=1739201175;\nA.push_back(A_element0);\nint A_element1=1830784719;\nA.push_back(A_element1);\n/* VectorDataNode B */\nint B_element0=-715488215;\nB.push_back(B_element0);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     int maxUncrossedLines(vector<int> &A, vector<int> &B) {\r         int m = A.size(), n = B.size();\r         vector<vector<int>> dp(m + 1, vector<int>(n + 1, 0));\r         for (int i = 1; i <= m; ++i) {\r             for (int j = 1; j <= n; ++j) {\r                 if (A[i - 1] == B[j - 1])\r                     dp[i][j] = dp[i - 1][j - 1] + 1;\r                 else\r                     dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);\r             }\r         }\r         return dp[m][n];\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "C:\\Users\\min\\OneDrive - vnu.edu.vn\\test\\folder_8\\1035.cpp\\Solution\\maxUncrossedLines(vector<int>&,vector<int>&)"
    },
    {
        "f": [],
        "fm": "bool isBoomerang(vector<vector<int>> &points) {\r         if (points[0] == points[1] || points[0] == points[2] || points[1] == points[2])\r             return false;\r         int x1 = points[0][0], y1 = points[0][1], x2 = points[1][0], y2 = points[1][1], x3 = points[2][0], y3 = points[2][1];\r         if (x1 == x2 && x2 == x3)\r             return false;\r         if (1.0 * (y2 - y1) / (x2 - x1) == 1.0 * (y3 - y2) / (x3 - x2))\r             return false;\r         return true;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_isBoomerang_vector_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_isBoomerang_vector_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1037.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> points;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode points */\nvector<int> points_element0;\nint points_element0_element0=741336364;\npoints_element0.push_back(points_element0_element0);\nint points_element0_element1=1973455101;\npoints_element0.push_back(points_element0_element1);\nint points_element0_element2=-2093655199;\npoints_element0.push_back(points_element0_element2);\npoints.push_back(points_element0);\nvector<int> points_element1;\nint points_element1_element0=217869492;\npoints_element1.push_back(points_element1_element0);\npoints.push_back(points_element1);\nvector<int> points_element2;\nint points_element2_element0=-1973330694;\npoints_element2.push_back(points_element2_element0);\npoints.push_back(points_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isBoomerang_vector_vector_int_random_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isBoomerang(points);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_8\\\\1037.cpp\\\\Solution\\\\isBoomerang(vector<vector<int>>&)\");\n\n\nvector<vector<int>> EXPECTED_points;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1037.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> points;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode points */\nvector<int> points_element0;\nint points_element0_element0=741336364;\npoints_element0.push_back(points_element0_element0);\nint points_element0_element1=1973455101;\npoints_element0.push_back(points_element0_element1);\nint points_element0_element2=-2093655199;\npoints_element0.push_back(points_element0_element2);\npoints.push_back(points_element0);\nvector<int> points_element1;\nint points_element1_element0=217869492;\npoints_element1.push_back(points_element1_element0);\npoints.push_back(points_element1);\nvector<int> points_element2;\nint points_element2_element0=-1973330694;\npoints_element2.push_back(points_element2_element0);\npoints.push_back(points_element2);\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     bool isBoomerang(vector<vector<int>> &points) {\r         if (points[0] == points[1] || points[0] == points[2] || points[1] == points[2])\r             return false;\r         int x1 = points[0][0], y1 = points[0][1], x2 = points[1][0], y2 = points[1][1], x3 = points[2][0], y3 = points[2][1];\r         if (x1 == x2 && x2 == x3)\r             return false;\r         if (1.0 * (y2 - y1) / (x2 - x1) == 1.0 * (y3 - y2) / (x3 - x2))\r             return false;\r         return true;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "C:\\Users\\min\\OneDrive - vnu.edu.vn\\test\\folder_8\\1037.cpp\\Solution\\isBoomerang(vector<vector<int>>&)"
    },
    {
        "f": [],
        "fm": "TreeNode(int x) : val(x), left(NULL), right(NULL) {}",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_TreeNode_int_random_1(void) {\n{\nAKA_test_case_name=\"TreeNode_int_random_1\";\n\n// set up\n;\n\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=1398130276;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_1\");AKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n\n\n\n\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubStructDataNode AKA_INSTANCE___TreeNode */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___TreeNode_x=1398130276;\nAKA_mark(\"<<PRE-CALLING>> Test TreeNode_int_random_1\");AKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\GLOBAL\\\\AKA_INSTANCE___TreeNode\\\\AKA_INSTANCE___TreeNode\\\\TreeNode(int)\");AKA_fCall++;AKA_INSTANCE___TreeNode = new ::TreeNode(AKA_INSTANCE___TreeNode_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nAKA_INSTANCE___TreeNode->left;\n/* PointerStructureDataNode right */\nAKA_INSTANCE___TreeNode->right;\n\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "",
        "c": [],
        "path_fm": "C:\\Users\\min\\OneDrive - vnu.edu.vn\\test\\folder_8\\1038.cpp\\TreeNode\\TreeNode(int)"
    },
    {
        "f": [],
        "fm": "TreeNode *bstToGst(TreeNode *root) {\r         Traverse(root, 0);\r         return root;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_bstToGst_TreeNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_bstToGst_TreeNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1038.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1969935722;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\bstToGst(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_bstToGst_TreeNodemul_random_2\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->bstToGst(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_8\\\\1038.cpp\\\\Solution\\\\bstToGst(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1038.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1969935722;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\bstToGst(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     TreeNode *bstToGst(TreeNode *root) {\r         Traverse(root, 0);\r         return root;\r     }\r \r     int Traverse(TreeNode *node, int val) {\r         if (!node)\r             return val;\r         int right = Traverse(node->right, val);\r         node->val += right;\r         int left = Traverse(node->left, node->val);\r         return left;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "C:\\Users\\min\\OneDrive - vnu.edu.vn\\test\\folder_8\\1038.cpp\\Solution\\bstToGst(TreeNode*)"
    },
    {
        "f": [],
        "fm": "int Traverse(TreeNode *node, int val) {\r         if (!node)\r             return val;\r         int right = Traverse(node->right, val);\r         node->val += right;\r         int left = Traverse(node->left, node->val);\r         return left;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_Traverse_TreeNodemul_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_Traverse_TreeNodemul_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1038.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1598192007;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\Traverse(TreeNode*,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=1204655190;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_left0_x=-707465426;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\Traverse(TreeNode*,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_left_0 = new ::TreeNode(node0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).val=-477219641;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node_0_DOT_left.push_back(AKA_VECTOR_INIT_node_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_left1_x=-1061452591;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\Traverse(TreeNode*,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_left_1 = new ::TreeNode(node0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_left_1).val=-1141839960;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node_0_DOT_left.push_back(AKA_VECTOR_INIT_node_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node_0).left = AKA_VECTOR_INIT_node_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right0_x=264033943;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\Traverse(TreeNode*,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode(node0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).val=284921970;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right1_x=817654292;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\Traverse(TreeNode*,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_1 = new ::TreeNode(node0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).val=-877582174;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right2_x=2004698968;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\Traverse(TreeNode*,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_2 = new ::TreeNode(node0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_2).val=1533234234;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_2).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_2);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=937916904;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_Traverse_TreeNodemul_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->Traverse(node,val);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_8\\\\1038.cpp\\\\Solution\\\\Traverse(TreeNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1038.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1598192007;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\Traverse(TreeNode*,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=1204655190;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_left0_x=-707465426;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\Traverse(TreeNode*,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_left_0 = new ::TreeNode(node0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).val=-477219641;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node_0_DOT_left.push_back(AKA_VECTOR_INIT_node_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_left1_x=-1061452591;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\Traverse(TreeNode*,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_left_1 = new ::TreeNode(node0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_left_1).val=-1141839960;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node_0_DOT_left.push_back(AKA_VECTOR_INIT_node_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node_0).left = AKA_VECTOR_INIT_node_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right0_x=264033943;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\Traverse(TreeNode*,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode(node0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).val=284921970;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right1_x=817654292;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\Traverse(TreeNode*,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_1 = new ::TreeNode(node0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).val=-877582174;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_1).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_right2_x=2004698968;\nAKA_mark(\"Calling: .\\\\folder_8\\\\1038.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1038.cpp\\\\Traverse(TreeNode*,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_2 = new ::TreeNode(node0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_2).val=1533234234;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_2).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_2);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=937916904;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     TreeNode *bstToGst(TreeNode *root) {\r         Traverse(root, 0);\r         return root;\r     }\r \r     int Traverse(TreeNode *node, int val) {\r         if (!node)\r             return val;\r         int right = Traverse(node->right, val);\r         node->val += right;\r         int left = Traverse(node->left, node->val);\r         return left;\r     }\r };",
        "c": [
            ""
        ],
        "path_fm": "C:\\Users\\min\\OneDrive - vnu.edu.vn\\test\\folder_8\\1038.cpp\\Solution\\Traverse(TreeNode*,int)"
    }
]
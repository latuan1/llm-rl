[
    {
        "f": [
            "vector<vector<char>> _board;"
        ],
        "fm": "void solveSudoku(vector<vector<char>> &board) {\r     \r         int n = board.size();\r         int m = board[0].size();\r         \r         solveSudokuHelper(0, 0, n, m, board);\r         board = _board;\r         \r         return;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_solveSudoku_vector_vector_char_random_2(void) {\n{\nAKA_test_case_name=\"Solution_solveSudoku_vector_vector_char_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\37-sudoku-solver.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* VectorDataNode _board */\nvector<char> AKA_INSTANCE___Solution__board_element0;\nchar AKA_INSTANCE___Solution__board_element0_element0=-126;\nAKA_INSTANCE___Solution__board_element0.push_back(AKA_INSTANCE___Solution__board_element0_element0);\nchar AKA_INSTANCE___Solution__board_element0_element1=-3;\nAKA_INSTANCE___Solution__board_element0.push_back(AKA_INSTANCE___Solution__board_element0_element1);\nchar AKA_INSTANCE___Solution__board_element0_element2=-82;\nAKA_INSTANCE___Solution__board_element0.push_back(AKA_INSTANCE___Solution__board_element0_element2);\nAKA_INSTANCE___Solution->_board.push_back(AKA_INSTANCE___Solution__board_element0);\n\n\nvector<vector<char>> board;\n\n/* RootDataNode STATIC */\n/* VectorDataNode board */\nvector<char> board_element0;\nchar board_element0_element0=-115;\nboard_element0.push_back(board_element0_element0);\nchar board_element0_element1=21;\nboard_element0.push_back(board_element0_element1);\nboard.push_back(board_element0);\nvector<char> board_element1;\nchar board_element1_element0=62;\nboard_element1.push_back(board_element1_element0);\nchar board_element1_element1=127;\nboard_element1.push_back(board_element1_element1);\nboard.push_back(board_element1);\nvector<char> board_element2;\nchar board_element2_element0=-97;\nboard_element2.push_back(board_element2_element0);\nboard.push_back(board_element2);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_solveSudoku_vector_vector_char_random_2\");AKA_INSTANCE___Solution->solveSudoku(board);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p83\\\\37-sudoku-solver\\\\37-sudoku-solver.cpp\\\\Solution\\\\solveSudoku(vector<vector<char>>&)\");\n\n/* error assertion */\nvector<vector<char>> EXPECTED_board;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\37-sudoku-solver.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* VectorDataNode _board */\nvector<char> AKA_INSTANCE___Solution__board_element0;\nchar AKA_INSTANCE___Solution__board_element0_element0=-126;\nAKA_INSTANCE___Solution__board_element0.push_back(AKA_INSTANCE___Solution__board_element0_element0);\nchar AKA_INSTANCE___Solution__board_element0_element1=-3;\nAKA_INSTANCE___Solution__board_element0.push_back(AKA_INSTANCE___Solution__board_element0_element1);\nchar AKA_INSTANCE___Solution__board_element0_element2=-82;\nAKA_INSTANCE___Solution__board_element0.push_back(AKA_INSTANCE___Solution__board_element0_element2);\nAKA_INSTANCE___Solution->_board.push_back(AKA_INSTANCE___Solution__board_element0);\n\n\nvector<vector<char>> board;\n\n/* RootDataNode STATIC */\n/* VectorDataNode board */\nvector<char> board_element0;\nchar board_element0_element0=-115;\nboard_element0.push_back(board_element0_element0);\nchar board_element0_element1=21;\nboard_element0.push_back(board_element0_element1);\nboard.push_back(board_element0);\nvector<char> board_element1;\nchar board_element1_element0=62;\nboard_element1.push_back(board_element1_element0);\nchar board_element1_element1=127;\nboard_element1.push_back(board_element1_element1);\nboard.push_back(board_element1);\nvector<char> board_element2;\nchar board_element2_element0=-97;\nboard_element2.push_back(board_element2_element0);\nboard.push_back(board_element2);\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     \r     bool isValid(int r, int c, int n, int m, vector<vector<char>> &board, char k) {\r         \r         \r         // Same colum\r         for(int i=0; i<n; i++) {\r             if(board[i][c] == k)                    return false;\r         }\r         \r         // Same row\r         for(int c=0; c<m; c++) {\r             if(board[r][c] == k)                    return false;\r         }\r         \r         // For submatrices\r         int smr = (r / 3) * 3;\r         int smc = (c / 3) * 3;\r         \r         for(int i=0; i<3; i++) {\r             for(int j=0; j<3; j++) {\r                 if(board[smr + i][smc + j] == k)    return false;\r             }\r         }\r         \r         return true;\r     }\r \r     vector<vector<char>> _board;\r     \r     void solveSudokuHelper(int r, int c, int n, int m, vector<vector<char>> &board) {\r         \r         // If sol is found\r         if(r == n) {\r             \r             for(int i=0; i<n; i++) {\r                 for(int j=0; j<m; j++) {\r                     cout << board[i][j] << \" \";\r                 }\r                 cout << endl;\r             }\r             cout << endl;\r             _board = board;\r             return;\r         }\r         \r         else {\r             \r             int nr, nc;\r             \r             if(c == m-1) {\r                 nr = r + 1,\r                 nc = 0;\r             }\r             else {\r                 nr = r;\r                 nc = c + 1;\r             }\r             \r             \r             if(board[r][c] != '.') {\r                 solveSudokuHelper(nr, nc, n, m, board);\r             }\r             \r             // Check whether k can be placed at (r, c)\r             else {\r \r                 for(char k='1'; k<='9'; k++) {\r                     \r                     if(isValid(r, c, n, m, board, k) == true) {\r                         \r                         board[r][c] = k;\r                         solveSudokuHelper(nr, nc, n, m, board);\r                         board[r][c] = '.';\r                     }\r                 }\r             }\r         }\r         \r         return;\r     }\r         \r     void solveSudoku(vector<vector<char>> &board) {\r     \r         int n = board.size();\r         int m = board[0].size();\r         \r         solveSudokuHelper(0, 0, n, m, board);\r         board = _board;\r         \r         return;\r     }\r     \r };",
        "c": [
            ""
        ],
        "path_fm": "C:\\Users\\daidu\\Desktop\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p83\\37-sudoku-solver\\37-sudoku-solver.cpp\\Solution\\solveSudoku(vector<vector<char>>&)"
    },
    {
        "f": [],
        "fm": "vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {\r     \r         vector<vector<int>> res;\r         \r         if(nums1.size() == 0 || nums2.size() == 0)              return res;\r         \r         using pi = pair<int, vector<int>>;                      // 1st arg - sum, 2nd arg - vector of index pairs\r         priority_queue<pi, vector<pi>, greater<pi>> pq;         // Min Heap\r         \r         for(int i=0; i<nums1.size(); i++)                      pq.push({nums1[i] + nums2[0], vector<int>({i, 0})});\r         \r         while(res.size() < k && pq.empty() == false) {\r                 \r             pi temp = pq.top();\r             pq.pop();\r \r             int i = temp.second[0];\r             int j = temp.second[1];\r \r             res.push_back(vector<int>({nums1[i],nums2[j]}));\r \r             if(j + 1 < nums2.size())                            pq.push({nums1[i] + nums2[j + 1], vector<int>({i, j + 1})});\r         }\r         \r         return res;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_kSmallestPairs_vector_int_vector_int_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_kSmallestPairs_vector_int_vector_int_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\nint k=1;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\nint nums1_element0=1284499167;\nnums1.push_back(nums1_element0);\nint nums1_element1=-363815272;\nnums1.push_back(nums1_element1);\n/* VectorDataNode nums2 */\nint nums2_element0=1633125141;\nnums2.push_back(nums2_element0);\nint nums2_element1=-199786408;\nnums2.push_back(nums2_element1);\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_kSmallestPairs_vector_int_vector_int_int_random_2\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->kSmallestPairs(nums1,nums2,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p83\\\\373-find-k-pairs-with-smallest-sums\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\Solution\\\\kSmallestPairs(vector<int>&,vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums1;\n\nvector<int> EXPECTED_nums2;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\nint k=1;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\nint nums1_element0=1284499167;\nnums1.push_back(nums1_element0);\nint nums1_element1=-363815272;\nnums1.push_back(nums1_element1);\n/* VectorDataNode nums2 */\nint nums2_element0=1633125141;\nnums2.push_back(nums2_element0);\nint nums2_element1=-199786408;\nnums2.push_back(nums2_element1);\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_kSmallestPairs_vector_int_vector_int_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_kSmallestPairs_vector_int_vector_int_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\nint k=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\n/* VectorDataNode nums2 */\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_kSmallestPairs_vector_int_vector_int_int_directed_0\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->kSmallestPairs(nums1,nums2,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p83\\\\373-find-k-pairs-with-smallest-sums\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\Solution\\\\kSmallestPairs(vector<int>&,vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums1;\n\nvector<int> EXPECTED_nums2;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\nint k=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\n/* VectorDataNode nums2 */\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {},
                "td": "void AKA_TEST_Solution_kSmallestPairs_vector_int_vector_int_int_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_kSmallestPairs_vector_int_vector_int_int_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\nint k=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\n/* VectorDataNode nums2 */\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_kSmallestPairs_vector_int_vector_int_int_directed_2\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->kSmallestPairs(nums1,nums2,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p83\\\\373-find-k-pairs-with-smallest-sums\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\Solution\\\\kSmallestPairs(vector<int>&,vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums1;\n\nvector<int> EXPECTED_nums2;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\nint k=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\n/* VectorDataNode nums2 */\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 3,
                "dt": {},
                "td": "void AKA_TEST_Solution_kSmallestPairs_vector_int_vector_int_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_kSmallestPairs_vector_int_vector_int_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\nint k=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\n/* VectorDataNode nums2 */\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_kSmallestPairs_vector_int_vector_int_int_directed_1\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->kSmallestPairs(nums1,nums2,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p83\\\\373-find-k-pairs-with-smallest-sums\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\Solution\\\\kSmallestPairs(vector<int>&,vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums1;\n\nvector<int> EXPECTED_nums2;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\nint k=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\n/* VectorDataNode nums2 */\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 4,
                "dt": {},
                "td": "void AKA_TEST_Solution_kSmallestPairs_vector_int_vector_int_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_kSmallestPairs_vector_int_vector_int_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\nint k=6;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\nint nums1_element0=815351424;\nnums1.push_back(nums1_element0);\n/* VectorDataNode nums2 */\nint nums2_element0=1946846054;\nnums2.push_back(nums2_element0);\nint nums2_element1=1493175623;\nnums2.push_back(nums2_element1);\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_kSmallestPairs_vector_int_vector_int_int_random_1\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->kSmallestPairs(nums1,nums2,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p83\\\\373-find-k-pairs-with-smallest-sums\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\Solution\\\\kSmallestPairs(vector<int>&,vector<int>&,int)\");\n\n\nvector<int> EXPECTED_nums1;\n\nvector<int> EXPECTED_nums2;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\373-find-k-pairs-with-smallest-sums.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums1;\nvector<int> nums2;\n\n\nint k=6;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums1 */\nint nums1_element0=815351424;\nnums1.push_back(nums1_element0);\n/* VectorDataNode nums2 */\nint nums2_element0=1946846054;\nnums2.push_back(nums2_element0);\nint nums2_element1=1493175623;\nnums2.push_back(nums2_element1);\n/* NormalNumberDataNode k */\n/* VectorDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     \r     vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {\r     \r         vector<vector<int>> res;\r         \r         if(nums1.size() == 0 || nums2.size() == 0)              return res;\r         \r         using pi = pair<int, vector<int>>;                      // 1st arg - sum, 2nd arg - vector of index pairs\r         priority_queue<pi, vector<pi>, greater<pi>> pq;         // Min Heap\r         \r         for(int i=0; i<nums1.size(); i++)                      pq.push({nums1[i] + nums2[0], vector<int>({i, 0})});\r         \r         while(res.size() < k && pq.empty() == false) {\r                 \r             pi temp = pq.top();\r             pq.pop();\r \r             int i = temp.second[0];\r             int j = temp.second[1];\r \r             res.push_back(vector<int>({nums1[i],nums2[j]}));\r \r             if(j + 1 < nums2.size())                            pq.push({nums1[i] + nums2[j + 1], vector<int>({i, j + 1})});\r         }\r         \r         return res;\r     }\r     \r };",
        "c": [
            ""
        ],
        "path_fm": "C:\\Users\\daidu\\Desktop\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p83\\373-find-k-pairs-with-smallest-sums\\373-find-k-pairs-with-smallest-sums.cpp\\Solution\\kSmallestPairs(vector<int>&,vector<int>&,int)"
    },
    {
        "f": [],
        "fm": "int kthSmallest(vector<vector<int>>& mat, int k) {\r     \r         int n = mat.size();\r         \r         int low = mat[0][0];\r         int high = mat[n-1][n-1] + 1;\r         \r         while(low < high) {\r             \r             int mid = low + (high - low) / 2;\r             \r             int ind = n - 1;            // jth index\r             int count = 0;\r             \r \t\t\t// For each row, we count the elements that are smaller than mid\r             \r             for(int i=0; i<n; i++) {\r                 \r                 while(ind >= 0 && mat[i][ind] > mid)                        ind--;\r                 count += ind + 1;\r             }\r             \r             if(count < k)                                                   low = mid + 1;\r             else                                                            high = mid;\r         }\r         \r         return low;\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_kthSmallest_vector_vector_int_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_kthSmallest_vector_vector_int_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\378-kth-smallest-element-in-a-sorted-matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> mat;\n\n\nint k=0;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode mat */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_kthSmallest_vector_vector_int_int_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->kthSmallest(mat,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p83\\\\378-kth-smallest-element-in-a-sorted-matrix\\\\378-kth-smallest-element-in-a-sorted-matrix.cpp\\\\Solution\\\\kthSmallest(vector<vector<int>>&,int)\");\n\n\nvector<vector<int>> EXPECTED_mat;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\378-kth-smallest-element-in-a-sorted-matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> mat;\n\n\nint k=0;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode mat */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 1,
                "dt": {},
                "td": "void AKA_TEST_Solution_kthSmallest_vector_vector_int_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_kthSmallest_vector_vector_int_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\378-kth-smallest-element-in-a-sorted-matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> mat;\n\n\nint k=-1888514992;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode mat */\nvector<int> mat_element0;\nint mat_element0_element0=-1433342638;\nmat_element0.push_back(mat_element0_element0);\nint mat_element0_element1=-635356796;\nmat_element0.push_back(mat_element0_element1);\nint mat_element0_element2=-628190300;\nmat_element0.push_back(mat_element0_element2);\nmat.push_back(mat_element0);\nvector<int> mat_element1;\nint mat_element1_element0=-332108426;\nmat_element1.push_back(mat_element1_element0);\nint mat_element1_element1=-936805734;\nmat_element1.push_back(mat_element1_element1);\nint mat_element1_element2=-215817097;\nmat_element1.push_back(mat_element1_element2);\nmat.push_back(mat_element1);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_kthSmallest_vector_vector_int_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->kthSmallest(mat,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p83\\\\378-kth-smallest-element-in-a-sorted-matrix\\\\378-kth-smallest-element-in-a-sorted-matrix.cpp\\\\Solution\\\\kthSmallest(vector<vector<int>>&,int)\");\n\n\nvector<vector<int>> EXPECTED_mat;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\378-kth-smallest-element-in-a-sorted-matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> mat;\n\n\nint k=-1888514992;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode mat */\nvector<int> mat_element0;\nint mat_element0_element0=-1433342638;\nmat_element0.push_back(mat_element0_element0);\nint mat_element0_element1=-635356796;\nmat_element0.push_back(mat_element0_element1);\nint mat_element0_element2=-628190300;\nmat_element0.push_back(mat_element0_element2);\nmat.push_back(mat_element0);\nvector<int> mat_element1;\nint mat_element1_element0=-332108426;\nmat_element1.push_back(mat_element1_element0);\nint mat_element1_element1=-936805734;\nmat_element1.push_back(mat_element1_element1);\nint mat_element1_element2=-215817097;\nmat_element1.push_back(mat_element1_element2);\nmat.push_back(mat_element1);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            },
            {
                "id": 2,
                "dt": {},
                "td": "void AKA_TEST_Solution_kthSmallest_vector_vector_int_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_kthSmallest_vector_vector_int_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\378-kth-smallest-element-in-a-sorted-matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> mat;\n\n\nint k=907279012;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode mat */\nvector<int> mat_element0;\nint mat_element0_element0=-131679948;\nmat_element0.push_back(mat_element0_element0);\nmat.push_back(mat_element0);\nvector<int> mat_element1;\nint mat_element1_element0=759252240;\nmat_element1.push_back(mat_element1_element0);\nmat.push_back(mat_element1);\nvector<int> mat_element2;\nint mat_element2_element0=-197411762;\nmat_element2.push_back(mat_element2_element0);\nint mat_element2_element1=35501387;\nmat_element2.push_back(mat_element2_element1);\nmat.push_back(mat_element2);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_kthSmallest_vector_vector_int_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->kthSmallest(mat,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p83\\\\378-kth-smallest-element-in-a-sorted-matrix\\\\378-kth-smallest-element-in-a-sorted-matrix.cpp\\\\Solution\\\\kthSmallest(vector<vector<int>>&,int)\");\n\n\nvector<vector<int>> EXPECTED_mat;\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\378-kth-smallest-element-in-a-sorted-matrix.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> mat;\n\n\nint k=907279012;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode mat */\nvector<int> mat_element0;\nint mat_element0_element0=-131679948;\nmat_element0.push_back(mat_element0_element0);\nmat.push_back(mat_element0);\nvector<int> mat_element1;\nint mat_element1_element0=759252240;\nmat_element1.push_back(mat_element1_element0);\nmat.push_back(mat_element1);\nvector<int> mat_element2;\nint mat_element2_element0=-197411762;\nmat_element2.push_back(mat_element2_element0);\nint mat_element2_element1=35501387;\nmat_element2.push_back(mat_element2_element1);\nmat.push_back(mat_element2);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     \r     // Using Binary Search\r     int kthSmallest(vector<vector<int>>& mat, int k) {\r     \r         int n = mat.size();\r         \r         int low = mat[0][0];\r         int high = mat[n-1][n-1] + 1;\r         \r         while(low < high) {\r             \r             int mid = low + (high - low) / 2;\r             \r             int ind = n - 1;            // jth index\r             int count = 0;\r             \r \t\t\t// For each row, we count the elements that are smaller than mid\r             \r             for(int i=0; i<n; i++) {\r                 \r                 while(ind >= 0 && mat[i][ind] > mid)                        ind--;\r                 count += ind + 1;\r             }\r             \r             if(count < k)                                                   low = mid + 1;\r             else                                                            high = mid;\r         }\r         \r         return low;\r     }\r     \r };",
        "c": [
            ""
        ],
        "path_fm": "C:\\Users\\daidu\\Desktop\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p83\\378-kth-smallest-element-in-a-sorted-matrix\\378-kth-smallest-element-in-a-sorted-matrix.cpp\\Solution\\kthSmallest(vector<vector<int>>&,int)"
    },
    {
        "f": [
            "vector<int> v;",
            "int n;"
        ],
        "fm": "int getRandom() {\r         \r         return v[rand() % n];\r     }",
        "datatest": [
            {
                "id": 0,
                "dt": {},
                "td": "void AKA_TEST_Solution_getRandom_random_2(void) {\n{\nAKA_test_case_name=\"Solution_getRandom_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution(ListNode*) */\n/* PointerStructureDataNode head */\nstd::vector<ListNode*> AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head;\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___Solution_head0_x=-159718551;\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[0]\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0 = new ::ListNode(AKA_INSTANCE___Solution_head0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0).val=2016160448;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode() */\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode()|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[0]\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_0 = new ::ListNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_0).val=865984469;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___Solution_head0_next1_x=-2139794483;\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[0]\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_1 = new ::ListNode(AKA_INSTANCE___Solution_head0_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_1).val=581409026;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___Solution_head0_next2_x=539850158;\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[0]\\\\head\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_2 = new ::ListNode(AKA_INSTANCE___Solution_head0_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_2).val=-1478894074;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_2).next;\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_2);\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0).next = AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next[0];\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0);\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___Solution_head1_x=-696417118;\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[1]\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1 = new ::ListNode(AKA_INSTANCE___Solution_head1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1).val=-1338082623;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int,ListNode*) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___Solution_head1_next0_x=430811733;\n/* PointerStructureDataNode next */\nListNode* AKA_INSTANCE___Solution_head1_next0_next;\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode(int,ListNode*)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[1]\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int,ListNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_0 = new ::ListNode(AKA_INSTANCE___Solution_head1_next0_x,AKA_INSTANCE___Solution_head1_next0_next);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_0).val=744477244;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_0).next;\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int,ListNode*) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___Solution_head1_next1_x=-827262616;\n/* PointerStructureDataNode next */\nListNode* AKA_INSTANCE___Solution_head1_next1_next;\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode(int,ListNode*)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[1]\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int,ListNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_1 = new ::ListNode(AKA_INSTANCE___Solution_head1_next1_x,AKA_INSTANCE___Solution_head1_next1_next);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_1).val=-641133237;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_1).next;\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_1);\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1).next = AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next[0];\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1);\nListNode* AKA_INSTANCE___Solution_head = AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head[0];\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\Solution\\\\Solution(ListNode*)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution(AKA_INSTANCE___Solution_head);\n/* VectorDataNode v */\nint AKA_INSTANCE___Solution_v_element0=1912535021;\nAKA_INSTANCE___Solution->v.push_back(AKA_INSTANCE___Solution_v_element0);\nint AKA_INSTANCE___Solution_v_element1=144374484;\nAKA_INSTANCE___Solution->v.push_back(AKA_INSTANCE___Solution_v_element1);\n/* NormalNumberDataNode n */\nAKA_INSTANCE___Solution->n=1203634087;\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_getRandom_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->getRandom();\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\Solution\\\\getRandom()\");\n\n\n\n\n// tear down\n;\n}\n}\n",
                "simplified_t": "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution(ListNode*) */\n/* PointerStructureDataNode head */\nstd::vector<ListNode*> AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head;\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___Solution_head0_x=-159718551;\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[0]\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0 = new ::ListNode(AKA_INSTANCE___Solution_head0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0).val=2016160448;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode() */\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode()|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[0]\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_0 = new ::ListNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_0).val=865984469;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___Solution_head0_next1_x=-2139794483;\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[0]\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_1 = new ::ListNode(AKA_INSTANCE___Solution_head0_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_1).val=581409026;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___Solution_head0_next2_x=539850158;\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[0]\\\\head\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_2 = new ::ListNode(AKA_INSTANCE___Solution_head0_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_2).val=-1478894074;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_2).next;\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next_2);\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0).next = AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0_DOT_next[0];\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_0);\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___Solution_head1_x=-696417118;\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[1]\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1 = new ::ListNode(AKA_INSTANCE___Solution_head1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1).val=-1338082623;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int,ListNode*) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___Solution_head1_next0_x=430811733;\n/* PointerStructureDataNode next */\nListNode* AKA_INSTANCE___Solution_head1_next0_next;\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode(int,ListNode*)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[1]\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int,ListNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_0 = new ::ListNode(AKA_INSTANCE___Solution_head1_next0_x,AKA_INSTANCE___Solution_head1_next0_next);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_0).val=744477244;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_0).next;\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int,ListNode*) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___Solution_head1_next1_x=-827262616;\n/* PointerStructureDataNode next */\nListNode* AKA_INSTANCE___Solution_head1_next1_next;\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\ListNode\\\\ListNode(int,ListNode*)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\\\\head\\\\head[1]\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int,ListNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_1 = new ::ListNode(AKA_INSTANCE___Solution_head1_next1_x,AKA_INSTANCE___Solution_head1_next1_next);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_1).val=-641133237;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_1).next;\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next_1);\n(*AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1).next = AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1_DOT_next[0];\nAKA_VECTOR_INIT_AKA_INSTANCE___Solution_head.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head_1);\nListNode* AKA_INSTANCE___Solution_head = AKA_VECTOR_INIT_AKA_INSTANCE___Solution_head[0];\nAKA_mark(\"Calling: .\\\\p83\\\\382-linked-list-random-node\\\\382-linked-list-random-node.cpp\\\\Solution\\\\Solution(ListNode*)|ROOT\\\\382-linked-list-random-node.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution(ListNode*)\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution(AKA_INSTANCE___Solution_head);\n/* VectorDataNode v */\nint AKA_INSTANCE___Solution_v_element0=1912535021;\nAKA_INSTANCE___Solution->v.push_back(AKA_INSTANCE___Solution_v_element0);\nint AKA_INSTANCE___Solution_v_element1=144374484;\nAKA_INSTANCE___Solution->v.push_back(AKA_INSTANCE___Solution_v_element1);\n/* NormalNumberDataNode n */\nAKA_INSTANCE___Solution->n=1203634087;\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n",
                "isAutomated": false,
                "testpath": [],
                "executed_fm": "",
                "executed_fm_masked": "",
                "executed_m": "",
                "executed_m_masked": ""
            }
        ],
        "m": {
            "called_m": [],
            "stub_called_m": [],
            "callee_m": []
        },
        "fc": "class Solution {\r public:\r     \r     vector<int> v;\r     int n;\r     \r     Solution(ListNode* head) {\r         \r         while(head != NULL){\r             v.push_back(head->val);\r             head = head->next;\r         }\r         \r         n = v.size();\r     }\r     \r     int getRandom() {\r         \r         return v[rand() % n];\r     }\r     \r };",
        "c": [
            "Solution(ListNode* head) {\r\n        \r\n        while(head != NULL){\r\n            v.push_back(head->val);\r\n            head = head->next;\r\n        }\r\n        \r\n        n = v.size();\r\n    }"
        ],
        "path_fm": "C:\\Users\\daidu\\Desktop\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p83\\382-linked-list-random-node\\382-linked-list-random-node.cpp\\Solution\\getRandom()"
    }
]